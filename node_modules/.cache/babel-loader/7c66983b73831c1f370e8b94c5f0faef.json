{"ast":null,"code":"import _Promise from 'babel-runtime/core-js/promise';\nimport { caf, raf } from './animationFrame';\nvar bpfrpt_proptype_AnimationTimeoutId = process.env.NODE_ENV === 'production' ? null : {\n  id: PropTypes.number.isRequired\n};\nexport var cancelAnimationTimeout = function cancelAnimationTimeout(frame) {\n  return caf(frame.id);\n};\n/**\n * Recursively calls requestAnimationFrame until a specified delay has been met or exceeded.\n * When the delay time has been reached the function you're timing out will be called.\n *\n * Credit: Joe Lambert (https://gist.github.com/joelambert/1002116#file-requesttimeout-js)\n */\n\nexport var requestAnimationTimeout = function requestAnimationTimeout(callback, delay) {\n  var start = void 0; // wait for end of processing current event handler, because event handler may be long\n\n  _Promise.resolve().then(function () {\n    start = Date.now();\n  });\n\n  var timeout = function timeout() {\n    if (Date.now() - start >= delay) {\n      callback.call();\n    } else {\n      frame.id = raf(timeout);\n    }\n  };\n\n  var frame = {\n    id: raf(timeout)\n  };\n  return frame;\n};\nimport PropTypes from 'prop-types';\nexport { bpfrpt_proptype_AnimationTimeoutId };","map":{"version":3,"sources":["/home/nadaanbaalak/greendeck/client/node_modules/react-virtualized/dist/es/utils/requestAnimationTimeout.js"],"names":["_Promise","caf","raf","bpfrpt_proptype_AnimationTimeoutId","process","env","NODE_ENV","id","PropTypes","number","isRequired","cancelAnimationTimeout","frame","requestAnimationTimeout","callback","delay","start","resolve","then","Date","now","timeout","call"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,+BAArB;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,kBAAzB;AAEA,IAAIC,kCAAkC,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC,IAAxC,GAA+C;AACtFC,EAAAA,EAAE,EAAEC,SAAS,CAACC,MAAV,CAAiBC;AADiE,CAAxF;AAKA,OAAO,IAAIC,sBAAsB,GAAG,SAASA,sBAAT,CAAgCC,KAAhC,EAAuC;AACzE,SAAOX,GAAG,CAACW,KAAK,CAACL,EAAP,CAAV;AACD,CAFM;AAIP;;;;;;;AAMA,OAAO,IAAIM,uBAAuB,GAAG,SAASA,uBAAT,CAAiCC,QAAjC,EAA2CC,KAA3C,EAAkD;AACrF,MAAIC,KAAK,GAAG,KAAK,CAAjB,CADqF,CAErF;;AACAhB,EAAAA,QAAQ,CAACiB,OAAT,GAAmBC,IAAnB,CAAwB,YAAY;AAClCF,IAAAA,KAAK,GAAGG,IAAI,CAACC,GAAL,EAAR;AACD,GAFD;;AAIA,MAAIC,OAAO,GAAG,SAASA,OAAT,GAAmB;AAC/B,QAAIF,IAAI,CAACC,GAAL,KAAaJ,KAAb,IAAsBD,KAA1B,EAAiC;AAC/BD,MAAAA,QAAQ,CAACQ,IAAT;AACD,KAFD,MAEO;AACLV,MAAAA,KAAK,CAACL,EAAN,GAAWL,GAAG,CAACmB,OAAD,CAAd;AACD;AACF,GAND;;AAQA,MAAIT,KAAK,GAAG;AACVL,IAAAA,EAAE,EAAEL,GAAG,CAACmB,OAAD;AADG,GAAZ;AAIA,SAAOT,KAAP;AACD,CApBM;AAqBP,OAAOJ,SAAP,MAAsB,YAAtB;AACA,SAASL,kCAAT","sourcesContent":["import _Promise from 'babel-runtime/core-js/promise';\nimport { caf, raf } from './animationFrame';\n\nvar bpfrpt_proptype_AnimationTimeoutId = process.env.NODE_ENV === 'production' ? null : {\n  id: PropTypes.number.isRequired\n};\n\n\nexport var cancelAnimationTimeout = function cancelAnimationTimeout(frame) {\n  return caf(frame.id);\n};\n\n/**\n * Recursively calls requestAnimationFrame until a specified delay has been met or exceeded.\n * When the delay time has been reached the function you're timing out will be called.\n *\n * Credit: Joe Lambert (https://gist.github.com/joelambert/1002116#file-requesttimeout-js)\n */\nexport var requestAnimationTimeout = function requestAnimationTimeout(callback, delay) {\n  var start = void 0;\n  // wait for end of processing current event handler, because event handler may be long\n  _Promise.resolve().then(function () {\n    start = Date.now();\n  });\n\n  var timeout = function timeout() {\n    if (Date.now() - start >= delay) {\n      callback.call();\n    } else {\n      frame.id = raf(timeout);\n    }\n  };\n\n  var frame = {\n    id: raf(timeout)\n  };\n\n  return frame;\n};\nimport PropTypes from 'prop-types';\nexport { bpfrpt_proptype_AnimationTimeoutId };"]},"metadata":{},"sourceType":"module"}