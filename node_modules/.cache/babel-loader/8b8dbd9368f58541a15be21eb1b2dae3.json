{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\nimport React, { Fragment } from 'react';\nimport PropTypes from \"prop-types\";\nimport classNames from 'classnames';\nimport { LEFT_ALIGNMENT, RIGHT_ALIGNMENT, CENTER_ALIGNMENT } from '../../services';\nimport { resolveWidthAsStyle } from './utils';\nexport var EuiTableRowCell = function EuiTableRowCell(_ref) {\n  var _ref$align = _ref.align,\n      align = _ref$align === void 0 ? LEFT_ALIGNMENT : _ref$align,\n      children = _ref.children,\n      className = _ref.className,\n      truncateText = _ref.truncateText,\n      setScopeRow = _ref.setScopeRow,\n      showOnHover = _ref.showOnHover,\n      _ref$textOnly = _ref.textOnly,\n      textOnly = _ref$textOnly === void 0 ? true : _ref$textOnly,\n      hasActions = _ref.hasActions,\n      isExpander = _ref.isExpander,\n      _ref$mobileOptions = _ref.mobileOptions,\n      mobileOptions = _ref$mobileOptions === void 0 ? {\n    show: true\n  } : _ref$mobileOptions,\n      header = _ref.header,\n      hideForMobile = _ref.hideForMobile,\n      isMobileHeader = _ref.isMobileHeader,\n      isMobileFullWidth = _ref.isMobileFullWidth,\n      style = _ref.style,\n      width = _ref.width,\n      rest = _objectWithoutProperties(_ref, [\"align\", \"children\", \"className\", \"truncateText\", \"setScopeRow\", \"showOnHover\", \"textOnly\", \"hasActions\", \"isExpander\", \"mobileOptions\", \"header\", \"hideForMobile\", \"isMobileHeader\", \"isMobileFullWidth\", \"style\", \"width\"]);\n\n  var cellClasses = classNames('euiTableRowCell', {\n    'euiTableRowCell--hasActions': hasActions,\n    'euiTableRowCell--isExpander': isExpander,\n    'euiTableRowCell--hideForDesktop': mobileOptions.only || isMobileHeader,\n    'euiTableRowCell--enlargeForMobile': mobileOptions.enlarge || isMobileHeader,\n    'euiTableRowCell--isMobileFullWidth': mobileOptions.fullWidth || isMobileFullWidth || isMobileHeader\n  });\n  var contentClasses = classNames('euiTableCellContent', className, {\n    'euiTableCellContent--alignRight': align === RIGHT_ALIGNMENT,\n    'euiTableCellContent--alignCenter': align === CENTER_ALIGNMENT,\n    'euiTableCellContent--showOnHover': showOnHover,\n    'euiTableCellContent--truncateText': truncateText,\n    // We're doing this rigamarole instead of creating `euiTableCellContent--textOnly` for BWC\n    // purposes for the time-being.\n    'euiTableCellContent--overflowingContent': textOnly !== true\n  });\n  var mobileContentClasses = classNames('euiTableCellContent', className, {\n    'euiTableCellContent--alignRight': mobileOptions.align === RIGHT_ALIGNMENT || align === RIGHT_ALIGNMENT,\n    'euiTableCellContent--alignCenter': mobileOptions.align === CENTER_ALIGNMENT || align === RIGHT_ALIGNMENT,\n    'euiTableCellContent--showOnHover': mobileOptions.showOnHover || showOnHover,\n    'euiTableCellContent--truncateText': mobileOptions.truncateText || truncateText,\n    // We're doing this rigamarole instead of creating `euiTableCellContent--textOnly` for BWC\n    // purposes for the time-being.\n    'euiTableCellContent--overflowingContent': mobileOptions.textOnly !== true || textOnly !== true\n  });\n  var childClasses = classNames({\n    euiTableCellContent__text: textOnly === true,\n    euiTableCellContent__hoverItem: showOnHover\n  });\n  var styleObj = resolveWidthAsStyle(style, width);\n\n  function modifyChildren(children) {\n    var modifiedChildren = children;\n\n    if (textOnly === true) {\n      modifiedChildren = React.createElement(\"span\", {\n        className: childClasses\n      }, children);\n    } else if (React.isValidElement(children)) {\n      modifiedChildren = React.Children.map(children, function (child) {\n        return React.cloneElement(child, {\n          className: classNames(child.props.className, childClasses)\n        });\n      });\n    }\n\n    return modifiedChildren;\n  }\n\n  var childrenNode = modifyChildren(children);\n  var hideForMobileClasses = 'euiTableRowCell--hideForMobile';\n  var showForMobileClasses = 'euiTableRowCell--hideForDesktop';\n  var Element = setScopeRow ? 'th' : 'td';\n\n  var sharedProps = _objectSpread({\n    scope: setScopeRow ? 'row' : undefined,\n    style: styleObj\n  }, rest);\n\n  if (mobileOptions.show === false || hideForMobile) {\n    return React.createElement(Element, _extends({\n      className: \"\".concat(cellClasses, \" \").concat(hideForMobileClasses)\n    }, sharedProps), React.createElement(\"div\", {\n      className: contentClasses\n    }, childrenNode));\n  } else {\n    return React.createElement(Element, _extends({\n      className: cellClasses\n    }, sharedProps), (mobileOptions.header || header) && !isMobileHeader && React.createElement(\"div\", {\n      className: \"euiTableRowCell__mobileHeader \".concat(showForMobileClasses)\n    }, mobileOptions.header || header), mobileOptions.render ? React.createElement(Fragment, null, React.createElement(\"div\", {\n      className: \"\".concat(mobileContentClasses, \" \").concat(showForMobileClasses)\n    }, modifyChildren(mobileOptions.render)), React.createElement(\"div\", {\n      className: \"\".concat(contentClasses, \" \").concat(hideForMobileClasses)\n    }, childrenNode)) : React.createElement(\"div\", {\n      className: contentClasses\n    }, childrenNode));\n  }\n};\nEuiTableRowCell.propTypes = {\n  className: PropTypes.string,\n  \"aria-label\": PropTypes.string,\n  \"data-test-subj\": PropTypes.string,\n  align: PropTypes.oneOf([\"left\", \"right\", \"center\"]),\n\n  /**\n     * Don't allow line breaks within cells\n     */\n  showOnHover: PropTypes.bool,\n\n  /**\n     * Setting `textOnly` to `false` will break words unnecessarily on FF and\n     * IE.  To combat this problem on FF, wrap contents with the css utility\n     * `.eui-textBreakWord`.\n     */\n  textOnly: PropTypes.bool,\n\n  /**\n     * _Should only be used for action cells_\n     */\n  truncateText: PropTypes.bool,\n  width: PropTypes.oneOfType([PropTypes.string.isRequired, PropTypes.number.isRequired]),\n\n  /**\n     * Indicates if the column is dedicated to icon-only actions (currently\n     * affects mobile only)\n     */\n  hasActions: PropTypes.bool,\n\n  /**\n     * _DEPRECATED: use `mobileOptions.header`_\n     * The column's header title for use in mobile view (will be added as a\n     * data-attr)\n     */\n  header: PropTypes.string,\n\n  /**\n     * _DEPRECATED: use `mobileOptions.show = false`_\n     * Indicates if the column should not show for mobile users (typically\n     * hidden because a custom mobile header utilizes the column's contents)\n     */\n  hideForMobile: PropTypes.bool,\n\n  /**\n     * Indicates if the column is dedicated as the expandable row toggle\n     */\n  isExpander: PropTypes.bool,\n\n  /**\n     * _DEPRECATED: use `mobileOptions.fullWidth`_\n     * Allocates 100% of the width of the container in mobile view\n     * (typically cells are contained to 50%)\n     */\n  isMobileFullWidth: PropTypes.bool,\n\n  /**\n     * _DEPRECATED: use `mobileOptions.only = true & mobileOptions.header = * false`_\n     * Indicates if the column was created to be the row's heading in mobile\n     * view.  It won't display column's header inline and it the column will\n     * be hidden at larger screens)\n     */\n  isMobileHeader: PropTypes.bool,\n\n  /**\n     * Mobile options for displaying differently at small screens\n     */\n  mobileOptions: PropTypes.shape({\n    /**\n       * If false, will not render the cell at all for mobile\n       */\n    show: PropTypes.bool,\n\n    /**\n       * Only show for mobile? If true, will not render the column at all for desktop\n       */\n    only: PropTypes.bool,\n\n    /**\n       * Custom render/children if different from desktop\n       */\n    render: PropTypes.node,\n\n    /**\n       * The column's header for use in mobile view (automatically passed down\n       * when using `EuiBasicTable`).\n       * Or pass `false` to not show a header at all.\n       */\n    header: PropTypes.oneOfType([PropTypes.node.isRequired, PropTypes.bool.isRequired]),\n\n    /**\n       * Increase text size compared to rest of cells\n       */\n    enlarge: PropTypes.bool,\n\n    /**\n       * Allocates 100% of the width of the container in mobile view\n       * (typically cells are contained to 50%)\n       */\n    fullWidth: PropTypes.bool,\n\n    /**\n       * Horizontal alignment of the text in the cell\n       */\n    align: PropTypes.oneOf([\"left\", \"right\", \"center\"]),\n\n    /**\n       * Don't allow line breaks within cells\n       */\n    showOnHover: PropTypes.bool,\n\n    /**\n       * Setting `textOnly` to `false` will break words unnecessarily on FF and\n       * IE.  To combat this problem on FF, wrap contents with the css utility\n       * `.eui-textBreakWord`.\n       */\n    textOnly: PropTypes.bool,\n\n    /**\n       * _Should only be used for action cells_\n       */\n    truncateText: PropTypes.bool,\n    width: PropTypes.oneOfType([PropTypes.string.isRequired, PropTypes.number.isRequired])\n  }),\n\n  /**\n     * Indicates whether the cell should be marked as the heading for its row\n     */\n  setScopeRow: PropTypes.bool\n};\nEuiTableRowCell.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"EuiTableRowCell\",\n  \"props\": {\n    \"align\": {\n      \"defaultValue\": {\n        \"value\": \"LEFT_ALIGNMENT\",\n        \"computed\": true\n      },\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"\\\"left\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"right\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"center\\\"\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"textOnly\": {\n      \"defaultValue\": {\n        \"value\": \"true\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Setting `textOnly` to `false` will break words unnecessarily on FF and\\nIE.  To combat this problem on FF, wrap contents with the css utility\\n`.eui-textBreakWord`.\"\n    },\n    \"mobileOptions\": {\n      \"defaultValue\": {\n        \"value\": \"{\\n  show: true\\n}\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"show\": {\n            \"name\": \"bool\",\n            \"description\": \"If false, will not render the cell at all for mobile\",\n            \"required\": false\n          },\n          \"only\": {\n            \"name\": \"bool\",\n            \"description\": \"Only show for mobile? If true, will not render the column at all for desktop\",\n            \"required\": false\n          },\n          \"render\": {\n            \"name\": \"node\",\n            \"description\": \"Custom render/children if different from desktop\",\n            \"required\": false\n          },\n          \"header\": {\n            \"name\": \"union\",\n            \"value\": [{\n              \"name\": \"node\"\n            }, {\n              \"name\": \"bool\"\n            }],\n            \"description\": \"The column's header for use in mobile view (automatically passed down\\nwhen using `EuiBasicTable`).\\nOr pass `false` to not show a header at all.\",\n            \"required\": false\n          },\n          \"enlarge\": {\n            \"name\": \"bool\",\n            \"description\": \"Increase text size compared to rest of cells\",\n            \"required\": false\n          },\n          \"fullWidth\": {\n            \"name\": \"bool\",\n            \"description\": \"Allocates 100% of the width of the container in mobile view\\n(typically cells are contained to 50%)\",\n            \"required\": false\n          },\n          \"align\": {\n            \"name\": \"enum\",\n            \"value\": [{\n              \"value\": \"\\\"left\\\"\",\n              \"computed\": false\n            }, {\n              \"value\": \"\\\"right\\\"\",\n              \"computed\": false\n            }, {\n              \"value\": \"\\\"center\\\"\",\n              \"computed\": false\n            }],\n            \"description\": \"Horizontal alignment of the text in the cell\",\n            \"required\": false\n          },\n          \"showOnHover\": {\n            \"name\": \"bool\",\n            \"description\": \"Don't allow line breaks within cells\",\n            \"required\": false\n          },\n          \"textOnly\": {\n            \"name\": \"bool\",\n            \"description\": \"Setting `textOnly` to `false` will break words unnecessarily on FF and\\nIE.  To combat this problem on FF, wrap contents with the css utility\\n`.eui-textBreakWord`.\",\n            \"required\": false\n          },\n          \"truncateText\": {\n            \"name\": \"bool\",\n            \"description\": \"_Should only be used for action cells_\",\n            \"required\": false\n          },\n          \"width\": {\n            \"name\": \"union\",\n            \"value\": [{\n              \"name\": \"string\"\n            }, {\n              \"name\": \"number\"\n            }],\n            \"required\": false\n          }\n        }\n      },\n      \"required\": false,\n      \"description\": \"Mobile options for displaying differently at small screens\"\n    },\n    \"className\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"aria-label\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"data-test-subj\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"showOnHover\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Don't allow line breaks within cells\"\n    },\n    \"truncateText\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"_Should only be used for action cells_\"\n    },\n    \"width\": {\n      \"type\": {\n        \"name\": \"union\",\n        \"value\": [{\n          \"name\": \"string\"\n        }, {\n          \"name\": \"number\"\n        }]\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"hasActions\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Indicates if the column is dedicated to icon-only actions (currently\\naffects mobile only)\"\n    },\n    \"header\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"_DEPRECATED: use `mobileOptions.header`_\\nThe column's header title for use in mobile view (will be added as a\\ndata-attr)\"\n    },\n    \"hideForMobile\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"_DEPRECATED: use `mobileOptions.show = false`_\\nIndicates if the column should not show for mobile users (typically\\nhidden because a custom mobile header utilizes the column's contents)\"\n    },\n    \"isExpander\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Indicates if the column is dedicated as the expandable row toggle\"\n    },\n    \"isMobileFullWidth\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"_DEPRECATED: use `mobileOptions.fullWidth`_\\nAllocates 100% of the width of the container in mobile view\\n(typically cells are contained to 50%)\"\n    },\n    \"isMobileHeader\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"_DEPRECATED: use `mobileOptions.only = true & mobileOptions.header = * false`_\\nIndicates if the column was created to be the row's heading in mobile\\nview.  It won't display column's header inline and it the column will\\nbe hidden at larger screens)\"\n    },\n    \"setScopeRow\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Indicates whether the cell should be marked as the heading for its row\"\n    }\n  }\n};","map":{"version":3,"sources":["/home/nadaanbaalak/greendeck/client/node_modules/@elastic/eui/es/components/table/table_row_cell.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","_objectSpread","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","sourceSymbolKeys","indexOf","propertyIsEnumerable","sourceKeys","React","Fragment","PropTypes","classNames","LEFT_ALIGNMENT","RIGHT_ALIGNMENT","CENTER_ALIGNMENT","resolveWidthAsStyle","EuiTableRowCell","_ref","_ref$align","align","children","className","truncateText","setScopeRow","showOnHover","_ref$textOnly","textOnly","hasActions","isExpander","_ref$mobileOptions","mobileOptions","show","header","hideForMobile","isMobileHeader","isMobileFullWidth","style","width","rest","cellClasses","only","enlarge","fullWidth","contentClasses","mobileContentClasses","childClasses","euiTableCellContent__text","euiTableCellContent__hoverItem","styleObj","modifyChildren","modifiedChildren","createElement","isValidElement","Children","map","child","cloneElement","props","childrenNode","hideForMobileClasses","showForMobileClasses","Element","sharedProps","scope","undefined","concat","render","propTypes","string","oneOf","bool","oneOfType","isRequired","number","shape","node","__docgenInfo"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { Fragment } from 'react';\nimport PropTypes from \"prop-types\";\nimport classNames from 'classnames';\nimport { LEFT_ALIGNMENT, RIGHT_ALIGNMENT, CENTER_ALIGNMENT } from '../../services';\nimport { resolveWidthAsStyle } from './utils';\nexport var EuiTableRowCell = function EuiTableRowCell(_ref) {\n  var _ref$align = _ref.align,\n      align = _ref$align === void 0 ? LEFT_ALIGNMENT : _ref$align,\n      children = _ref.children,\n      className = _ref.className,\n      truncateText = _ref.truncateText,\n      setScopeRow = _ref.setScopeRow,\n      showOnHover = _ref.showOnHover,\n      _ref$textOnly = _ref.textOnly,\n      textOnly = _ref$textOnly === void 0 ? true : _ref$textOnly,\n      hasActions = _ref.hasActions,\n      isExpander = _ref.isExpander,\n      _ref$mobileOptions = _ref.mobileOptions,\n      mobileOptions = _ref$mobileOptions === void 0 ? {\n    show: true\n  } : _ref$mobileOptions,\n      header = _ref.header,\n      hideForMobile = _ref.hideForMobile,\n      isMobileHeader = _ref.isMobileHeader,\n      isMobileFullWidth = _ref.isMobileFullWidth,\n      style = _ref.style,\n      width = _ref.width,\n      rest = _objectWithoutProperties(_ref, [\"align\", \"children\", \"className\", \"truncateText\", \"setScopeRow\", \"showOnHover\", \"textOnly\", \"hasActions\", \"isExpander\", \"mobileOptions\", \"header\", \"hideForMobile\", \"isMobileHeader\", \"isMobileFullWidth\", \"style\", \"width\"]);\n\n  var cellClasses = classNames('euiTableRowCell', {\n    'euiTableRowCell--hasActions': hasActions,\n    'euiTableRowCell--isExpander': isExpander,\n    'euiTableRowCell--hideForDesktop': mobileOptions.only || isMobileHeader,\n    'euiTableRowCell--enlargeForMobile': mobileOptions.enlarge || isMobileHeader,\n    'euiTableRowCell--isMobileFullWidth': mobileOptions.fullWidth || isMobileFullWidth || isMobileHeader\n  });\n  var contentClasses = classNames('euiTableCellContent', className, {\n    'euiTableCellContent--alignRight': align === RIGHT_ALIGNMENT,\n    'euiTableCellContent--alignCenter': align === CENTER_ALIGNMENT,\n    'euiTableCellContent--showOnHover': showOnHover,\n    'euiTableCellContent--truncateText': truncateText,\n    // We're doing this rigamarole instead of creating `euiTableCellContent--textOnly` for BWC\n    // purposes for the time-being.\n    'euiTableCellContent--overflowingContent': textOnly !== true\n  });\n  var mobileContentClasses = classNames('euiTableCellContent', className, {\n    'euiTableCellContent--alignRight': mobileOptions.align === RIGHT_ALIGNMENT || align === RIGHT_ALIGNMENT,\n    'euiTableCellContent--alignCenter': mobileOptions.align === CENTER_ALIGNMENT || align === RIGHT_ALIGNMENT,\n    'euiTableCellContent--showOnHover': mobileOptions.showOnHover || showOnHover,\n    'euiTableCellContent--truncateText': mobileOptions.truncateText || truncateText,\n    // We're doing this rigamarole instead of creating `euiTableCellContent--textOnly` for BWC\n    // purposes for the time-being.\n    'euiTableCellContent--overflowingContent': mobileOptions.textOnly !== true || textOnly !== true\n  });\n  var childClasses = classNames({\n    euiTableCellContent__text: textOnly === true,\n    euiTableCellContent__hoverItem: showOnHover\n  });\n  var styleObj = resolveWidthAsStyle(style, width);\n\n  function modifyChildren(children) {\n    var modifiedChildren = children;\n\n    if (textOnly === true) {\n      modifiedChildren = React.createElement(\"span\", {\n        className: childClasses\n      }, children);\n    } else if (React.isValidElement(children)) {\n      modifiedChildren = React.Children.map(children, function (child) {\n        return React.cloneElement(child, {\n          className: classNames(child.props.className, childClasses)\n        });\n      });\n    }\n\n    return modifiedChildren;\n  }\n\n  var childrenNode = modifyChildren(children);\n  var hideForMobileClasses = 'euiTableRowCell--hideForMobile';\n  var showForMobileClasses = 'euiTableRowCell--hideForDesktop';\n  var Element = setScopeRow ? 'th' : 'td';\n\n  var sharedProps = _objectSpread({\n    scope: setScopeRow ? 'row' : undefined,\n    style: styleObj\n  }, rest);\n\n  if (mobileOptions.show === false || hideForMobile) {\n    return React.createElement(Element, _extends({\n      className: \"\".concat(cellClasses, \" \").concat(hideForMobileClasses)\n    }, sharedProps), React.createElement(\"div\", {\n      className: contentClasses\n    }, childrenNode));\n  } else {\n    return React.createElement(Element, _extends({\n      className: cellClasses\n    }, sharedProps), (mobileOptions.header || header) && !isMobileHeader && React.createElement(\"div\", {\n      className: \"euiTableRowCell__mobileHeader \".concat(showForMobileClasses)\n    }, mobileOptions.header || header), mobileOptions.render ? React.createElement(Fragment, null, React.createElement(\"div\", {\n      className: \"\".concat(mobileContentClasses, \" \").concat(showForMobileClasses)\n    }, modifyChildren(mobileOptions.render)), React.createElement(\"div\", {\n      className: \"\".concat(contentClasses, \" \").concat(hideForMobileClasses)\n    }, childrenNode)) : React.createElement(\"div\", {\n      className: contentClasses\n    }, childrenNode));\n  }\n};\nEuiTableRowCell.propTypes = {\n  className: PropTypes.string,\n  \"aria-label\": PropTypes.string,\n  \"data-test-subj\": PropTypes.string,\n  align: PropTypes.oneOf([\"left\", \"right\", \"center\"]),\n\n  /**\n     * Don't allow line breaks within cells\n     */\n  showOnHover: PropTypes.bool,\n\n  /**\n     * Setting `textOnly` to `false` will break words unnecessarily on FF and\n     * IE.  To combat this problem on FF, wrap contents with the css utility\n     * `.eui-textBreakWord`.\n     */\n  textOnly: PropTypes.bool,\n\n  /**\n     * _Should only be used for action cells_\n     */\n  truncateText: PropTypes.bool,\n  width: PropTypes.oneOfType([PropTypes.string.isRequired, PropTypes.number.isRequired]),\n\n  /**\n     * Indicates if the column is dedicated to icon-only actions (currently\n     * affects mobile only)\n     */\n  hasActions: PropTypes.bool,\n\n  /**\n     * _DEPRECATED: use `mobileOptions.header`_\n     * The column's header title for use in mobile view (will be added as a\n     * data-attr)\n     */\n  header: PropTypes.string,\n\n  /**\n     * _DEPRECATED: use `mobileOptions.show = false`_\n     * Indicates if the column should not show for mobile users (typically\n     * hidden because a custom mobile header utilizes the column's contents)\n     */\n  hideForMobile: PropTypes.bool,\n\n  /**\n     * Indicates if the column is dedicated as the expandable row toggle\n     */\n  isExpander: PropTypes.bool,\n\n  /**\n     * _DEPRECATED: use `mobileOptions.fullWidth`_\n     * Allocates 100% of the width of the container in mobile view\n     * (typically cells are contained to 50%)\n     */\n  isMobileFullWidth: PropTypes.bool,\n\n  /**\n     * _DEPRECATED: use `mobileOptions.only = true & mobileOptions.header = * false`_\n     * Indicates if the column was created to be the row's heading in mobile\n     * view.  It won't display column's header inline and it the column will\n     * be hidden at larger screens)\n     */\n  isMobileHeader: PropTypes.bool,\n\n  /**\n     * Mobile options for displaying differently at small screens\n     */\n  mobileOptions: PropTypes.shape({\n    /**\n       * If false, will not render the cell at all for mobile\n       */\n    show: PropTypes.bool,\n\n    /**\n       * Only show for mobile? If true, will not render the column at all for desktop\n       */\n    only: PropTypes.bool,\n\n    /**\n       * Custom render/children if different from desktop\n       */\n    render: PropTypes.node,\n\n    /**\n       * The column's header for use in mobile view (automatically passed down\n       * when using `EuiBasicTable`).\n       * Or pass `false` to not show a header at all.\n       */\n    header: PropTypes.oneOfType([PropTypes.node.isRequired, PropTypes.bool.isRequired]),\n\n    /**\n       * Increase text size compared to rest of cells\n       */\n    enlarge: PropTypes.bool,\n\n    /**\n       * Allocates 100% of the width of the container in mobile view\n       * (typically cells are contained to 50%)\n       */\n    fullWidth: PropTypes.bool,\n\n    /**\n       * Horizontal alignment of the text in the cell\n       */\n    align: PropTypes.oneOf([\"left\", \"right\", \"center\"]),\n\n    /**\n       * Don't allow line breaks within cells\n       */\n    showOnHover: PropTypes.bool,\n\n    /**\n       * Setting `textOnly` to `false` will break words unnecessarily on FF and\n       * IE.  To combat this problem on FF, wrap contents with the css utility\n       * `.eui-textBreakWord`.\n       */\n    textOnly: PropTypes.bool,\n\n    /**\n       * _Should only be used for action cells_\n       */\n    truncateText: PropTypes.bool,\n    width: PropTypes.oneOfType([PropTypes.string.isRequired, PropTypes.number.isRequired])\n  }),\n\n  /**\n     * Indicates whether the cell should be marked as the heading for its row\n     */\n  setScopeRow: PropTypes.bool\n};\nEuiTableRowCell.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"EuiTableRowCell\",\n  \"props\": {\n    \"align\": {\n      \"defaultValue\": {\n        \"value\": \"LEFT_ALIGNMENT\",\n        \"computed\": true\n      },\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"\\\"left\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"right\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"center\\\"\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"textOnly\": {\n      \"defaultValue\": {\n        \"value\": \"true\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Setting `textOnly` to `false` will break words unnecessarily on FF and\\nIE.  To combat this problem on FF, wrap contents with the css utility\\n`.eui-textBreakWord`.\"\n    },\n    \"mobileOptions\": {\n      \"defaultValue\": {\n        \"value\": \"{\\n  show: true\\n}\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"show\": {\n            \"name\": \"bool\",\n            \"description\": \"If false, will not render the cell at all for mobile\",\n            \"required\": false\n          },\n          \"only\": {\n            \"name\": \"bool\",\n            \"description\": \"Only show for mobile? If true, will not render the column at all for desktop\",\n            \"required\": false\n          },\n          \"render\": {\n            \"name\": \"node\",\n            \"description\": \"Custom render/children if different from desktop\",\n            \"required\": false\n          },\n          \"header\": {\n            \"name\": \"union\",\n            \"value\": [{\n              \"name\": \"node\"\n            }, {\n              \"name\": \"bool\"\n            }],\n            \"description\": \"The column's header for use in mobile view (automatically passed down\\nwhen using `EuiBasicTable`).\\nOr pass `false` to not show a header at all.\",\n            \"required\": false\n          },\n          \"enlarge\": {\n            \"name\": \"bool\",\n            \"description\": \"Increase text size compared to rest of cells\",\n            \"required\": false\n          },\n          \"fullWidth\": {\n            \"name\": \"bool\",\n            \"description\": \"Allocates 100% of the width of the container in mobile view\\n(typically cells are contained to 50%)\",\n            \"required\": false\n          },\n          \"align\": {\n            \"name\": \"enum\",\n            \"value\": [{\n              \"value\": \"\\\"left\\\"\",\n              \"computed\": false\n            }, {\n              \"value\": \"\\\"right\\\"\",\n              \"computed\": false\n            }, {\n              \"value\": \"\\\"center\\\"\",\n              \"computed\": false\n            }],\n            \"description\": \"Horizontal alignment of the text in the cell\",\n            \"required\": false\n          },\n          \"showOnHover\": {\n            \"name\": \"bool\",\n            \"description\": \"Don't allow line breaks within cells\",\n            \"required\": false\n          },\n          \"textOnly\": {\n            \"name\": \"bool\",\n            \"description\": \"Setting `textOnly` to `false` will break words unnecessarily on FF and\\nIE.  To combat this problem on FF, wrap contents with the css utility\\n`.eui-textBreakWord`.\",\n            \"required\": false\n          },\n          \"truncateText\": {\n            \"name\": \"bool\",\n            \"description\": \"_Should only be used for action cells_\",\n            \"required\": false\n          },\n          \"width\": {\n            \"name\": \"union\",\n            \"value\": [{\n              \"name\": \"string\"\n            }, {\n              \"name\": \"number\"\n            }],\n            \"required\": false\n          }\n        }\n      },\n      \"required\": false,\n      \"description\": \"Mobile options for displaying differently at small screens\"\n    },\n    \"className\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"aria-label\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"data-test-subj\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"showOnHover\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Don't allow line breaks within cells\"\n    },\n    \"truncateText\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"_Should only be used for action cells_\"\n    },\n    \"width\": {\n      \"type\": {\n        \"name\": \"union\",\n        \"value\": [{\n          \"name\": \"string\"\n        }, {\n          \"name\": \"number\"\n        }]\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"hasActions\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Indicates if the column is dedicated to icon-only actions (currently\\naffects mobile only)\"\n    },\n    \"header\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"_DEPRECATED: use `mobileOptions.header`_\\nThe column's header title for use in mobile view (will be added as a\\ndata-attr)\"\n    },\n    \"hideForMobile\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"_DEPRECATED: use `mobileOptions.show = false`_\\nIndicates if the column should not show for mobile users (typically\\nhidden because a custom mobile header utilizes the column's contents)\"\n    },\n    \"isExpander\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Indicates if the column is dedicated as the expandable row toggle\"\n    },\n    \"isMobileFullWidth\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"_DEPRECATED: use `mobileOptions.fullWidth`_\\nAllocates 100% of the width of the container in mobile view\\n(typically cells are contained to 50%)\"\n    },\n    \"isMobileHeader\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"_DEPRECATED: use `mobileOptions.only = true & mobileOptions.header = * false`_\\nIndicates if the column was created to be the row's heading in mobile\\nview.  It won't display column's header inline and it the column will\\nbe hidden at larger screens)\"\n    },\n    \"setScopeRow\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Indicates whether the cell should be marked as the heading for its row\"\n    }\n  }\n};"]},"metadata":{},"sourceType":"module"}