{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\nimport dateMath from '@elastic/datemath';\nimport moment from 'moment';\nimport { get } from '../../../services/objects';\nimport { isString } from '../../../services/predicate';\nimport { relativeUnitsFromLargestToSmallest } from './relative_options';\nvar ROUND_DELIMETER = '/';\nexport function parseRelativeParts(value) {\n  var matches = isString(value) && value.match(/now(([\\-\\+])([0-9]+)([smhdwMy])(\\/[smhdwMy])?)?/);\n  var operator = matches && matches[2];\n  var count = matches && matches[3];\n  var unit = matches && matches[4];\n  var roundBy = matches && matches[5];\n\n  if (count && unit) {\n    var isRounded = roundBy ? true : false;\n    var roundUnit = isRounded && roundBy ? roundBy.replace(ROUND_DELIMETER, '') : undefined;\n    return _objectSpread({\n      count: parseInt(count, 10),\n      unit: operator === '+' ? \"\".concat(unit, \"+\") : unit,\n      round: isRounded\n    }, roundUnit ? {\n      roundUnit: roundUnit\n    } : {});\n  }\n\n  var results = {\n    count: 0,\n    unit: 's',\n    round: false\n  };\n  var duration = moment.duration(moment().diff(dateMath.parse(value)));\n  var unitOp = '';\n\n  for (var i = 0; i < relativeUnitsFromLargestToSmallest.length; i++) {\n    var asRelative = duration.as(relativeUnitsFromLargestToSmallest[i]);\n    if (asRelative < 0) unitOp = '+';\n\n    if (Math.abs(asRelative) > 1) {\n      results.count = Math.round(Math.abs(asRelative));\n      results.unit = relativeUnitsFromLargestToSmallest[i] + unitOp;\n      results.round = false;\n      break;\n    }\n  }\n\n  return results;\n}\nexport var toRelativeStringFromParts = function toRelativeStringFromParts(relativeParts) {\n  var count = get(relativeParts, 'count', 0);\n  var isRounded = get(relativeParts, 'round', false);\n\n  if (count === 0 && !isRounded) {\n    return 'now';\n  }\n\n  var matches = get(relativeParts, 'unit', 's').match(/([smhdwMy])(\\+)?/);\n  var unit = matches[1];\n  var operator = matches && matches[2] ? matches[2] : '-';\n  var round = isRounded ? \"\".concat(ROUND_DELIMETER).concat(unit) : '';\n  return \"now\".concat(operator).concat(count).concat(unit).concat(round);\n};","map":{"version":3,"sources":["/home/nadaanbaalak/greendeck/client/node_modules/@elastic/eui/es/components/date_picker/super_date_picker/relative_utils.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","dateMath","moment","get","isString","relativeUnitsFromLargestToSmallest","ROUND_DELIMETER","parseRelativeParts","matches","match","operator","count","unit","roundBy","isRounded","roundUnit","replace","undefined","parseInt","concat","round","results","duration","diff","parse","unitOp","asRelative","as","Math","abs","toRelativeStringFromParts","relativeParts"],"mappings":"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","sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport dateMath from '@elastic/datemath';\nimport moment from 'moment';\nimport { get } from '../../../services/objects';\nimport { isString } from '../../../services/predicate';\nimport { relativeUnitsFromLargestToSmallest } from './relative_options';\nvar ROUND_DELIMETER = '/';\nexport function parseRelativeParts(value) {\n  var matches = isString(value) && value.match(/now(([\\-\\+])([0-9]+)([smhdwMy])(\\/[smhdwMy])?)?/);\n  var operator = matches && matches[2];\n  var count = matches && matches[3];\n  var unit = matches && matches[4];\n  var roundBy = matches && matches[5];\n\n  if (count && unit) {\n    var isRounded = roundBy ? true : false;\n    var roundUnit = isRounded && roundBy ? roundBy.replace(ROUND_DELIMETER, '') : undefined;\n    return _objectSpread({\n      count: parseInt(count, 10),\n      unit: operator === '+' ? \"\".concat(unit, \"+\") : unit,\n      round: isRounded\n    }, roundUnit ? {\n      roundUnit: roundUnit\n    } : {});\n  }\n\n  var results = {\n    count: 0,\n    unit: 's',\n    round: false\n  };\n  var duration = moment.duration(moment().diff(dateMath.parse(value)));\n  var unitOp = '';\n\n  for (var i = 0; i < relativeUnitsFromLargestToSmallest.length; i++) {\n    var asRelative = duration.as(relativeUnitsFromLargestToSmallest[i]);\n    if (asRelative < 0) unitOp = '+';\n\n    if (Math.abs(asRelative) > 1) {\n      results.count = Math.round(Math.abs(asRelative));\n      results.unit = relativeUnitsFromLargestToSmallest[i] + unitOp;\n      results.round = false;\n      break;\n    }\n  }\n\n  return results;\n}\nexport var toRelativeStringFromParts = function toRelativeStringFromParts(relativeParts) {\n  var count = get(relativeParts, 'count', 0);\n  var isRounded = get(relativeParts, 'round', false);\n\n  if (count === 0 && !isRounded) {\n    return 'now';\n  }\n\n  var matches = get(relativeParts, 'unit', 's').match(/([smhdwMy])(\\+)?/);\n  var unit = matches[1];\n  var operator = matches && matches[2] ? matches[2] : '-';\n  var round = isRounded ? \"\".concat(ROUND_DELIMETER).concat(unit) : '';\n  return \"now\".concat(operator).concat(count).concat(unit).concat(round);\n};"]},"metadata":{},"sourceType":"module"}