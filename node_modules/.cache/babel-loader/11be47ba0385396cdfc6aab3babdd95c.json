{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useDependentState = useDependentState;\n\nvar _react = require(\"react\");\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction useDependentState(valueFn, deps) {\n  var _useState = (0, _react.useState)(valueFn),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1]; // use ref instead of a state to avoid causing an unnecessary re-render\n\n\n  var hasMounted = (0, _react.useRef)(false);\n  (0, _react.useEffect)(function () {\n    // don't call setState on initial mount\n    if (hasMounted.current === true) {\n      setState(valueFn);\n    } else {\n      hasMounted.current = true;\n    } // purposefully omitting `updateCount.current` and `valueFn`\n    // this means updating only the valueFn has no effect, but allows for more natural feeling hook use\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, deps);\n  return [state, setState];\n}","map":{"version":3,"sources":["/home/nadaanbaalak/greendeck/client/node_modules/@elastic/eui/lib/services/hooks/useDependentState.js"],"names":["Object","defineProperty","exports","value","useDependentState","_react","require","_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","TypeError","Symbol","iterator","prototype","toString","call","_arr","_n","_d","_e","undefined","_i","_s","next","done","push","length","err","Array","isArray","valueFn","deps","_useState","useState","_useState2","state","setState","hasMounted","useRef","useEffect","current"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useDependentState = useDependentState;\n\nvar _react = require(\"react\");\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction useDependentState(valueFn, deps) {\n  var _useState = (0, _react.useState)(valueFn),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1]; // use ref instead of a state to avoid causing an unnecessary re-render\n\n\n  var hasMounted = (0, _react.useRef)(false);\n  (0, _react.useEffect)(function () {\n    // don't call setState on initial mount\n    if (hasMounted.current === true) {\n      setState(valueFn);\n    } else {\n      hasMounted.current = true;\n    } // purposefully omitting `updateCount.current` and `valueFn`\n    // this means updating only the valueFn has no effect, but allows for more natural feeling hook use\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, deps);\n  return [state, setState];\n}"]},"metadata":{},"sourceType":"script"}