{"ast":null,"code":"/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { SortDirection } from './sort_direction';\nimport { get } from '../objects';\nexport var Comparators = Object.freeze({\n  default: function _default() {\n    var direction = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SortDirection.ASC;\n    return function (v1, v2) {\n      // JavaScript's comparison of null/undefined (and some others not handled here) values always returns `false`\n      // (https://www.ecma-international.org/ecma-262/#sec-abstract-relational-comparison)\n      // resulting in cases where v1 < v2 and v1 > v2 are both false.\n      // This leads to unpredictable sorting results in multiple JS engine sorting algorithms\n      // which causes unpredictable user experiences.\n      // Instead:\n      // * 1. push undefined/null values to the end of the sorted list, _regardless of sort direction_\n      //    (non-sortable values always appear at the end, and sortable values are sorted at the top)\n      // * 2. report undefined/null values as equal\n      // * 3. when both values are comparable they are sorted normally\n      var v1IsComparable = v1 != null;\n      var v2IsComparable = v2 != null; // * 1.\n\n      if (v1IsComparable && !v2IsComparable) {\n        return -1;\n      }\n\n      if (!v1IsComparable && v2IsComparable) {\n        return 1;\n      } // * 2.\n\n\n      if (!v1IsComparable && !v2IsComparable) {\n        return 0;\n      } // * 3.\n\n\n      if (v1 === v2) {\n        return 0;\n      }\n\n      var result = v1 > v2 ? 1 : -1;\n      return SortDirection.isAsc(direction) ? result : -1 * result;\n    };\n  },\n  reverse: function reverse(comparator) {\n    return function (v1, v2) {\n      return comparator(v2, v1);\n    };\n  },\n  value: function (_value) {\n    function value(_x, _x2) {\n      return _value.apply(this, arguments);\n    }\n\n    value.toString = function () {\n      return _value.toString();\n    };\n\n    return value;\n  }(function (valueCallback, comparator) {\n    if (!comparator) {\n      comparator = this.default(SortDirection.ASC);\n    }\n\n    return function (o1, o2) {\n      return comparator(valueCallback(o1), valueCallback(o2));\n    };\n  }),\n  property: function property(prop, comparator) {\n    return this.value(function (value) {\n      return get(value, prop);\n    }, comparator);\n  }\n});","map":{"version":3,"sources":["/home/nadaanbaalak/greendeck/client/node_modules/@elastic/eui/es/services/sort/comparators.js"],"names":["SortDirection","get","Comparators","Object","freeze","default","_default","direction","arguments","length","undefined","ASC","v1","v2","v1IsComparable","v2IsComparable","result","isAsc","reverse","comparator","value","_value","_x","_x2","apply","toString","valueCallback","o1","o2","property","prop"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAkBA,SAASA,aAAT,QAA8B,kBAA9B;AACA,SAASC,GAAT,QAAoB,YAApB;AACA,OAAO,IAAIC,WAAW,GAAGC,MAAM,CAACC,MAAP,CAAc;AACrCC,EAAAA,OAAO,EAAE,SAASC,QAAT,GAAoB;AAC3B,QAAIC,SAAS,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoER,aAAa,CAACW,GAAlG;AACA,WAAO,UAAUC,EAAV,EAAcC,EAAd,EAAkB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAIC,cAAc,GAAGF,EAAE,IAAI,IAA3B;AACA,UAAIG,cAAc,GAAGF,EAAE,IAAI,IAA3B,CAZuB,CAYU;;AAEjC,UAAIC,cAAc,IAAI,CAACC,cAAvB,EAAuC;AACrC,eAAO,CAAC,CAAR;AACD;;AAED,UAAI,CAACD,cAAD,IAAmBC,cAAvB,EAAuC;AACrC,eAAO,CAAP;AACD,OApBsB,CAoBrB;;;AAGF,UAAI,CAACD,cAAD,IAAmB,CAACC,cAAxB,EAAwC;AACtC,eAAO,CAAP;AACD,OAzBsB,CAyBrB;;;AAGF,UAAIH,EAAE,KAAKC,EAAX,EAAe;AACb,eAAO,CAAP;AACD;;AAED,UAAIG,MAAM,GAAGJ,EAAE,GAAGC,EAAL,GAAU,CAAV,GAAc,CAAC,CAA5B;AACA,aAAOb,aAAa,CAACiB,KAAd,CAAoBV,SAApB,IAAiCS,MAAjC,GAA0C,CAAC,CAAD,GAAKA,MAAtD;AACD,KAlCD;AAmCD,GAtCoC;AAuCrCE,EAAAA,OAAO,EAAE,SAASA,OAAT,CAAiBC,UAAjB,EAA6B;AACpC,WAAO,UAAUP,EAAV,EAAcC,EAAd,EAAkB;AACvB,aAAOM,UAAU,CAACN,EAAD,EAAKD,EAAL,CAAjB;AACD,KAFD;AAGD,GA3CoC;AA4CrCQ,EAAAA,KAAK,EAAE,UAAUC,MAAV,EAAkB;AACvB,aAASD,KAAT,CAAeE,EAAf,EAAmBC,GAAnB,EAAwB;AACtB,aAAOF,MAAM,CAACG,KAAP,CAAa,IAAb,EAAmBhB,SAAnB,CAAP;AACD;;AAEDY,IAAAA,KAAK,CAACK,QAAN,GAAiB,YAAY;AAC3B,aAAOJ,MAAM,CAACI,QAAP,EAAP;AACD,KAFD;;AAIA,WAAOL,KAAP;AACD,GAVM,CAUL,UAAUM,aAAV,EAAyBP,UAAzB,EAAqC;AACrC,QAAI,CAACA,UAAL,EAAiB;AACfA,MAAAA,UAAU,GAAG,KAAKd,OAAL,CAAaL,aAAa,CAACW,GAA3B,CAAb;AACD;;AAED,WAAO,UAAUgB,EAAV,EAAcC,EAAd,EAAkB;AACvB,aAAOT,UAAU,CAACO,aAAa,CAACC,EAAD,CAAd,EAAoBD,aAAa,CAACE,EAAD,CAAjC,CAAjB;AACD,KAFD;AAGD,GAlBM,CA5C8B;AA+DrCC,EAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkBC,IAAlB,EAAwBX,UAAxB,EAAoC;AAC5C,WAAO,KAAKC,KAAL,CAAW,UAAUA,KAAV,EAAiB;AACjC,aAAOnB,GAAG,CAACmB,KAAD,EAAQU,IAAR,CAAV;AACD,KAFM,EAEJX,UAFI,CAAP;AAGD;AAnEoC,CAAd,CAAlB","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { SortDirection } from './sort_direction';\nimport { get } from '../objects';\nexport var Comparators = Object.freeze({\n  default: function _default() {\n    var direction = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SortDirection.ASC;\n    return function (v1, v2) {\n      // JavaScript's comparison of null/undefined (and some others not handled here) values always returns `false`\n      // (https://www.ecma-international.org/ecma-262/#sec-abstract-relational-comparison)\n      // resulting in cases where v1 < v2 and v1 > v2 are both false.\n      // This leads to unpredictable sorting results in multiple JS engine sorting algorithms\n      // which causes unpredictable user experiences.\n      // Instead:\n      // * 1. push undefined/null values to the end of the sorted list, _regardless of sort direction_\n      //    (non-sortable values always appear at the end, and sortable values are sorted at the top)\n      // * 2. report undefined/null values as equal\n      // * 3. when both values are comparable they are sorted normally\n      var v1IsComparable = v1 != null;\n      var v2IsComparable = v2 != null; // * 1.\n\n      if (v1IsComparable && !v2IsComparable) {\n        return -1;\n      }\n\n      if (!v1IsComparable && v2IsComparable) {\n        return 1;\n      } // * 2.\n\n\n      if (!v1IsComparable && !v2IsComparable) {\n        return 0;\n      } // * 3.\n\n\n      if (v1 === v2) {\n        return 0;\n      }\n\n      var result = v1 > v2 ? 1 : -1;\n      return SortDirection.isAsc(direction) ? result : -1 * result;\n    };\n  },\n  reverse: function reverse(comparator) {\n    return function (v1, v2) {\n      return comparator(v2, v1);\n    };\n  },\n  value: function (_value) {\n    function value(_x, _x2) {\n      return _value.apply(this, arguments);\n    }\n\n    value.toString = function () {\n      return _value.toString();\n    };\n\n    return value;\n  }(function (valueCallback, comparator) {\n    if (!comparator) {\n      comparator = this.default(SortDirection.ASC);\n    }\n\n    return function (o1, o2) {\n      return comparator(valueCallback(o1), valueCallback(o2));\n    };\n  }),\n  property: function property(prop, comparator) {\n    return this.value(function (value) {\n      return get(value, prop);\n    }, comparator);\n  }\n});"]},"metadata":{},"sourceType":"module"}