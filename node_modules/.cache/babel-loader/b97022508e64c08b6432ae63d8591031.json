{"ast":null,"code":"/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport chroma from 'chroma-js';\nexport var MID_COLOR_STOP = '#EBEFF5';\n/**\n * This function takes an array of colors and returns an array of interpolated\n * colors based on the number of steps/len needed for use in UI elements such as charts.\n * Derived from https://github.com/gka/palettes (Unlicensed)\n */\n\nexport function colorPalette(\n/**\n * The main color code or array of codes\n */\ncolors) {\n  var len = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n  var diverging = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var categorical = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var hexStart = colors.slice();\n  var hexEnd = [];\n  var even = len % 2 === 0;\n  var numColorsLeft = diverging ? Math.ceil(len / 2) + (even ? 1 : 0) : len;\n  var numColorsRight = diverging ? Math.ceil(len / 2) + (even ? 1 : 0) : 0; // If only a single color is provided prepend the mid-point color\n\n  if (hexStart.length === 1) {\n    hexStart.unshift(MID_COLOR_STOP);\n  } // If diverging, split the start array and duplicate the mid color\n\n\n  if (diverging) {\n    // If there's no midpoint, create one\n    if (hexStart.length < 3) {\n      hexStart[2] = hexStart[1];\n      hexStart[1] = MID_COLOR_STOP;\n    }\n\n    var numColorsHalf = Math.ceil(hexStart.length / 2);\n    var colorsLeft = hexStart.filter(function (item, index) {\n      if (index < numColorsHalf) {\n        return true; // keep it\n      }\n    });\n    var colorsRight = hexStart.reverse().filter(function (item, index) {\n      if (index < numColorsHalf) {\n        return true; // keep it\n      }\n    }).reverse();\n    hexStart = colorsLeft;\n    hexEnd = colorsRight;\n  }\n\n  function createSteps(colors, steps) {\n    if (!colors.length) {\n      return colors;\n    }\n\n    if (!categorical) {\n      return chroma.bezier(colors).scale().correctLightness().colors(steps);\n    } else {\n      return chroma.scale(colors).colors(steps);\n    }\n  }\n\n  var stepsLeft = createSteps(hexStart, numColorsLeft);\n  var stepsRight = createSteps(hexEnd, numColorsRight);\n  return (even && diverging ? stepsLeft.slice(0, stepsLeft.length - 1) : stepsLeft).concat(stepsRight.slice(1));\n}","map":{"version":3,"sources":["/home/nadaanbaalak/greendeck/client/node_modules/@elastic/eui/es/services/color/color_palette.js"],"names":["chroma","MID_COLOR_STOP","colorPalette","colors","len","arguments","length","undefined","diverging","categorical","hexStart","slice","hexEnd","even","numColorsLeft","Math","ceil","numColorsRight","unshift","numColorsHalf","colorsLeft","filter","item","index","colorsRight","reverse","createSteps","steps","bezier","scale","correctLightness","stepsLeft","stepsRight","concat"],"mappings":"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","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport chroma from 'chroma-js';\nexport var MID_COLOR_STOP = '#EBEFF5';\n/**\n * This function takes an array of colors and returns an array of interpolated\n * colors based on the number of steps/len needed for use in UI elements such as charts.\n * Derived from https://github.com/gka/palettes (Unlicensed)\n */\n\nexport function colorPalette(\n/**\n * The main color code or array of codes\n */\ncolors) {\n  var len = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n  var diverging = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var categorical = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var hexStart = colors.slice();\n  var hexEnd = [];\n  var even = len % 2 === 0;\n  var numColorsLeft = diverging ? Math.ceil(len / 2) + (even ? 1 : 0) : len;\n  var numColorsRight = diverging ? Math.ceil(len / 2) + (even ? 1 : 0) : 0; // If only a single color is provided prepend the mid-point color\n\n  if (hexStart.length === 1) {\n    hexStart.unshift(MID_COLOR_STOP);\n  } // If diverging, split the start array and duplicate the mid color\n\n\n  if (diverging) {\n    // If there's no midpoint, create one\n    if (hexStart.length < 3) {\n      hexStart[2] = hexStart[1];\n      hexStart[1] = MID_COLOR_STOP;\n    }\n\n    var numColorsHalf = Math.ceil(hexStart.length / 2);\n    var colorsLeft = hexStart.filter(function (item, index) {\n      if (index < numColorsHalf) {\n        return true; // keep it\n      }\n    });\n    var colorsRight = hexStart.reverse().filter(function (item, index) {\n      if (index < numColorsHalf) {\n        return true; // keep it\n      }\n    }).reverse();\n    hexStart = colorsLeft;\n    hexEnd = colorsRight;\n  }\n\n  function createSteps(colors, steps) {\n    if (!colors.length) {\n      return colors;\n    }\n\n    if (!categorical) {\n      return chroma.bezier(colors).scale().correctLightness().colors(steps);\n    } else {\n      return chroma.scale(colors).colors(steps);\n    }\n  }\n\n  var stepsLeft = createSteps(hexStart, numColorsLeft);\n  var stepsRight = createSteps(hexEnd, numColorsRight);\n  return (even && diverging ? stepsLeft.slice(0, stepsLeft.length - 1) : stepsLeft).concat(stepsRight.slice(1));\n}"]},"metadata":{},"sourceType":"module"}