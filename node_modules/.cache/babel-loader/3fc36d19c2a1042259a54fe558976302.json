{"ast":null,"code":"/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { unstable_batchedUpdates } from 'react-dom';\nvar _queue = [];\n\nfunction processQueue() {\n  // the queued functions trigger react setStates which, if unbatched,\n  // each cause a full update->render->dom pass _per function_\n  // instead, tell React to wait until all updates are finished before re-rendering\n  unstable_batchedUpdates(function () {\n    for (var i = 0; i < _queue.length; i++) {\n      _queue[i]();\n    }\n\n    _queue.length = 0;\n  });\n}\n\nexport function enqueueStateChange(fn) {\n  if (_queue.length === 0) {\n    setTimeout(processQueue);\n  }\n\n  _queue.push(fn);\n}","map":{"version":3,"sources":["/home/nadaanbaalak/greendeck/client/node_modules/@elastic/eui/es/services/react.js"],"names":["unstable_batchedUpdates","_queue","processQueue","i","length","enqueueStateChange","fn","setTimeout","push"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAkBA,SAASA,uBAAT,QAAwC,WAAxC;AACA,IAAIC,MAAM,GAAG,EAAb;;AAEA,SAASC,YAAT,GAAwB;AACtB;AACA;AACA;AACAF,EAAAA,uBAAuB,CAAC,YAAY;AAClC,SAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,MAAM,CAACG,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACtCF,MAAAA,MAAM,CAACE,CAAD,CAAN;AACD;;AAEDF,IAAAA,MAAM,CAACG,MAAP,GAAgB,CAAhB;AACD,GANsB,CAAvB;AAOD;;AAED,OAAO,SAASC,kBAAT,CAA4BC,EAA5B,EAAgC;AACrC,MAAIL,MAAM,CAACG,MAAP,KAAkB,CAAtB,EAAyB;AACvBG,IAAAA,UAAU,CAACL,YAAD,CAAV;AACD;;AAEDD,EAAAA,MAAM,CAACO,IAAP,CAAYF,EAAZ;AACD","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { unstable_batchedUpdates } from 'react-dom';\nvar _queue = [];\n\nfunction processQueue() {\n  // the queued functions trigger react setStates which, if unbatched,\n  // each cause a full update->render->dom pass _per function_\n  // instead, tell React to wait until all updates are finished before re-rendering\n  unstable_batchedUpdates(function () {\n    for (var i = 0; i < _queue.length; i++) {\n      _queue[i]();\n    }\n\n    _queue.length = 0;\n  });\n}\n\nexport function enqueueStateChange(fn) {\n  if (_queue.length === 0) {\n    setTimeout(processQueue);\n  }\n\n  _queue.push(fn);\n}"]},"metadata":{},"sourceType":"module"}