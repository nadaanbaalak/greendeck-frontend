{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\nimport React from 'react';\nimport PropTypes from \"prop-types\";\nimport classNames from 'classnames';\nimport { EuiBetaBadge } from '../badge/beta_badge';\nvar paddingSizeToClassNameMap = {\n  none: null,\n  s: 'euiPanel--paddingSmall',\n  m: 'euiPanel--paddingMedium',\n  l: 'euiPanel--paddingLarge'\n};\nexport var SIZES = Object.keys(paddingSizeToClassNameMap);\nexport var EuiPanel = function EuiPanel(_ref) {\n  var children = _ref.children,\n      className = _ref.className,\n      _ref$paddingSize = _ref.paddingSize,\n      paddingSize = _ref$paddingSize === void 0 ? 'm' : _ref$paddingSize,\n      _ref$hasShadow = _ref.hasShadow,\n      hasShadow = _ref$hasShadow === void 0 ? false : _ref$hasShadow,\n      _ref$grow = _ref.grow,\n      grow = _ref$grow === void 0 ? true : _ref$grow,\n      panelRef = _ref.panelRef,\n      onClick = _ref.onClick,\n      betaBadgeLabel = _ref.betaBadgeLabel,\n      betaBadgeTooltipContent = _ref.betaBadgeTooltipContent,\n      betaBadgeTitle = _ref.betaBadgeTitle,\n      rest = _objectWithoutProperties(_ref, [\"children\", \"className\", \"paddingSize\", \"hasShadow\", \"grow\", \"panelRef\", \"onClick\", \"betaBadgeLabel\", \"betaBadgeTooltipContent\", \"betaBadgeTitle\"]);\n\n  var classes = classNames('euiPanel', paddingSize ? paddingSizeToClassNameMap[paddingSize] : null, {\n    'euiPanel--shadow': hasShadow,\n    'euiPanel--flexGrowZero': !grow,\n    'euiPanel--isClickable': onClick,\n    'euiPanel--hasBetaBadge': betaBadgeLabel\n  }, className);\n  var optionalBetaBadge;\n\n  if (betaBadgeLabel) {\n    optionalBetaBadge = React.createElement(\"span\", {\n      className: \"euiPanel__betaBadgeWrapper\"\n    }, React.createElement(EuiBetaBadge, {\n      label: betaBadgeLabel,\n      title: betaBadgeTitle,\n      tooltipContent: betaBadgeTooltipContent,\n      className: \"euiPanel__betaBadge\"\n    }));\n  }\n\n  if (onClick) {\n    return React.createElement(\"button\", _extends({\n      ref: panelRef,\n      className: classes,\n      onClick: onClick\n    }, rest), optionalBetaBadge, children);\n  }\n\n  return React.createElement(\"div\", _extends({\n    ref: panelRef,\n    className: classes\n  }, rest), optionalBetaBadge, children);\n};\nEuiPanel.propTypes = {\n  /**\n     * If active, adds a deeper shadow to the panel\n     */\n\n  /**\n     * If active, adds a deeper shadow to the panel\n     */\n  hasShadow: PropTypes.bool,\n\n  /**\n     * Padding applied to the panel\n     */\n\n  /**\n     * Padding applied to the panel\n     */\n  paddingSize: PropTypes.oneOf([\"none\", \"s\", \"m\", \"l\"]),\n\n  /**\n     * When true the panel will grow to match `EuiFlexItem`\n     */\n\n  /**\n     * When true the panel will grow to match `EuiFlexItem`\n     */\n  grow: PropTypes.bool,\n  panelRef: PropTypes.any,\n\n  /**\n     * Add a badge to the panel to label it as \"Beta\" or other non-GA state\n     */\n\n  /**\n     * Add a badge to the panel to label it as \"Beta\" or other non-GA state\n     */\n  betaBadgeLabel: PropTypes.string,\n\n  /**\n     * Add a description to the beta badge (will appear in a tooltip)\n     */\n\n  /**\n     * Add a description to the beta badge (will appear in a tooltip)\n     */\n  betaBadgeTooltipContent: PropTypes.node,\n\n  /**\n     * Optional title will be supplied as tooltip title or title attribute otherwise the label will be used\n     */\n\n  /**\n     * Optional title will be supplied as tooltip title or title attribute otherwise the label will be used\n     */\n  betaBadgeTitle: PropTypes.string,\n  className: PropTypes.string,\n  \"aria-label\": PropTypes.string,\n  \"data-test-subj\": PropTypes.string\n};\nEuiPanel.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"EuiPanel\",\n  \"props\": {\n    \"paddingSize\": {\n      \"defaultValue\": {\n        \"value\": \"'m'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"\\\"none\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"s\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"m\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"l\\\"\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"Padding applied to the panel\"\n    },\n    \"hasShadow\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"If active, adds a deeper shadow to the panel\"\n    },\n    \"grow\": {\n      \"defaultValue\": {\n        \"value\": \"true\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"When true the panel will grow to match `EuiFlexItem`\"\n    },\n    \"panelRef\": {\n      \"type\": {\n        \"name\": \"any\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"betaBadgeLabel\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Add a badge to the panel to label it as \\\"Beta\\\" or other non-GA state\"\n    },\n    \"betaBadgeTooltipContent\": {\n      \"type\": {\n        \"name\": \"node\"\n      },\n      \"required\": false,\n      \"description\": \"Add a description to the beta badge (will appear in a tooltip)\"\n    },\n    \"betaBadgeTitle\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Optional title will be supplied as tooltip title or title attribute otherwise the label will be used\"\n    },\n    \"className\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"aria-label\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"data-test-subj\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};","map":{"version":3,"sources":["/home/nadaanbaalak/greendeck/client/node_modules/@elastic/eui/es/components/panel/panel.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","indexOf","propertyIsEnumerable","sourceKeys","keys","React","PropTypes","classNames","EuiBetaBadge","paddingSizeToClassNameMap","none","s","m","l","SIZES","EuiPanel","_ref","children","className","_ref$paddingSize","paddingSize","_ref$hasShadow","hasShadow","_ref$grow","grow","panelRef","onClick","betaBadgeLabel","betaBadgeTooltipContent","betaBadgeTitle","rest","classes","optionalBetaBadge","createElement","label","title","tooltipContent","ref","propTypes","bool","oneOf","any","string","node","__docgenInfo"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from \"prop-types\";\nimport classNames from 'classnames';\nimport { EuiBetaBadge } from '../badge/beta_badge';\nvar paddingSizeToClassNameMap = {\n  none: null,\n  s: 'euiPanel--paddingSmall',\n  m: 'euiPanel--paddingMedium',\n  l: 'euiPanel--paddingLarge'\n};\nexport var SIZES = Object.keys(paddingSizeToClassNameMap);\nexport var EuiPanel = function EuiPanel(_ref) {\n  var children = _ref.children,\n      className = _ref.className,\n      _ref$paddingSize = _ref.paddingSize,\n      paddingSize = _ref$paddingSize === void 0 ? 'm' : _ref$paddingSize,\n      _ref$hasShadow = _ref.hasShadow,\n      hasShadow = _ref$hasShadow === void 0 ? false : _ref$hasShadow,\n      _ref$grow = _ref.grow,\n      grow = _ref$grow === void 0 ? true : _ref$grow,\n      panelRef = _ref.panelRef,\n      onClick = _ref.onClick,\n      betaBadgeLabel = _ref.betaBadgeLabel,\n      betaBadgeTooltipContent = _ref.betaBadgeTooltipContent,\n      betaBadgeTitle = _ref.betaBadgeTitle,\n      rest = _objectWithoutProperties(_ref, [\"children\", \"className\", \"paddingSize\", \"hasShadow\", \"grow\", \"panelRef\", \"onClick\", \"betaBadgeLabel\", \"betaBadgeTooltipContent\", \"betaBadgeTitle\"]);\n\n  var classes = classNames('euiPanel', paddingSize ? paddingSizeToClassNameMap[paddingSize] : null, {\n    'euiPanel--shadow': hasShadow,\n    'euiPanel--flexGrowZero': !grow,\n    'euiPanel--isClickable': onClick,\n    'euiPanel--hasBetaBadge': betaBadgeLabel\n  }, className);\n  var optionalBetaBadge;\n\n  if (betaBadgeLabel) {\n    optionalBetaBadge = React.createElement(\"span\", {\n      className: \"euiPanel__betaBadgeWrapper\"\n    }, React.createElement(EuiBetaBadge, {\n      label: betaBadgeLabel,\n      title: betaBadgeTitle,\n      tooltipContent: betaBadgeTooltipContent,\n      className: \"euiPanel__betaBadge\"\n    }));\n  }\n\n  if (onClick) {\n    return React.createElement(\"button\", _extends({\n      ref: panelRef,\n      className: classes,\n      onClick: onClick\n    }, rest), optionalBetaBadge, children);\n  }\n\n  return React.createElement(\"div\", _extends({\n    ref: panelRef,\n    className: classes\n  }, rest), optionalBetaBadge, children);\n};\nEuiPanel.propTypes = {\n  /**\n     * If active, adds a deeper shadow to the panel\n     */\n\n  /**\n     * If active, adds a deeper shadow to the panel\n     */\n  hasShadow: PropTypes.bool,\n\n  /**\n     * Padding applied to the panel\n     */\n\n  /**\n     * Padding applied to the panel\n     */\n  paddingSize: PropTypes.oneOf([\"none\", \"s\", \"m\", \"l\"]),\n\n  /**\n     * When true the panel will grow to match `EuiFlexItem`\n     */\n\n  /**\n     * When true the panel will grow to match `EuiFlexItem`\n     */\n  grow: PropTypes.bool,\n  panelRef: PropTypes.any,\n\n  /**\n     * Add a badge to the panel to label it as \"Beta\" or other non-GA state\n     */\n\n  /**\n     * Add a badge to the panel to label it as \"Beta\" or other non-GA state\n     */\n  betaBadgeLabel: PropTypes.string,\n\n  /**\n     * Add a description to the beta badge (will appear in a tooltip)\n     */\n\n  /**\n     * Add a description to the beta badge (will appear in a tooltip)\n     */\n  betaBadgeTooltipContent: PropTypes.node,\n\n  /**\n     * Optional title will be supplied as tooltip title or title attribute otherwise the label will be used\n     */\n\n  /**\n     * Optional title will be supplied as tooltip title or title attribute otherwise the label will be used\n     */\n  betaBadgeTitle: PropTypes.string,\n  className: PropTypes.string,\n  \"aria-label\": PropTypes.string,\n  \"data-test-subj\": PropTypes.string\n};\nEuiPanel.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"EuiPanel\",\n  \"props\": {\n    \"paddingSize\": {\n      \"defaultValue\": {\n        \"value\": \"'m'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"\\\"none\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"s\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"m\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"l\\\"\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"Padding applied to the panel\"\n    },\n    \"hasShadow\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"If active, adds a deeper shadow to the panel\"\n    },\n    \"grow\": {\n      \"defaultValue\": {\n        \"value\": \"true\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"When true the panel will grow to match `EuiFlexItem`\"\n    },\n    \"panelRef\": {\n      \"type\": {\n        \"name\": \"any\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"betaBadgeLabel\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Add a badge to the panel to label it as \\\"Beta\\\" or other non-GA state\"\n    },\n    \"betaBadgeTooltipContent\": {\n      \"type\": {\n        \"name\": \"node\"\n      },\n      \"required\": false,\n      \"description\": \"Add a description to the beta badge (will appear in a tooltip)\"\n    },\n    \"betaBadgeTitle\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Optional title will be supplied as tooltip title or title attribute otherwise the label will be used\"\n    },\n    \"className\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"aria-label\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"data-test-subj\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};"]},"metadata":{},"sourceType":"module"}