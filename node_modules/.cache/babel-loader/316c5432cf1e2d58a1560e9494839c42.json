{"ast":null,"code":"/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { dateFormatAliases } from '../../../services/format'; // ESLint doesn't realise that we can import Moment directly.\n// eslint-disable-next-line import/named\n\nimport moment from 'moment';\nvar utc = moment.utc;\nvar GRANULARITY_KEY = '__eui_granularity';\nvar FORMAT_KEY = '__eui_format';\nexport var Granularity = Object.freeze({\n  DAY: {\n    es: 'd',\n    js: 'day',\n    isSame: function isSame(d1, d2) {\n      return d1.isSame(d2, 'day');\n    },\n    start: function start(date) {\n      return date.startOf('day');\n    },\n    startOfNext: function startOfNext(date) {\n      return date.add(1, 'days').startOf('day');\n    },\n    iso8601: function iso8601(date) {\n      return date.format('YYYY-MM-DD');\n    }\n  },\n  WEEK: {\n    es: 'w',\n    js: 'week',\n    isSame: function isSame(d1, d2) {\n      return d1.isSame(d2, 'week');\n    },\n    start: function start(date) {\n      return date.startOf('week');\n    },\n    startOfNext: function startOfNext(date) {\n      return date.add(1, 'weeks').startOf('week');\n    },\n    iso8601: function iso8601(date) {\n      return date.format('YYYY-MM-DD');\n    }\n  },\n  MONTH: {\n    es: 'M',\n    js: 'month',\n    isSame: function isSame(d1, d2) {\n      return d1.isSame(d2, 'month');\n    },\n    start: function start(date) {\n      return date.startOf('month');\n    },\n    startOfNext: function startOfNext(date) {\n      return date.add(1, 'months').startOf('month');\n    },\n    iso8601: function iso8601(date) {\n      return date.format('YYYY-MM');\n    }\n  },\n  YEAR: {\n    es: 'y',\n    js: 'year',\n    isSame: function isSame(d1, d2) {\n      return d1.isSame(d2, 'year');\n    },\n    start: function start(date) {\n      return date.startOf('year');\n    },\n    startOfNext: function startOfNext(date) {\n      return date.add(1, 'years').startOf('year');\n    },\n    iso8601: function iso8601(date) {\n      return date.format('YYYY');\n    }\n  }\n});\n\nvar parseTime = function parseTime(value) {\n  var parsed = utc(value, ['HH:mm', 'H:mm', 'H:mm', 'h:mm a', 'h:mm A', 'hh:mm a', 'hh:mm A'], true);\n\n  if (parsed.isValid()) {\n    parsed[FORMAT_KEY] = parsed.creationData().format;\n    return parsed;\n  }\n};\n\nvar parseDay = function parseDay(value) {\n  var parsed;\n\n  switch (value.toLowerCase()) {\n    case 'today':\n      parsed = utc().startOf('day');\n      parsed[GRANULARITY_KEY] = Granularity.DAY;\n      parsed[FORMAT_KEY] = value;\n      return parsed;\n\n    case 'yesterday':\n      parsed = utc().subtract(1, 'days').startOf('day');\n      parsed[GRANULARITY_KEY] = Granularity.DAY;\n      parsed[FORMAT_KEY] = value;\n      return parsed;\n\n    case 'tomorrow':\n      parsed = utc().add(1, 'days').startOf('day');\n      parsed[GRANULARITY_KEY] = Granularity.DAY;\n      parsed[FORMAT_KEY] = value;\n      return parsed;\n\n    default:\n      parsed = utc(value, ['ddd', 'dddd', 'D MMM YY', 'Do MMM YY', 'D MMM YYYY', 'Do MMM YYYY', 'DD MMM YY', 'DD MMM YYYY', 'D MMMM YY', 'Do MMMM YY', 'D MMMM YYYY', 'Do MMMM YYYY', 'DD MMMM YY', 'DD MMMM YYYY', 'YYYY-MM-DD'], true);\n\n      if (parsed.isValid()) {\n        try {\n          parsed[GRANULARITY_KEY] = Granularity.DAY;\n          parsed[FORMAT_KEY] = parsed.creationData().format;\n          return parsed;\n        } catch (e) {\n          console.error(e);\n        }\n      }\n\n  }\n};\n\nvar parseWeek = function parseWeek(value) {\n  var parsed;\n\n  switch (value.toLowerCase()) {\n    case 'this week':\n      parsed = utc();\n      break;\n\n    case 'last week':\n      parsed = utc().subtract(1, 'weeks');\n      break;\n\n    case 'next week':\n      parsed = utc().add(1, 'weeks');\n      break;\n\n    default:\n      var match = value.match(/week (\\d+)/i);\n\n      if (match) {\n        var weekNr = Number(match[1]);\n        parsed = utc().weeks(weekNr);\n      } else {\n        return;\n      }\n\n  }\n\n  if (parsed != null && parsed.isValid()) {\n    parsed = parsed.startOf('week');\n    parsed[GRANULARITY_KEY] = Granularity.WEEK;\n    parsed[FORMAT_KEY] = parsed.creationData().format;\n    return parsed;\n  }\n};\n\nvar parseMonth = function parseMonth(value) {\n  var parsed;\n\n  switch (value.toLowerCase()) {\n    case 'this month':\n      parsed = utc();\n      break;\n\n    case 'next month':\n      parsed = utc().endOf('month').add(2, 'days');\n      break;\n\n    case 'last month':\n      parsed = utc().startOf('month').subtract(2, 'days');\n      break;\n\n    default:\n      parsed = utc(value, ['MMM', 'MMMM'], true);\n\n      if (parsed.isValid()) {\n        var now = utc();\n        parsed.year(now.year());\n      } else {\n        parsed = utc(value, ['MMM YY', 'MMMM YY', 'MMM YYYY', 'MMMM YYYY', 'YYYY MMM', 'YYYY MMMM', 'YYYY-MM'], true);\n      }\n\n  }\n\n  if (parsed.isValid()) {\n    parsed.startOf('month');\n    parsed[GRANULARITY_KEY] = Granularity.MONTH;\n    parsed[FORMAT_KEY] = parsed.creationData().format;\n    return parsed;\n  }\n};\n\nvar parseYear = function parseYear(value) {\n  var parsed;\n\n  switch (value.toLowerCase()) {\n    case 'this year':\n      parsed = utc().startOf('year');\n      parsed[GRANULARITY_KEY] = Granularity.YEAR;\n      parsed[FORMAT_KEY] = value;\n      return parsed;\n\n    case 'next year':\n      parsed = utc().endOf('year').add(2, 'months').startOf('year');\n      parsed[GRANULARITY_KEY] = Granularity.YEAR;\n      parsed[FORMAT_KEY] = value;\n      return parsed;\n\n    case 'last year':\n      parsed = utc().startOf('year').subtract(2, 'months').startOf('year');\n      parsed[GRANULARITY_KEY] = Granularity.YEAR;\n      parsed[FORMAT_KEY] = value;\n      return parsed;\n\n    default:\n      parsed = utc(value, ['YY', 'YYYY'], true);\n\n      if (parsed.isValid()) {\n        parsed[GRANULARITY_KEY] = Granularity.YEAR;\n        parsed[FORMAT_KEY] = parsed.creationData().format;\n        return parsed;\n      }\n\n  }\n};\n\nvar parseDefault = function parseDefault(value) {\n  var parsed = utc(value, [moment.ISO_8601, moment.RFC_2822, 'DD MMM YY HH:mm', 'DD MMM YY HH:mm:ss', 'DD MMM YYYY HH:mm', 'DD MMM YYYY HH:mm:ss', 'DD MMMM YYYY HH:mm', 'DD MMMM YYYY HH:mm:ss'], true);\n\n  if (!parsed.isValid()) {\n    var time = Date.parse(value);\n    var offset = moment(time).utcOffset();\n    parsed = utc(time);\n    parsed.add(offset, 'minutes');\n  }\n\n  if (parsed.isValid()) {\n    parsed[FORMAT_KEY] = parsed.creationData().format;\n  }\n\n  return parsed;\n};\n\nvar printDay = function printDay(now, date, format) {\n  if (format.match(/yesterday|tomorrow|today/i)) {\n    if (now.isSame(date, 'day')) {\n      return 'today';\n    }\n\n    if (now.subtract(1, 'day').isSame(date, 'day')) {\n      return 'yesterday';\n    }\n\n    if (now.add(1, 'day').isSame(date, 'day')) {\n      return 'tomorrow';\n    }\n\n    if (now.isSame(date, 'week')) {\n      return date.format('dddd');\n    }\n  }\n\n  return date.format(format);\n};\n\nvar printWeek = function printWeek(now, date, format) {\n  if (format.match(/(?:this|next|last) week/i)) {\n    if (now.isSame(date, 'week')) {\n      return 'This Week';\n    }\n\n    if (now.startOf('week').subtract(2, 'days').isSame(date, 'week')) {\n      return 'Last Week';\n    }\n\n    if (now.endOf('week').add(2, 'days').isSame(date, 'week')) {\n      return 'Next Week';\n    }\n  }\n\n  return date.format(format);\n};\n\nvar printMonth = function printMonth(now, date, format) {\n  if (format.match(/(?:this|next|last) month/i)) {\n    if (now.isSame(date, 'month')) {\n      return 'This Month';\n    }\n\n    if (now.startOf('month').subtract(2, 'days').isSame(date, 'month')) {\n      return 'Last Month';\n    }\n\n    if (now.endOf('month').add(2, 'days').isSame(date, 'month')) {\n      return 'Next Month';\n    }\n  }\n\n  return date.format(format);\n};\n\nvar printYear = function printYear(now, date, format) {\n  if (format.match(/(?:this|next|last) year/i)) {\n    if (now.isSame(date, 'year')) {\n      return 'This Year';\n    }\n\n    if (now.startOf('year').subtract(2, 'months').isSame(date, 'year')) {\n      return 'Last Year';\n    }\n\n    if (now.endOf('year').add(2, 'months').isSame(date, 'year')) {\n      return 'Next Year';\n    }\n  }\n\n  return date.format(format);\n};\n\nexport var printIso8601 = function printIso8601(value) {\n  return utc(value).format(moment.defaultFormatUtc);\n};\nexport var dateGranularity = function dateGranularity(parsedDate) {\n  return parsedDate[GRANULARITY_KEY];\n};\nexport var dateFormat = Object.freeze({\n  parse: function parse(value) {\n    var parsed = parseDay(value) || parseMonth(value) || parseYear(value) || parseWeek(value) || parseTime(value) || parseDefault(value);\n\n    if (!parsed) {\n      throw new Error(\"could not parse [\".concat(value, \"] as date\"));\n    }\n\n    return parsed;\n  },\n  print: function print(date) {\n    var defaultGranularity = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n    date = moment.isMoment(date) ? date : utc(date);\n    var euiDate = date;\n    var now = utc();\n    var format = euiDate[FORMAT_KEY];\n\n    if (!format) {\n      return date.format(dateFormatAliases.iso8601);\n    }\n\n    var granularity = euiDate[GRANULARITY_KEY] || defaultGranularity;\n\n    switch (granularity) {\n      case Granularity.DAY:\n        return printDay(now, date, format);\n\n      case Granularity.WEEK:\n        return printWeek(now, date, format);\n\n      case Granularity.MONTH:\n        return printMonth(now, date, format);\n\n      case Granularity.YEAR:\n        return printYear(now, date, format);\n\n      default:\n        return date.format(format);\n    }\n  }\n});","map":{"version":3,"sources":["/home/nadaanbaalak/greendeck/client/node_modules/@elastic/eui/es/components/search_bar/query/date_format.js"],"names":["dateFormatAliases","moment","utc","GRANULARITY_KEY","FORMAT_KEY","Granularity","Object","freeze","DAY","es","js","isSame","d1","d2","start","date","startOf","startOfNext","add","iso8601","format","WEEK","MONTH","YEAR","parseTime","value","parsed","isValid","creationData","parseDay","toLowerCase","subtract","e","console","error","parseWeek","match","weekNr","Number","weeks","parseMonth","endOf","now","year","parseYear","parseDefault","ISO_8601","RFC_2822","time","Date","parse","offset","utcOffset","printDay","printWeek","printMonth","printYear","printIso8601","defaultFormatUtc","dateGranularity","parsedDate","dateFormat","Error","concat","print","defaultGranularity","arguments","length","undefined","isMoment","euiDate","granularity"],"mappings":"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","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { dateFormatAliases } from '../../../services/format'; // ESLint doesn't realise that we can import Moment directly.\n// eslint-disable-next-line import/named\n\nimport moment from 'moment';\nvar utc = moment.utc;\nvar GRANULARITY_KEY = '__eui_granularity';\nvar FORMAT_KEY = '__eui_format';\nexport var Granularity = Object.freeze({\n  DAY: {\n    es: 'd',\n    js: 'day',\n    isSame: function isSame(d1, d2) {\n      return d1.isSame(d2, 'day');\n    },\n    start: function start(date) {\n      return date.startOf('day');\n    },\n    startOfNext: function startOfNext(date) {\n      return date.add(1, 'days').startOf('day');\n    },\n    iso8601: function iso8601(date) {\n      return date.format('YYYY-MM-DD');\n    }\n  },\n  WEEK: {\n    es: 'w',\n    js: 'week',\n    isSame: function isSame(d1, d2) {\n      return d1.isSame(d2, 'week');\n    },\n    start: function start(date) {\n      return date.startOf('week');\n    },\n    startOfNext: function startOfNext(date) {\n      return date.add(1, 'weeks').startOf('week');\n    },\n    iso8601: function iso8601(date) {\n      return date.format('YYYY-MM-DD');\n    }\n  },\n  MONTH: {\n    es: 'M',\n    js: 'month',\n    isSame: function isSame(d1, d2) {\n      return d1.isSame(d2, 'month');\n    },\n    start: function start(date) {\n      return date.startOf('month');\n    },\n    startOfNext: function startOfNext(date) {\n      return date.add(1, 'months').startOf('month');\n    },\n    iso8601: function iso8601(date) {\n      return date.format('YYYY-MM');\n    }\n  },\n  YEAR: {\n    es: 'y',\n    js: 'year',\n    isSame: function isSame(d1, d2) {\n      return d1.isSame(d2, 'year');\n    },\n    start: function start(date) {\n      return date.startOf('year');\n    },\n    startOfNext: function startOfNext(date) {\n      return date.add(1, 'years').startOf('year');\n    },\n    iso8601: function iso8601(date) {\n      return date.format('YYYY');\n    }\n  }\n});\n\nvar parseTime = function parseTime(value) {\n  var parsed = utc(value, ['HH:mm', 'H:mm', 'H:mm', 'h:mm a', 'h:mm A', 'hh:mm a', 'hh:mm A'], true);\n\n  if (parsed.isValid()) {\n    parsed[FORMAT_KEY] = parsed.creationData().format;\n    return parsed;\n  }\n};\n\nvar parseDay = function parseDay(value) {\n  var parsed;\n\n  switch (value.toLowerCase()) {\n    case 'today':\n      parsed = utc().startOf('day');\n      parsed[GRANULARITY_KEY] = Granularity.DAY;\n      parsed[FORMAT_KEY] = value;\n      return parsed;\n\n    case 'yesterday':\n      parsed = utc().subtract(1, 'days').startOf('day');\n      parsed[GRANULARITY_KEY] = Granularity.DAY;\n      parsed[FORMAT_KEY] = value;\n      return parsed;\n\n    case 'tomorrow':\n      parsed = utc().add(1, 'days').startOf('day');\n      parsed[GRANULARITY_KEY] = Granularity.DAY;\n      parsed[FORMAT_KEY] = value;\n      return parsed;\n\n    default:\n      parsed = utc(value, ['ddd', 'dddd', 'D MMM YY', 'Do MMM YY', 'D MMM YYYY', 'Do MMM YYYY', 'DD MMM YY', 'DD MMM YYYY', 'D MMMM YY', 'Do MMMM YY', 'D MMMM YYYY', 'Do MMMM YYYY', 'DD MMMM YY', 'DD MMMM YYYY', 'YYYY-MM-DD'], true);\n\n      if (parsed.isValid()) {\n        try {\n          parsed[GRANULARITY_KEY] = Granularity.DAY;\n          parsed[FORMAT_KEY] = parsed.creationData().format;\n          return parsed;\n        } catch (e) {\n          console.error(e);\n        }\n      }\n\n  }\n};\n\nvar parseWeek = function parseWeek(value) {\n  var parsed;\n\n  switch (value.toLowerCase()) {\n    case 'this week':\n      parsed = utc();\n      break;\n\n    case 'last week':\n      parsed = utc().subtract(1, 'weeks');\n      break;\n\n    case 'next week':\n      parsed = utc().add(1, 'weeks');\n      break;\n\n    default:\n      var match = value.match(/week (\\d+)/i);\n\n      if (match) {\n        var weekNr = Number(match[1]);\n        parsed = utc().weeks(weekNr);\n      } else {\n        return;\n      }\n\n  }\n\n  if (parsed != null && parsed.isValid()) {\n    parsed = parsed.startOf('week');\n    parsed[GRANULARITY_KEY] = Granularity.WEEK;\n    parsed[FORMAT_KEY] = parsed.creationData().format;\n    return parsed;\n  }\n};\n\nvar parseMonth = function parseMonth(value) {\n  var parsed;\n\n  switch (value.toLowerCase()) {\n    case 'this month':\n      parsed = utc();\n      break;\n\n    case 'next month':\n      parsed = utc().endOf('month').add(2, 'days');\n      break;\n\n    case 'last month':\n      parsed = utc().startOf('month').subtract(2, 'days');\n      break;\n\n    default:\n      parsed = utc(value, ['MMM', 'MMMM'], true);\n\n      if (parsed.isValid()) {\n        var now = utc();\n        parsed.year(now.year());\n      } else {\n        parsed = utc(value, ['MMM YY', 'MMMM YY', 'MMM YYYY', 'MMMM YYYY', 'YYYY MMM', 'YYYY MMMM', 'YYYY-MM'], true);\n      }\n\n  }\n\n  if (parsed.isValid()) {\n    parsed.startOf('month');\n    parsed[GRANULARITY_KEY] = Granularity.MONTH;\n    parsed[FORMAT_KEY] = parsed.creationData().format;\n    return parsed;\n  }\n};\n\nvar parseYear = function parseYear(value) {\n  var parsed;\n\n  switch (value.toLowerCase()) {\n    case 'this year':\n      parsed = utc().startOf('year');\n      parsed[GRANULARITY_KEY] = Granularity.YEAR;\n      parsed[FORMAT_KEY] = value;\n      return parsed;\n\n    case 'next year':\n      parsed = utc().endOf('year').add(2, 'months').startOf('year');\n      parsed[GRANULARITY_KEY] = Granularity.YEAR;\n      parsed[FORMAT_KEY] = value;\n      return parsed;\n\n    case 'last year':\n      parsed = utc().startOf('year').subtract(2, 'months').startOf('year');\n      parsed[GRANULARITY_KEY] = Granularity.YEAR;\n      parsed[FORMAT_KEY] = value;\n      return parsed;\n\n    default:\n      parsed = utc(value, ['YY', 'YYYY'], true);\n\n      if (parsed.isValid()) {\n        parsed[GRANULARITY_KEY] = Granularity.YEAR;\n        parsed[FORMAT_KEY] = parsed.creationData().format;\n        return parsed;\n      }\n\n  }\n};\n\nvar parseDefault = function parseDefault(value) {\n  var parsed = utc(value, [moment.ISO_8601, moment.RFC_2822, 'DD MMM YY HH:mm', 'DD MMM YY HH:mm:ss', 'DD MMM YYYY HH:mm', 'DD MMM YYYY HH:mm:ss', 'DD MMMM YYYY HH:mm', 'DD MMMM YYYY HH:mm:ss'], true);\n\n  if (!parsed.isValid()) {\n    var time = Date.parse(value);\n    var offset = moment(time).utcOffset();\n    parsed = utc(time);\n    parsed.add(offset, 'minutes');\n  }\n\n  if (parsed.isValid()) {\n    parsed[FORMAT_KEY] = parsed.creationData().format;\n  }\n\n  return parsed;\n};\n\nvar printDay = function printDay(now, date, format) {\n  if (format.match(/yesterday|tomorrow|today/i)) {\n    if (now.isSame(date, 'day')) {\n      return 'today';\n    }\n\n    if (now.subtract(1, 'day').isSame(date, 'day')) {\n      return 'yesterday';\n    }\n\n    if (now.add(1, 'day').isSame(date, 'day')) {\n      return 'tomorrow';\n    }\n\n    if (now.isSame(date, 'week')) {\n      return date.format('dddd');\n    }\n  }\n\n  return date.format(format);\n};\n\nvar printWeek = function printWeek(now, date, format) {\n  if (format.match(/(?:this|next|last) week/i)) {\n    if (now.isSame(date, 'week')) {\n      return 'This Week';\n    }\n\n    if (now.startOf('week').subtract(2, 'days').isSame(date, 'week')) {\n      return 'Last Week';\n    }\n\n    if (now.endOf('week').add(2, 'days').isSame(date, 'week')) {\n      return 'Next Week';\n    }\n  }\n\n  return date.format(format);\n};\n\nvar printMonth = function printMonth(now, date, format) {\n  if (format.match(/(?:this|next|last) month/i)) {\n    if (now.isSame(date, 'month')) {\n      return 'This Month';\n    }\n\n    if (now.startOf('month').subtract(2, 'days').isSame(date, 'month')) {\n      return 'Last Month';\n    }\n\n    if (now.endOf('month').add(2, 'days').isSame(date, 'month')) {\n      return 'Next Month';\n    }\n  }\n\n  return date.format(format);\n};\n\nvar printYear = function printYear(now, date, format) {\n  if (format.match(/(?:this|next|last) year/i)) {\n    if (now.isSame(date, 'year')) {\n      return 'This Year';\n    }\n\n    if (now.startOf('year').subtract(2, 'months').isSame(date, 'year')) {\n      return 'Last Year';\n    }\n\n    if (now.endOf('year').add(2, 'months').isSame(date, 'year')) {\n      return 'Next Year';\n    }\n  }\n\n  return date.format(format);\n};\n\nexport var printIso8601 = function printIso8601(value) {\n  return utc(value).format(moment.defaultFormatUtc);\n};\nexport var dateGranularity = function dateGranularity(parsedDate) {\n  return parsedDate[GRANULARITY_KEY];\n};\nexport var dateFormat = Object.freeze({\n  parse: function parse(value) {\n    var parsed = parseDay(value) || parseMonth(value) || parseYear(value) || parseWeek(value) || parseTime(value) || parseDefault(value);\n\n    if (!parsed) {\n      throw new Error(\"could not parse [\".concat(value, \"] as date\"));\n    }\n\n    return parsed;\n  },\n  print: function print(date) {\n    var defaultGranularity = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n    date = moment.isMoment(date) ? date : utc(date);\n    var euiDate = date;\n    var now = utc();\n    var format = euiDate[FORMAT_KEY];\n\n    if (!format) {\n      return date.format(dateFormatAliases.iso8601);\n    }\n\n    var granularity = euiDate[GRANULARITY_KEY] || defaultGranularity;\n\n    switch (granularity) {\n      case Granularity.DAY:\n        return printDay(now, date, format);\n\n      case Granularity.WEEK:\n        return printWeek(now, date, format);\n\n      case Granularity.MONTH:\n        return printMonth(now, date, format);\n\n      case Granularity.YEAR:\n        return printYear(now, date, format);\n\n      default:\n        return date.format(format);\n    }\n  }\n});"]},"metadata":{},"sourceType":"module"}