{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport CellMeasurerCacheDecorator from './CellMeasurerCacheDecorator';\nimport Grid from '../Grid';\nvar SCROLLBAR_SIZE_BUFFER = 20;\n/**\n * Renders 1, 2, or 4 Grids depending on configuration.\n * A main (body) Grid will always be rendered.\n * Optionally, 1-2 Grids for sticky header rows will also be rendered.\n * If no sticky columns, only 1 sticky header Grid will be rendered.\n * If sticky columns, 2 sticky header Grids will be rendered.\n */\n\nvar MultiGrid = function (_React$PureComponent) {\n  _inherits(MultiGrid, _React$PureComponent);\n\n  function MultiGrid(props, context) {\n    _classCallCheck(this, MultiGrid);\n\n    var _this = _possibleConstructorReturn(this, (MultiGrid.__proto__ || _Object$getPrototypeOf(MultiGrid)).call(this, props, context));\n\n    _initialiseProps.call(_this);\n\n    var deferredMeasurementCache = props.deferredMeasurementCache,\n        fixedColumnCount = props.fixedColumnCount,\n        fixedRowCount = props.fixedRowCount;\n\n    _this._maybeCalculateCachedStyles(true);\n\n    if (deferredMeasurementCache) {\n      _this._deferredMeasurementCacheBottomLeftGrid = fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: 0,\n        rowIndexOffset: fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheBottomRightGrid = fixedColumnCount > 0 || fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: fixedColumnCount,\n        rowIndexOffset: fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheTopRightGrid = fixedColumnCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: fixedColumnCount,\n        rowIndexOffset: 0\n      }) : deferredMeasurementCache;\n    }\n\n    return _this;\n  }\n\n  _createClass(MultiGrid, [{\n    key: 'forceUpdateGrids',\n    value: function forceUpdateGrids() {\n      this._bottomLeftGrid && this._bottomLeftGrid.forceUpdate();\n      this._bottomRightGrid && this._bottomRightGrid.forceUpdate();\n      this._topLeftGrid && this._topLeftGrid.forceUpdate();\n      this._topRightGrid && this._topRightGrid.forceUpdate();\n    }\n    /** See Grid#invalidateCellSizeAfterRender */\n\n  }, {\n    key: 'invalidateCellSizeAfterRender',\n    value: function invalidateCellSizeAfterRender() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref$columnIndex = _ref.columnIndex,\n          columnIndex = _ref$columnIndex === undefined ? 0 : _ref$columnIndex,\n          _ref$rowIndex = _ref.rowIndex,\n          rowIndex = _ref$rowIndex === undefined ? 0 : _ref$rowIndex;\n\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: 'measureAllCells',\n    value: function measureAllCells() {\n      this._bottomLeftGrid && this._bottomLeftGrid.measureAllCells();\n      this._bottomRightGrid && this._bottomRightGrid.measureAllCells();\n      this._topLeftGrid && this._topLeftGrid.measureAllCells();\n      this._topRightGrid && this._topRightGrid.measureAllCells();\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: 'recomputeGridSize',\n    value: function recomputeGridSize() {\n      var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref2$columnIndex = _ref2.columnIndex,\n          columnIndex = _ref2$columnIndex === undefined ? 0 : _ref2$columnIndex,\n          _ref2$rowIndex = _ref2.rowIndex,\n          rowIndex = _ref2$rowIndex === undefined ? 0 : _ref2$rowIndex;\n\n      var _props = this.props,\n          fixedColumnCount = _props.fixedColumnCount,\n          fixedRowCount = _props.fixedRowCount;\n      var adjustedColumnIndex = Math.max(0, columnIndex - fixedColumnCount);\n      var adjustedRowIndex = Math.max(0, rowIndex - fixedRowCount);\n      this._bottomLeftGrid && this._bottomLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._bottomRightGrid && this._bottomRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._topLeftGrid && this._topLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: rowIndex\n      });\n      this._topRightGrid && this._topRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: rowIndex\n      });\n      this._leftGridWidth = null;\n      this._topGridHeight = null;\n\n      this._maybeCalculateCachedStyles(true);\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _props2 = this.props,\n          scrollLeft = _props2.scrollLeft,\n          scrollTop = _props2.scrollTop;\n\n      if (scrollLeft > 0 || scrollTop > 0) {\n        var newState = {};\n\n        if (scrollLeft > 0) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop > 0) {\n          newState.scrollTop = scrollTop;\n        }\n\n        this.setState(newState);\n      }\n\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props3 = this.props,\n          onScroll = _props3.onScroll,\n          onSectionRendered = _props3.onSectionRendered,\n          onScrollbarPresenceChange = _props3.onScrollbarPresenceChange,\n          scrollLeftProp = _props3.scrollLeft,\n          scrollToColumn = _props3.scrollToColumn,\n          scrollTopProp = _props3.scrollTop,\n          scrollToRow = _props3.scrollToRow,\n          rest = _objectWithoutProperties(_props3, ['onScroll', 'onSectionRendered', 'onScrollbarPresenceChange', 'scrollLeft', 'scrollToColumn', 'scrollTop', 'scrollToRow']);\n\n      this._prepareForRender(); // Don't render any of our Grids if there are no cells.\n      // This mirrors what Grid does,\n      // And prevents us from recording inaccurage measurements when used with CellMeasurer.\n\n\n      if (this.props.width === 0 || this.props.height === 0) {\n        return null;\n      } // scrollTop and scrollLeft props are explicitly filtered out and ignored\n\n\n      var _state = this.state,\n          scrollLeft = _state.scrollLeft,\n          scrollTop = _state.scrollTop;\n      return React.createElement('div', {\n        style: this._containerOuterStyle\n      }, React.createElement('div', {\n        style: this._containerTopStyle\n      }, this._renderTopLeftGrid(rest), this._renderTopRightGrid(_extends({}, rest, {\n        onScroll: onScroll,\n        scrollLeft: scrollLeft\n      }))), React.createElement('div', {\n        style: this._containerBottomStyle\n      }, this._renderBottomLeftGrid(_extends({}, rest, {\n        onScroll: onScroll,\n        scrollTop: scrollTop\n      })), this._renderBottomRightGrid(_extends({}, rest, {\n        onScroll: onScroll,\n        onSectionRendered: onSectionRendered,\n        scrollLeft: scrollLeft,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow,\n        scrollTop: scrollTop\n      }))));\n    }\n  }, {\n    key: '_getBottomGridHeight',\n    value: function _getBottomGridHeight(props) {\n      var height = props.height;\n\n      var topGridHeight = this._getTopGridHeight(props);\n\n      return height - topGridHeight;\n    }\n  }, {\n    key: '_getLeftGridWidth',\n    value: function _getLeftGridWidth(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          columnWidth = props.columnWidth;\n\n      if (this._leftGridWidth == null) {\n        if (typeof columnWidth === 'function') {\n          var leftGridWidth = 0;\n\n          for (var index = 0; index < fixedColumnCount; index++) {\n            leftGridWidth += columnWidth({\n              index: index\n            });\n          }\n\n          this._leftGridWidth = leftGridWidth;\n        } else {\n          this._leftGridWidth = columnWidth * fixedColumnCount;\n        }\n      }\n\n      return this._leftGridWidth;\n    }\n  }, {\n    key: '_getRightGridWidth',\n    value: function _getRightGridWidth(props) {\n      var width = props.width;\n\n      var leftGridWidth = this._getLeftGridWidth(props);\n\n      return width - leftGridWidth;\n    }\n  }, {\n    key: '_getTopGridHeight',\n    value: function _getTopGridHeight(props) {\n      var fixedRowCount = props.fixedRowCount,\n          rowHeight = props.rowHeight;\n\n      if (this._topGridHeight == null) {\n        if (typeof rowHeight === 'function') {\n          var topGridHeight = 0;\n\n          for (var index = 0; index < fixedRowCount; index++) {\n            topGridHeight += rowHeight({\n              index: index\n            });\n          }\n\n          this._topGridHeight = topGridHeight;\n        } else {\n          this._topGridHeight = rowHeight * fixedRowCount;\n        }\n      }\n\n      return this._topGridHeight;\n    }\n  }, {\n    key: '_handleInvalidatedGridSize',\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n        this.forceUpdate();\n      }\n    }\n    /**\n     * Avoid recreating inline styles each render; this bypasses Grid's shallowCompare.\n     * This method recalculates styles only when specific props change.\n     */\n\n  }, {\n    key: '_maybeCalculateCachedStyles',\n    value: function _maybeCalculateCachedStyles(resetAll) {\n      var _props4 = this.props,\n          columnWidth = _props4.columnWidth,\n          enableFixedColumnScroll = _props4.enableFixedColumnScroll,\n          enableFixedRowScroll = _props4.enableFixedRowScroll,\n          height = _props4.height,\n          fixedColumnCount = _props4.fixedColumnCount,\n          fixedRowCount = _props4.fixedRowCount,\n          rowHeight = _props4.rowHeight,\n          style = _props4.style,\n          styleBottomLeftGrid = _props4.styleBottomLeftGrid,\n          styleBottomRightGrid = _props4.styleBottomRightGrid,\n          styleTopLeftGrid = _props4.styleTopLeftGrid,\n          styleTopRightGrid = _props4.styleTopRightGrid,\n          width = _props4.width;\n      var sizeChange = resetAll || height !== this._lastRenderedHeight || width !== this._lastRenderedWidth;\n      var leftSizeChange = resetAll || columnWidth !== this._lastRenderedColumnWidth || fixedColumnCount !== this._lastRenderedFixedColumnCount;\n      var topSizeChange = resetAll || fixedRowCount !== this._lastRenderedFixedRowCount || rowHeight !== this._lastRenderedRowHeight;\n\n      if (resetAll || sizeChange || style !== this._lastRenderedStyle) {\n        this._containerOuterStyle = _extends({\n          height: height,\n          overflow: 'visible',\n          // Let :focus outline show through\n          width: width\n        }, style);\n      }\n\n      if (resetAll || sizeChange || topSizeChange) {\n        this._containerTopStyle = {\n          height: this._getTopGridHeight(this.props),\n          position: 'relative',\n          width: width\n        };\n        this._containerBottomStyle = {\n          height: height - this._getTopGridHeight(this.props),\n          overflow: 'visible',\n          // Let :focus outline show through\n          position: 'relative',\n          width: width\n        };\n      }\n\n      if (resetAll || styleBottomLeftGrid !== this._lastRenderedStyleBottomLeftGrid) {\n        this._bottomLeftGridStyle = _extends({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: enableFixedColumnScroll ? 'auto' : 'hidden',\n          position: 'absolute'\n        }, styleBottomLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleBottomRightGrid !== this._lastRenderedStyleBottomRightGrid) {\n        this._bottomRightGridStyle = _extends({\n          left: this._getLeftGridWidth(this.props),\n          position: 'absolute'\n        }, styleBottomRightGrid);\n      }\n\n      if (resetAll || styleTopLeftGrid !== this._lastRenderedStyleTopLeftGrid) {\n        this._topLeftGridStyle = _extends({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleTopRightGrid !== this._lastRenderedStyleTopRightGrid) {\n        this._topRightGridStyle = _extends({\n          left: this._getLeftGridWidth(this.props),\n          overflowX: enableFixedRowScroll ? 'auto' : 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopRightGrid);\n      }\n\n      this._lastRenderedColumnWidth = columnWidth;\n      this._lastRenderedFixedColumnCount = fixedColumnCount;\n      this._lastRenderedFixedRowCount = fixedRowCount;\n      this._lastRenderedHeight = height;\n      this._lastRenderedRowHeight = rowHeight;\n      this._lastRenderedStyle = style;\n      this._lastRenderedStyleBottomLeftGrid = styleBottomLeftGrid;\n      this._lastRenderedStyleBottomRightGrid = styleBottomRightGrid;\n      this._lastRenderedStyleTopLeftGrid = styleTopLeftGrid;\n      this._lastRenderedStyleTopRightGrid = styleTopRightGrid;\n      this._lastRenderedWidth = width;\n    }\n  }, {\n    key: '_prepareForRender',\n    value: function _prepareForRender() {\n      if (this._lastRenderedColumnWidth !== this.props.columnWidth || this._lastRenderedFixedColumnCount !== this.props.fixedColumnCount) {\n        this._leftGridWidth = null;\n      }\n\n      if (this._lastRenderedFixedRowCount !== this.props.fixedRowCount || this._lastRenderedRowHeight !== this.props.rowHeight) {\n        this._topGridHeight = null;\n      }\n\n      this._maybeCalculateCachedStyles();\n\n      this._lastRenderedColumnWidth = this.props.columnWidth;\n      this._lastRenderedFixedColumnCount = this.props.fixedColumnCount;\n      this._lastRenderedFixedRowCount = this.props.fixedRowCount;\n      this._lastRenderedRowHeight = this.props.rowHeight;\n    }\n  }, {\n    key: '_renderBottomLeftGrid',\n    value: function _renderBottomLeftGrid(props) {\n      var enableFixedColumnScroll = props.enableFixedColumnScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          hideBottomLeftGridScrollbar = props.hideBottomLeftGridScrollbar;\n      var showVerticalScrollbar = this.state.showVerticalScrollbar;\n\n      if (!fixedColumnCount) {\n        return null;\n      }\n\n      var additionalRowCount = showVerticalScrollbar ? 1 : 0,\n          height = this._getBottomGridHeight(props),\n          width = this._getLeftGridWidth(props),\n          scrollbarSize = this.state.showVerticalScrollbar ? this.state.scrollbarSize : 0,\n          gridWidth = hideBottomLeftGridScrollbar ? width + scrollbarSize : width;\n\n      var bottomLeftGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomLeftGrid,\n        className: this.props.classNameBottomLeftGrid,\n        columnCount: fixedColumnCount,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomLeftGrid,\n        height: height,\n        onScroll: enableFixedColumnScroll ? this._onScrollTop : undefined,\n        ref: this._bottomLeftGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount) + additionalRowCount,\n        rowHeight: this._rowHeightBottomGrid,\n        style: this._bottomLeftGridStyle,\n        tabIndex: null,\n        width: gridWidth\n      }));\n\n      if (hideBottomLeftGridScrollbar) {\n        return React.createElement('div', {\n          className: 'BottomLeftGrid_ScrollWrapper',\n          style: _extends({}, this._bottomLeftGridStyle, {\n            height: height,\n            width: width,\n            overflowY: 'hidden'\n          })\n        }, bottomLeftGrid);\n      }\n\n      return bottomLeftGrid;\n    }\n  }, {\n    key: '_renderBottomRightGrid',\n    value: function _renderBottomRightGrid(props) {\n      var columnCount = props.columnCount,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          scrollToColumn = props.scrollToColumn,\n          scrollToRow = props.scrollToRow;\n      return React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomRightGrid,\n        className: this.props.classNameBottomRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount),\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomRightGrid,\n        height: this._getBottomGridHeight(props),\n        onScroll: this._onScroll,\n        onScrollbarPresenceChange: this._onScrollbarPresenceChange,\n        ref: this._bottomRightGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount),\n        rowHeight: this._rowHeightBottomGrid,\n        scrollToColumn: scrollToColumn - fixedColumnCount,\n        scrollToRow: scrollToRow - fixedRowCount,\n        style: this._bottomRightGridStyle,\n        width: this._getRightGridWidth(props)\n      }));\n    }\n  }, {\n    key: '_renderTopLeftGrid',\n    value: function _renderTopLeftGrid(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount;\n\n      if (!fixedColumnCount || !fixedRowCount) {\n        return null;\n      }\n\n      return React.createElement(Grid, _extends({}, props, {\n        className: this.props.classNameTopLeftGrid,\n        columnCount: fixedColumnCount,\n        height: this._getTopGridHeight(props),\n        ref: this._topLeftGridRef,\n        rowCount: fixedRowCount,\n        style: this._topLeftGridStyle,\n        tabIndex: null,\n        width: this._getLeftGridWidth(props)\n      }));\n    }\n  }, {\n    key: '_renderTopRightGrid',\n    value: function _renderTopRightGrid(props) {\n      var columnCount = props.columnCount,\n          enableFixedRowScroll = props.enableFixedRowScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          scrollLeft = props.scrollLeft,\n          hideTopRightGridScrollbar = props.hideTopRightGridScrollbar;\n      var _state2 = this.state,\n          showHorizontalScrollbar = _state2.showHorizontalScrollbar,\n          scrollbarSize = _state2.scrollbarSize;\n\n      if (!fixedRowCount) {\n        return null;\n      }\n\n      var additionalColumnCount = showHorizontalScrollbar ? 1 : 0,\n          height = this._getTopGridHeight(props),\n          width = this._getRightGridWidth(props),\n          additionalHeight = showHorizontalScrollbar ? scrollbarSize : 0;\n\n      var gridHeight = height,\n          style = this._topRightGridStyle;\n\n      if (hideTopRightGridScrollbar) {\n        gridHeight = height + additionalHeight;\n        style = _extends({}, this._topRightGridStyle, {\n          left: 0\n        });\n      }\n\n      var topRightGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererTopRightGrid,\n        className: this.props.classNameTopRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount) + additionalColumnCount,\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheTopRightGrid,\n        height: gridHeight,\n        onScroll: enableFixedRowScroll ? this._onScrollLeft : undefined,\n        ref: this._topRightGridRef,\n        rowCount: fixedRowCount,\n        scrollLeft: scrollLeft,\n        style: style,\n        tabIndex: null,\n        width: width\n      }));\n\n      if (hideTopRightGridScrollbar) {\n        return React.createElement('div', {\n          className: 'TopRightGrid_ScrollWrapper',\n          style: _extends({}, this._topRightGridStyle, {\n            height: height,\n            width: width,\n            overflowX: 'hidden'\n          })\n        }, topRightGrid);\n      }\n\n      return topRightGrid;\n    }\n  }], [{\n    key: 'getDerivedStateFromProps',\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null && nextProps.scrollLeft >= 0 ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null && nextProps.scrollTop >= 0 ? nextProps.scrollTop : prevState.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return MultiGrid;\n}(React.PureComponent);\n\nMultiGrid.defaultProps = {\n  classNameBottomLeftGrid: '',\n  classNameBottomRightGrid: '',\n  classNameTopLeftGrid: '',\n  classNameTopRightGrid: '',\n  enableFixedColumnScroll: false,\n  enableFixedRowScroll: false,\n  fixedColumnCount: 0,\n  fixedRowCount: 0,\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  styleBottomLeftGrid: {},\n  styleBottomRightGrid: {},\n  styleTopLeftGrid: {},\n  styleTopRightGrid: {},\n  hideTopRightGridScrollbar: false,\n  hideBottomLeftGridScrollbar: false\n};\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this2 = this;\n\n  this.state = {\n    scrollLeft: 0,\n    scrollTop: 0,\n    scrollbarSize: 0,\n    showHorizontalScrollbar: false,\n    showVerticalScrollbar: false\n  };\n  this._deferredInvalidateColumnIndex = null;\n  this._deferredInvalidateRowIndex = null;\n\n  this._bottomLeftGridRef = function (ref) {\n    _this2._bottomLeftGrid = ref;\n  };\n\n  this._bottomRightGridRef = function (ref) {\n    _this2._bottomRightGrid = ref;\n  };\n\n  this._cellRendererBottomLeftGrid = function (_ref3) {\n    var rowIndex = _ref3.rowIndex,\n        rest = _objectWithoutProperties(_ref3, ['rowIndex']);\n\n    var _props5 = _this2.props,\n        cellRenderer = _props5.cellRenderer,\n        fixedRowCount = _props5.fixedRowCount,\n        rowCount = _props5.rowCount;\n\n    if (rowIndex === rowCount - fixedRowCount) {\n      return React.createElement('div', {\n        key: rest.key,\n        style: _extends({}, rest.style, {\n          height: SCROLLBAR_SIZE_BUFFER\n        })\n      });\n    } else {\n      return cellRenderer(_extends({}, rest, {\n        parent: _this2,\n        rowIndex: rowIndex + fixedRowCount\n      }));\n    }\n  };\n\n  this._cellRendererBottomRightGrid = function (_ref4) {\n    var columnIndex = _ref4.columnIndex,\n        rowIndex = _ref4.rowIndex,\n        rest = _objectWithoutProperties(_ref4, ['columnIndex', 'rowIndex']);\n\n    var _props6 = _this2.props,\n        cellRenderer = _props6.cellRenderer,\n        fixedColumnCount = _props6.fixedColumnCount,\n        fixedRowCount = _props6.fixedRowCount;\n    return cellRenderer(_extends({}, rest, {\n      columnIndex: columnIndex + fixedColumnCount,\n      parent: _this2,\n      rowIndex: rowIndex + fixedRowCount\n    }));\n  };\n\n  this._cellRendererTopRightGrid = function (_ref5) {\n    var columnIndex = _ref5.columnIndex,\n        rest = _objectWithoutProperties(_ref5, ['columnIndex']);\n\n    var _props7 = _this2.props,\n        cellRenderer = _props7.cellRenderer,\n        columnCount = _props7.columnCount,\n        fixedColumnCount = _props7.fixedColumnCount;\n\n    if (columnIndex === columnCount - fixedColumnCount) {\n      return React.createElement('div', {\n        key: rest.key,\n        style: _extends({}, rest.style, {\n          width: SCROLLBAR_SIZE_BUFFER\n        })\n      });\n    } else {\n      return cellRenderer(_extends({}, rest, {\n        columnIndex: columnIndex + fixedColumnCount,\n        parent: _this2\n      }));\n    }\n  };\n\n  this._columnWidthRightGrid = function (_ref6) {\n    var index = _ref6.index;\n    var _props8 = _this2.props,\n        columnCount = _props8.columnCount,\n        fixedColumnCount = _props8.fixedColumnCount,\n        columnWidth = _props8.columnWidth;\n    var _state3 = _this2.state,\n        scrollbarSize = _state3.scrollbarSize,\n        showHorizontalScrollbar = _state3.showHorizontalScrollbar; // An extra cell is added to the count\n    // This gives the smaller Grid extra room for offset,\n    // In case the main (bottom right) Grid has a scrollbar\n    // If no scrollbar, the extra space is overflow:hidden anyway\n\n    if (showHorizontalScrollbar && index === columnCount - fixedColumnCount) {\n      return scrollbarSize;\n    }\n\n    return typeof columnWidth === 'function' ? columnWidth({\n      index: index + fixedColumnCount\n    }) : columnWidth;\n  };\n\n  this._onScroll = function (scrollInfo) {\n    var scrollLeft = scrollInfo.scrollLeft,\n        scrollTop = scrollInfo.scrollTop;\n\n    _this2.setState({\n      scrollLeft: scrollLeft,\n      scrollTop: scrollTop\n    });\n\n    var onScroll = _this2.props.onScroll;\n\n    if (onScroll) {\n      onScroll(scrollInfo);\n    }\n  };\n\n  this._onScrollbarPresenceChange = function (_ref7) {\n    var horizontal = _ref7.horizontal,\n        size = _ref7.size,\n        vertical = _ref7.vertical;\n    var _state4 = _this2.state,\n        showHorizontalScrollbar = _state4.showHorizontalScrollbar,\n        showVerticalScrollbar = _state4.showVerticalScrollbar;\n\n    if (horizontal !== showHorizontalScrollbar || vertical !== showVerticalScrollbar) {\n      _this2.setState({\n        scrollbarSize: size,\n        showHorizontalScrollbar: horizontal,\n        showVerticalScrollbar: vertical\n      });\n\n      var onScrollbarPresenceChange = _this2.props.onScrollbarPresenceChange;\n\n      if (typeof onScrollbarPresenceChange === 'function') {\n        onScrollbarPresenceChange({\n          horizontal: horizontal,\n          size: size,\n          vertical: vertical\n        });\n      }\n    }\n  };\n\n  this._onScrollLeft = function (scrollInfo) {\n    var scrollLeft = scrollInfo.scrollLeft;\n\n    _this2._onScroll({\n      scrollLeft: scrollLeft,\n      scrollTop: _this2.state.scrollTop\n    });\n  };\n\n  this._onScrollTop = function (scrollInfo) {\n    var scrollTop = scrollInfo.scrollTop;\n\n    _this2._onScroll({\n      scrollTop: scrollTop,\n      scrollLeft: _this2.state.scrollLeft\n    });\n  };\n\n  this._rowHeightBottomGrid = function (_ref8) {\n    var index = _ref8.index;\n    var _props9 = _this2.props,\n        fixedRowCount = _props9.fixedRowCount,\n        rowCount = _props9.rowCount,\n        rowHeight = _props9.rowHeight;\n    var _state5 = _this2.state,\n        scrollbarSize = _state5.scrollbarSize,\n        showVerticalScrollbar = _state5.showVerticalScrollbar; // An extra cell is added to the count\n    // This gives the smaller Grid extra room for offset,\n    // In case the main (bottom right) Grid has a scrollbar\n    // If no scrollbar, the extra space is overflow:hidden anyway\n\n    if (showVerticalScrollbar && index === rowCount - fixedRowCount) {\n      return scrollbarSize;\n    }\n\n    return typeof rowHeight === 'function' ? rowHeight({\n      index: index + fixedRowCount\n    }) : rowHeight;\n  };\n\n  this._topLeftGridRef = function (ref) {\n    _this2._topLeftGrid = ref;\n  };\n\n  this._topRightGridRef = function (ref) {\n    _this2._topRightGrid = ref;\n  };\n};\n\nMultiGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  classNameBottomLeftGrid: PropTypes.string.isRequired,\n  classNameBottomRightGrid: PropTypes.string.isRequired,\n  classNameTopLeftGrid: PropTypes.string.isRequired,\n  classNameTopRightGrid: PropTypes.string.isRequired,\n  enableFixedColumnScroll: PropTypes.bool.isRequired,\n  enableFixedRowScroll: PropTypes.bool.isRequired,\n  fixedColumnCount: PropTypes.number.isRequired,\n  fixedRowCount: PropTypes.number.isRequired,\n  onScrollbarPresenceChange: PropTypes.func,\n  style: PropTypes.object.isRequired,\n  styleBottomLeftGrid: PropTypes.object.isRequired,\n  styleBottomRightGrid: PropTypes.object.isRequired,\n  styleTopLeftGrid: PropTypes.object.isRequired,\n  styleTopRightGrid: PropTypes.object.isRequired,\n  hideTopRightGridScrollbar: PropTypes.bool,\n  hideBottomLeftGridScrollbar: PropTypes.bool\n} : {};\npolyfill(MultiGrid);\nexport default MultiGrid;","map":{"version":3,"sources":["/home/nadaanbaalak/greendeck/client/node_modules/react-virtualized/dist/es/MultiGrid/MultiGrid.js"],"names":["_extends","_objectWithoutProperties","_Object$getPrototypeOf","_classCallCheck","_createClass","_possibleConstructorReturn","_inherits","PropTypes","React","polyfill","CellMeasurerCacheDecorator","Grid","SCROLLBAR_SIZE_BUFFER","MultiGrid","_React$PureComponent","props","context","_this","__proto__","call","_initialiseProps","deferredMeasurementCache","fixedColumnCount","fixedRowCount","_maybeCalculateCachedStyles","_deferredMeasurementCacheBottomLeftGrid","cellMeasurerCache","columnIndexOffset","rowIndexOffset","_deferredMeasurementCacheBottomRightGrid","_deferredMeasurementCacheTopRightGrid","key","value","forceUpdateGrids","_bottomLeftGrid","forceUpdate","_bottomRightGrid","_topLeftGrid","_topRightGrid","invalidateCellSizeAfterRender","_ref","arguments","length","undefined","_ref$columnIndex","columnIndex","_ref$rowIndex","rowIndex","_deferredInvalidateColumnIndex","Math","min","_deferredInvalidateRowIndex","measureAllCells","recomputeGridSize","_ref2","_ref2$columnIndex","_ref2$rowIndex","_props","adjustedColumnIndex","max","adjustedRowIndex","_leftGridWidth","_topGridHeight","componentDidMount","_props2","scrollLeft","scrollTop","newState","setState","_handleInvalidatedGridSize","componentDidUpdate","render","_props3","onScroll","onSectionRendered","onScrollbarPresenceChange","scrollLeftProp","scrollToColumn","scrollTopProp","scrollToRow","rest","_prepareForRender","width","height","_state","state","createElement","style","_containerOuterStyle","_containerTopStyle","_renderTopLeftGrid","_renderTopRightGrid","_containerBottomStyle","_renderBottomLeftGrid","_renderBottomRightGrid","_getBottomGridHeight","topGridHeight","_getTopGridHeight","_getLeftGridWidth","columnWidth","leftGridWidth","index","_getRightGridWidth","rowHeight","resetAll","_props4","enableFixedColumnScroll","enableFixedRowScroll","styleBottomLeftGrid","styleBottomRightGrid","styleTopLeftGrid","styleTopRightGrid","sizeChange","_lastRenderedHeight","_lastRenderedWidth","leftSizeChange","_lastRenderedColumnWidth","_lastRenderedFixedColumnCount","topSizeChange","_lastRenderedFixedRowCount","_lastRenderedRowHeight","_lastRenderedStyle","overflow","position","_lastRenderedStyleBottomLeftGrid","_bottomLeftGridStyle","left","overflowX","overflowY","_lastRenderedStyleBottomRightGrid","_bottomRightGridStyle","_lastRenderedStyleTopLeftGrid","_topLeftGridStyle","top","_lastRenderedStyleTopRightGrid","_topRightGridStyle","rowCount","hideBottomLeftGridScrollbar","showVerticalScrollbar","additionalRowCount","scrollbarSize","gridWidth","bottomLeftGrid","cellRenderer","_cellRendererBottomLeftGrid","className","classNameBottomLeftGrid","columnCount","_onScrollTop","ref","_bottomLeftGridRef","_rowHeightBottomGrid","tabIndex","_cellRendererBottomRightGrid","classNameBottomRightGrid","_columnWidthRightGrid","_onScroll","_onScrollbarPresenceChange","_bottomRightGridRef","classNameTopLeftGrid","_topLeftGridRef","hideTopRightGridScrollbar","_state2","showHorizontalScrollbar","additionalColumnCount","additionalHeight","gridHeight","topRightGrid","_cellRendererTopRightGrid","classNameTopRightGrid","_onScrollLeft","_topRightGridRef","getDerivedStateFromProps","nextProps","prevState","PureComponent","defaultProps","_this2","_ref3","_props5","parent","_ref4","_props6","_ref5","_props7","_ref6","_props8","_state3","scrollInfo","_ref7","horizontal","size","vertical","_state4","_ref8","_props9","_state5","propTypes","process","env","NODE_ENV","string","isRequired","bool","number","func","object"],"mappings":"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","sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport CellMeasurerCacheDecorator from './CellMeasurerCacheDecorator';\nimport Grid from '../Grid';\n\nvar SCROLLBAR_SIZE_BUFFER = 20;\n\n/**\n * Renders 1, 2, or 4 Grids depending on configuration.\n * A main (body) Grid will always be rendered.\n * Optionally, 1-2 Grids for sticky header rows will also be rendered.\n * If no sticky columns, only 1 sticky header Grid will be rendered.\n * If sticky columns, 2 sticky header Grids will be rendered.\n */\n\nvar MultiGrid = function (_React$PureComponent) {\n  _inherits(MultiGrid, _React$PureComponent);\n\n  function MultiGrid(props, context) {\n    _classCallCheck(this, MultiGrid);\n\n    var _this = _possibleConstructorReturn(this, (MultiGrid.__proto__ || _Object$getPrototypeOf(MultiGrid)).call(this, props, context));\n\n    _initialiseProps.call(_this);\n\n    var deferredMeasurementCache = props.deferredMeasurementCache,\n        fixedColumnCount = props.fixedColumnCount,\n        fixedRowCount = props.fixedRowCount;\n\n\n    _this._maybeCalculateCachedStyles(true);\n\n    if (deferredMeasurementCache) {\n      _this._deferredMeasurementCacheBottomLeftGrid = fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: 0,\n        rowIndexOffset: fixedRowCount\n      }) : deferredMeasurementCache;\n\n      _this._deferredMeasurementCacheBottomRightGrid = fixedColumnCount > 0 || fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: fixedColumnCount,\n        rowIndexOffset: fixedRowCount\n      }) : deferredMeasurementCache;\n\n      _this._deferredMeasurementCacheTopRightGrid = fixedColumnCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: fixedColumnCount,\n        rowIndexOffset: 0\n      }) : deferredMeasurementCache;\n    }\n    return _this;\n  }\n\n  _createClass(MultiGrid, [{\n    key: 'forceUpdateGrids',\n    value: function forceUpdateGrids() {\n      this._bottomLeftGrid && this._bottomLeftGrid.forceUpdate();\n      this._bottomRightGrid && this._bottomRightGrid.forceUpdate();\n      this._topLeftGrid && this._topLeftGrid.forceUpdate();\n      this._topRightGrid && this._topRightGrid.forceUpdate();\n    }\n\n    /** See Grid#invalidateCellSizeAfterRender */\n\n  }, {\n    key: 'invalidateCellSizeAfterRender',\n    value: function invalidateCellSizeAfterRender() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref$columnIndex = _ref.columnIndex,\n          columnIndex = _ref$columnIndex === undefined ? 0 : _ref$columnIndex,\n          _ref$rowIndex = _ref.rowIndex,\n          rowIndex = _ref$rowIndex === undefined ? 0 : _ref$rowIndex;\n\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: 'measureAllCells',\n    value: function measureAllCells() {\n      this._bottomLeftGrid && this._bottomLeftGrid.measureAllCells();\n      this._bottomRightGrid && this._bottomRightGrid.measureAllCells();\n      this._topLeftGrid && this._topLeftGrid.measureAllCells();\n      this._topRightGrid && this._topRightGrid.measureAllCells();\n    }\n\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: 'recomputeGridSize',\n    value: function recomputeGridSize() {\n      var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref2$columnIndex = _ref2.columnIndex,\n          columnIndex = _ref2$columnIndex === undefined ? 0 : _ref2$columnIndex,\n          _ref2$rowIndex = _ref2.rowIndex,\n          rowIndex = _ref2$rowIndex === undefined ? 0 : _ref2$rowIndex;\n\n      var _props = this.props,\n          fixedColumnCount = _props.fixedColumnCount,\n          fixedRowCount = _props.fixedRowCount;\n\n\n      var adjustedColumnIndex = Math.max(0, columnIndex - fixedColumnCount);\n      var adjustedRowIndex = Math.max(0, rowIndex - fixedRowCount);\n\n      this._bottomLeftGrid && this._bottomLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._bottomRightGrid && this._bottomRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._topLeftGrid && this._topLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: rowIndex\n      });\n      this._topRightGrid && this._topRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: rowIndex\n      });\n\n      this._leftGridWidth = null;\n      this._topGridHeight = null;\n      this._maybeCalculateCachedStyles(true);\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _props2 = this.props,\n          scrollLeft = _props2.scrollLeft,\n          scrollTop = _props2.scrollTop;\n\n\n      if (scrollLeft > 0 || scrollTop > 0) {\n        var newState = {};\n\n        if (scrollLeft > 0) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop > 0) {\n          newState.scrollTop = scrollTop;\n        }\n\n        this.setState(newState);\n      }\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props3 = this.props,\n          onScroll = _props3.onScroll,\n          onSectionRendered = _props3.onSectionRendered,\n          onScrollbarPresenceChange = _props3.onScrollbarPresenceChange,\n          scrollLeftProp = _props3.scrollLeft,\n          scrollToColumn = _props3.scrollToColumn,\n          scrollTopProp = _props3.scrollTop,\n          scrollToRow = _props3.scrollToRow,\n          rest = _objectWithoutProperties(_props3, ['onScroll', 'onSectionRendered', 'onScrollbarPresenceChange', 'scrollLeft', 'scrollToColumn', 'scrollTop', 'scrollToRow']);\n\n      this._prepareForRender();\n\n      // Don't render any of our Grids if there are no cells.\n      // This mirrors what Grid does,\n      // And prevents us from recording inaccurage measurements when used with CellMeasurer.\n      if (this.props.width === 0 || this.props.height === 0) {\n        return null;\n      }\n\n      // scrollTop and scrollLeft props are explicitly filtered out and ignored\n\n      var _state = this.state,\n          scrollLeft = _state.scrollLeft,\n          scrollTop = _state.scrollTop;\n\n\n      return React.createElement(\n        'div',\n        { style: this._containerOuterStyle },\n        React.createElement(\n          'div',\n          { style: this._containerTopStyle },\n          this._renderTopLeftGrid(rest),\n          this._renderTopRightGrid(_extends({}, rest, {\n            onScroll: onScroll,\n            scrollLeft: scrollLeft\n          }))\n        ),\n        React.createElement(\n          'div',\n          { style: this._containerBottomStyle },\n          this._renderBottomLeftGrid(_extends({}, rest, {\n            onScroll: onScroll,\n            scrollTop: scrollTop\n          })),\n          this._renderBottomRightGrid(_extends({}, rest, {\n            onScroll: onScroll,\n            onSectionRendered: onSectionRendered,\n            scrollLeft: scrollLeft,\n            scrollToColumn: scrollToColumn,\n            scrollToRow: scrollToRow,\n            scrollTop: scrollTop\n          }))\n        )\n      );\n    }\n  }, {\n    key: '_getBottomGridHeight',\n    value: function _getBottomGridHeight(props) {\n      var height = props.height;\n\n\n      var topGridHeight = this._getTopGridHeight(props);\n\n      return height - topGridHeight;\n    }\n  }, {\n    key: '_getLeftGridWidth',\n    value: function _getLeftGridWidth(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          columnWidth = props.columnWidth;\n\n\n      if (this._leftGridWidth == null) {\n        if (typeof columnWidth === 'function') {\n          var leftGridWidth = 0;\n\n          for (var index = 0; index < fixedColumnCount; index++) {\n            leftGridWidth += columnWidth({ index: index });\n          }\n\n          this._leftGridWidth = leftGridWidth;\n        } else {\n          this._leftGridWidth = columnWidth * fixedColumnCount;\n        }\n      }\n\n      return this._leftGridWidth;\n    }\n  }, {\n    key: '_getRightGridWidth',\n    value: function _getRightGridWidth(props) {\n      var width = props.width;\n\n\n      var leftGridWidth = this._getLeftGridWidth(props);\n\n      return width - leftGridWidth;\n    }\n  }, {\n    key: '_getTopGridHeight',\n    value: function _getTopGridHeight(props) {\n      var fixedRowCount = props.fixedRowCount,\n          rowHeight = props.rowHeight;\n\n\n      if (this._topGridHeight == null) {\n        if (typeof rowHeight === 'function') {\n          var topGridHeight = 0;\n\n          for (var index = 0; index < fixedRowCount; index++) {\n            topGridHeight += rowHeight({ index: index });\n          }\n\n          this._topGridHeight = topGridHeight;\n        } else {\n          this._topGridHeight = rowHeight * fixedRowCount;\n        }\n      }\n\n      return this._topGridHeight;\n    }\n  }, {\n    key: '_handleInvalidatedGridSize',\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n        this.forceUpdate();\n      }\n    }\n\n    /**\n     * Avoid recreating inline styles each render; this bypasses Grid's shallowCompare.\n     * This method recalculates styles only when specific props change.\n     */\n\n  }, {\n    key: '_maybeCalculateCachedStyles',\n    value: function _maybeCalculateCachedStyles(resetAll) {\n      var _props4 = this.props,\n          columnWidth = _props4.columnWidth,\n          enableFixedColumnScroll = _props4.enableFixedColumnScroll,\n          enableFixedRowScroll = _props4.enableFixedRowScroll,\n          height = _props4.height,\n          fixedColumnCount = _props4.fixedColumnCount,\n          fixedRowCount = _props4.fixedRowCount,\n          rowHeight = _props4.rowHeight,\n          style = _props4.style,\n          styleBottomLeftGrid = _props4.styleBottomLeftGrid,\n          styleBottomRightGrid = _props4.styleBottomRightGrid,\n          styleTopLeftGrid = _props4.styleTopLeftGrid,\n          styleTopRightGrid = _props4.styleTopRightGrid,\n          width = _props4.width;\n\n\n      var sizeChange = resetAll || height !== this._lastRenderedHeight || width !== this._lastRenderedWidth;\n      var leftSizeChange = resetAll || columnWidth !== this._lastRenderedColumnWidth || fixedColumnCount !== this._lastRenderedFixedColumnCount;\n      var topSizeChange = resetAll || fixedRowCount !== this._lastRenderedFixedRowCount || rowHeight !== this._lastRenderedRowHeight;\n\n      if (resetAll || sizeChange || style !== this._lastRenderedStyle) {\n        this._containerOuterStyle = _extends({\n          height: height,\n          overflow: 'visible', // Let :focus outline show through\n          width: width\n        }, style);\n      }\n\n      if (resetAll || sizeChange || topSizeChange) {\n        this._containerTopStyle = {\n          height: this._getTopGridHeight(this.props),\n          position: 'relative',\n          width: width\n        };\n\n        this._containerBottomStyle = {\n          height: height - this._getTopGridHeight(this.props),\n          overflow: 'visible', // Let :focus outline show through\n          position: 'relative',\n          width: width\n        };\n      }\n\n      if (resetAll || styleBottomLeftGrid !== this._lastRenderedStyleBottomLeftGrid) {\n        this._bottomLeftGridStyle = _extends({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: enableFixedColumnScroll ? 'auto' : 'hidden',\n          position: 'absolute'\n        }, styleBottomLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleBottomRightGrid !== this._lastRenderedStyleBottomRightGrid) {\n        this._bottomRightGridStyle = _extends({\n          left: this._getLeftGridWidth(this.props),\n          position: 'absolute'\n        }, styleBottomRightGrid);\n      }\n\n      if (resetAll || styleTopLeftGrid !== this._lastRenderedStyleTopLeftGrid) {\n        this._topLeftGridStyle = _extends({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleTopRightGrid !== this._lastRenderedStyleTopRightGrid) {\n        this._topRightGridStyle = _extends({\n          left: this._getLeftGridWidth(this.props),\n          overflowX: enableFixedRowScroll ? 'auto' : 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopRightGrid);\n      }\n\n      this._lastRenderedColumnWidth = columnWidth;\n      this._lastRenderedFixedColumnCount = fixedColumnCount;\n      this._lastRenderedFixedRowCount = fixedRowCount;\n      this._lastRenderedHeight = height;\n      this._lastRenderedRowHeight = rowHeight;\n      this._lastRenderedStyle = style;\n      this._lastRenderedStyleBottomLeftGrid = styleBottomLeftGrid;\n      this._lastRenderedStyleBottomRightGrid = styleBottomRightGrid;\n      this._lastRenderedStyleTopLeftGrid = styleTopLeftGrid;\n      this._lastRenderedStyleTopRightGrid = styleTopRightGrid;\n      this._lastRenderedWidth = width;\n    }\n  }, {\n    key: '_prepareForRender',\n    value: function _prepareForRender() {\n      if (this._lastRenderedColumnWidth !== this.props.columnWidth || this._lastRenderedFixedColumnCount !== this.props.fixedColumnCount) {\n        this._leftGridWidth = null;\n      }\n\n      if (this._lastRenderedFixedRowCount !== this.props.fixedRowCount || this._lastRenderedRowHeight !== this.props.rowHeight) {\n        this._topGridHeight = null;\n      }\n\n      this._maybeCalculateCachedStyles();\n\n      this._lastRenderedColumnWidth = this.props.columnWidth;\n      this._lastRenderedFixedColumnCount = this.props.fixedColumnCount;\n      this._lastRenderedFixedRowCount = this.props.fixedRowCount;\n      this._lastRenderedRowHeight = this.props.rowHeight;\n    }\n  }, {\n    key: '_renderBottomLeftGrid',\n    value: function _renderBottomLeftGrid(props) {\n      var enableFixedColumnScroll = props.enableFixedColumnScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          hideBottomLeftGridScrollbar = props.hideBottomLeftGridScrollbar;\n      var showVerticalScrollbar = this.state.showVerticalScrollbar;\n\n\n      if (!fixedColumnCount) {\n        return null;\n      }\n\n      var additionalRowCount = showVerticalScrollbar ? 1 : 0,\n          height = this._getBottomGridHeight(props),\n          width = this._getLeftGridWidth(props),\n          scrollbarSize = this.state.showVerticalScrollbar ? this.state.scrollbarSize : 0,\n          gridWidth = hideBottomLeftGridScrollbar ? width + scrollbarSize : width;\n\n      var bottomLeftGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomLeftGrid,\n        className: this.props.classNameBottomLeftGrid,\n        columnCount: fixedColumnCount,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomLeftGrid,\n        height: height,\n        onScroll: enableFixedColumnScroll ? this._onScrollTop : undefined,\n        ref: this._bottomLeftGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount) + additionalRowCount,\n        rowHeight: this._rowHeightBottomGrid,\n        style: this._bottomLeftGridStyle,\n        tabIndex: null,\n        width: gridWidth\n      }));\n\n      if (hideBottomLeftGridScrollbar) {\n        return React.createElement(\n          'div',\n          {\n            className: 'BottomLeftGrid_ScrollWrapper',\n            style: _extends({}, this._bottomLeftGridStyle, {\n              height: height,\n              width: width,\n              overflowY: 'hidden'\n            }) },\n          bottomLeftGrid\n        );\n      }\n      return bottomLeftGrid;\n    }\n  }, {\n    key: '_renderBottomRightGrid',\n    value: function _renderBottomRightGrid(props) {\n      var columnCount = props.columnCount,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          scrollToColumn = props.scrollToColumn,\n          scrollToRow = props.scrollToRow;\n\n\n      return React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomRightGrid,\n        className: this.props.classNameBottomRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount),\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomRightGrid,\n        height: this._getBottomGridHeight(props),\n        onScroll: this._onScroll,\n        onScrollbarPresenceChange: this._onScrollbarPresenceChange,\n        ref: this._bottomRightGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount),\n        rowHeight: this._rowHeightBottomGrid,\n        scrollToColumn: scrollToColumn - fixedColumnCount,\n        scrollToRow: scrollToRow - fixedRowCount,\n        style: this._bottomRightGridStyle,\n        width: this._getRightGridWidth(props)\n      }));\n    }\n  }, {\n    key: '_renderTopLeftGrid',\n    value: function _renderTopLeftGrid(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount;\n\n\n      if (!fixedColumnCount || !fixedRowCount) {\n        return null;\n      }\n\n      return React.createElement(Grid, _extends({}, props, {\n        className: this.props.classNameTopLeftGrid,\n        columnCount: fixedColumnCount,\n        height: this._getTopGridHeight(props),\n        ref: this._topLeftGridRef,\n        rowCount: fixedRowCount,\n        style: this._topLeftGridStyle,\n        tabIndex: null,\n        width: this._getLeftGridWidth(props)\n      }));\n    }\n  }, {\n    key: '_renderTopRightGrid',\n    value: function _renderTopRightGrid(props) {\n      var columnCount = props.columnCount,\n          enableFixedRowScroll = props.enableFixedRowScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          scrollLeft = props.scrollLeft,\n          hideTopRightGridScrollbar = props.hideTopRightGridScrollbar;\n      var _state2 = this.state,\n          showHorizontalScrollbar = _state2.showHorizontalScrollbar,\n          scrollbarSize = _state2.scrollbarSize;\n\n\n      if (!fixedRowCount) {\n        return null;\n      }\n\n      var additionalColumnCount = showHorizontalScrollbar ? 1 : 0,\n          height = this._getTopGridHeight(props),\n          width = this._getRightGridWidth(props),\n          additionalHeight = showHorizontalScrollbar ? scrollbarSize : 0;\n\n      var gridHeight = height,\n          style = this._topRightGridStyle;\n\n      if (hideTopRightGridScrollbar) {\n        gridHeight = height + additionalHeight;\n        style = _extends({}, this._topRightGridStyle, {\n          left: 0\n        });\n      }\n\n      var topRightGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererTopRightGrid,\n        className: this.props.classNameTopRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount) + additionalColumnCount,\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheTopRightGrid,\n        height: gridHeight,\n        onScroll: enableFixedRowScroll ? this._onScrollLeft : undefined,\n        ref: this._topRightGridRef,\n        rowCount: fixedRowCount,\n        scrollLeft: scrollLeft,\n        style: style,\n        tabIndex: null,\n        width: width\n      }));\n\n      if (hideTopRightGridScrollbar) {\n        return React.createElement(\n          'div',\n          {\n            className: 'TopRightGrid_ScrollWrapper',\n            style: _extends({}, this._topRightGridStyle, {\n              height: height,\n              width: width,\n              overflowX: 'hidden'\n            }) },\n          topRightGrid\n        );\n      }\n      return topRightGrid;\n    }\n  }], [{\n    key: 'getDerivedStateFromProps',\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null && nextProps.scrollLeft >= 0 ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null && nextProps.scrollTop >= 0 ? nextProps.scrollTop : prevState.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return MultiGrid;\n}(React.PureComponent);\n\nMultiGrid.defaultProps = {\n  classNameBottomLeftGrid: '',\n  classNameBottomRightGrid: '',\n  classNameTopLeftGrid: '',\n  classNameTopRightGrid: '',\n  enableFixedColumnScroll: false,\n  enableFixedRowScroll: false,\n  fixedColumnCount: 0,\n  fixedRowCount: 0,\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  styleBottomLeftGrid: {},\n  styleBottomRightGrid: {},\n  styleTopLeftGrid: {},\n  styleTopRightGrid: {},\n  hideTopRightGridScrollbar: false,\n  hideBottomLeftGridScrollbar: false\n};\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this2 = this;\n\n  this.state = {\n    scrollLeft: 0,\n    scrollTop: 0,\n    scrollbarSize: 0,\n    showHorizontalScrollbar: false,\n    showVerticalScrollbar: false\n  };\n  this._deferredInvalidateColumnIndex = null;\n  this._deferredInvalidateRowIndex = null;\n\n  this._bottomLeftGridRef = function (ref) {\n    _this2._bottomLeftGrid = ref;\n  };\n\n  this._bottomRightGridRef = function (ref) {\n    _this2._bottomRightGrid = ref;\n  };\n\n  this._cellRendererBottomLeftGrid = function (_ref3) {\n    var rowIndex = _ref3.rowIndex,\n        rest = _objectWithoutProperties(_ref3, ['rowIndex']);\n\n    var _props5 = _this2.props,\n        cellRenderer = _props5.cellRenderer,\n        fixedRowCount = _props5.fixedRowCount,\n        rowCount = _props5.rowCount;\n\n\n    if (rowIndex === rowCount - fixedRowCount) {\n      return React.createElement('div', {\n        key: rest.key,\n        style: _extends({}, rest.style, {\n          height: SCROLLBAR_SIZE_BUFFER\n        })\n      });\n    } else {\n      return cellRenderer(_extends({}, rest, {\n        parent: _this2,\n        rowIndex: rowIndex + fixedRowCount\n      }));\n    }\n  };\n\n  this._cellRendererBottomRightGrid = function (_ref4) {\n    var columnIndex = _ref4.columnIndex,\n        rowIndex = _ref4.rowIndex,\n        rest = _objectWithoutProperties(_ref4, ['columnIndex', 'rowIndex']);\n\n    var _props6 = _this2.props,\n        cellRenderer = _props6.cellRenderer,\n        fixedColumnCount = _props6.fixedColumnCount,\n        fixedRowCount = _props6.fixedRowCount;\n\n\n    return cellRenderer(_extends({}, rest, {\n      columnIndex: columnIndex + fixedColumnCount,\n      parent: _this2,\n      rowIndex: rowIndex + fixedRowCount\n    }));\n  };\n\n  this._cellRendererTopRightGrid = function (_ref5) {\n    var columnIndex = _ref5.columnIndex,\n        rest = _objectWithoutProperties(_ref5, ['columnIndex']);\n\n    var _props7 = _this2.props,\n        cellRenderer = _props7.cellRenderer,\n        columnCount = _props7.columnCount,\n        fixedColumnCount = _props7.fixedColumnCount;\n\n\n    if (columnIndex === columnCount - fixedColumnCount) {\n      return React.createElement('div', {\n        key: rest.key,\n        style: _extends({}, rest.style, {\n          width: SCROLLBAR_SIZE_BUFFER\n        })\n      });\n    } else {\n      return cellRenderer(_extends({}, rest, {\n        columnIndex: columnIndex + fixedColumnCount,\n        parent: _this2\n      }));\n    }\n  };\n\n  this._columnWidthRightGrid = function (_ref6) {\n    var index = _ref6.index;\n    var _props8 = _this2.props,\n        columnCount = _props8.columnCount,\n        fixedColumnCount = _props8.fixedColumnCount,\n        columnWidth = _props8.columnWidth;\n    var _state3 = _this2.state,\n        scrollbarSize = _state3.scrollbarSize,\n        showHorizontalScrollbar = _state3.showHorizontalScrollbar;\n\n    // An extra cell is added to the count\n    // This gives the smaller Grid extra room for offset,\n    // In case the main (bottom right) Grid has a scrollbar\n    // If no scrollbar, the extra space is overflow:hidden anyway\n\n    if (showHorizontalScrollbar && index === columnCount - fixedColumnCount) {\n      return scrollbarSize;\n    }\n\n    return typeof columnWidth === 'function' ? columnWidth({ index: index + fixedColumnCount }) : columnWidth;\n  };\n\n  this._onScroll = function (scrollInfo) {\n    var scrollLeft = scrollInfo.scrollLeft,\n        scrollTop = scrollInfo.scrollTop;\n\n    _this2.setState({\n      scrollLeft: scrollLeft,\n      scrollTop: scrollTop\n    });\n    var onScroll = _this2.props.onScroll;\n    if (onScroll) {\n      onScroll(scrollInfo);\n    }\n  };\n\n  this._onScrollbarPresenceChange = function (_ref7) {\n    var horizontal = _ref7.horizontal,\n        size = _ref7.size,\n        vertical = _ref7.vertical;\n    var _state4 = _this2.state,\n        showHorizontalScrollbar = _state4.showHorizontalScrollbar,\n        showVerticalScrollbar = _state4.showVerticalScrollbar;\n\n\n    if (horizontal !== showHorizontalScrollbar || vertical !== showVerticalScrollbar) {\n      _this2.setState({\n        scrollbarSize: size,\n        showHorizontalScrollbar: horizontal,\n        showVerticalScrollbar: vertical\n      });\n\n      var onScrollbarPresenceChange = _this2.props.onScrollbarPresenceChange;\n\n      if (typeof onScrollbarPresenceChange === 'function') {\n        onScrollbarPresenceChange({\n          horizontal: horizontal,\n          size: size,\n          vertical: vertical\n        });\n      }\n    }\n  };\n\n  this._onScrollLeft = function (scrollInfo) {\n    var scrollLeft = scrollInfo.scrollLeft;\n\n    _this2._onScroll({\n      scrollLeft: scrollLeft,\n      scrollTop: _this2.state.scrollTop\n    });\n  };\n\n  this._onScrollTop = function (scrollInfo) {\n    var scrollTop = scrollInfo.scrollTop;\n\n    _this2._onScroll({\n      scrollTop: scrollTop,\n      scrollLeft: _this2.state.scrollLeft\n    });\n  };\n\n  this._rowHeightBottomGrid = function (_ref8) {\n    var index = _ref8.index;\n    var _props9 = _this2.props,\n        fixedRowCount = _props9.fixedRowCount,\n        rowCount = _props9.rowCount,\n        rowHeight = _props9.rowHeight;\n    var _state5 = _this2.state,\n        scrollbarSize = _state5.scrollbarSize,\n        showVerticalScrollbar = _state5.showVerticalScrollbar;\n\n    // An extra cell is added to the count\n    // This gives the smaller Grid extra room for offset,\n    // In case the main (bottom right) Grid has a scrollbar\n    // If no scrollbar, the extra space is overflow:hidden anyway\n\n    if (showVerticalScrollbar && index === rowCount - fixedRowCount) {\n      return scrollbarSize;\n    }\n\n    return typeof rowHeight === 'function' ? rowHeight({ index: index + fixedRowCount }) : rowHeight;\n  };\n\n  this._topLeftGridRef = function (ref) {\n    _this2._topLeftGrid = ref;\n  };\n\n  this._topRightGridRef = function (ref) {\n    _this2._topRightGrid = ref;\n  };\n};\n\nMultiGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  classNameBottomLeftGrid: PropTypes.string.isRequired,\n  classNameBottomRightGrid: PropTypes.string.isRequired,\n  classNameTopLeftGrid: PropTypes.string.isRequired,\n  classNameTopRightGrid: PropTypes.string.isRequired,\n  enableFixedColumnScroll: PropTypes.bool.isRequired,\n  enableFixedRowScroll: PropTypes.bool.isRequired,\n  fixedColumnCount: PropTypes.number.isRequired,\n  fixedRowCount: PropTypes.number.isRequired,\n  onScrollbarPresenceChange: PropTypes.func,\n  style: PropTypes.object.isRequired,\n  styleBottomLeftGrid: PropTypes.object.isRequired,\n  styleBottomRightGrid: PropTypes.object.isRequired,\n  styleTopLeftGrid: PropTypes.object.isRequired,\n  styleTopRightGrid: PropTypes.object.isRequired,\n  hideTopRightGridScrollbar: PropTypes.bool,\n  hideBottomLeftGridScrollbar: PropTypes.bool\n} : {};\n\n\npolyfill(MultiGrid);\n\nexport default MultiGrid;"]},"metadata":{},"sourceType":"module"}