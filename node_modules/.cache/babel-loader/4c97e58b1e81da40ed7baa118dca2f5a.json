{"ast":null,"code":"/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { Fragment } from 'react';\nimport { EuiI18nConsumer } from '../context';\nimport { processStringToChildren } from './i18n_util';\n\nfunction errorOnMissingValues(token) {\n  throw new Error(\"I18n mapping for token \\\"\".concat(token, \"\\\" is a formatting function but no values were provided.\"));\n}\n\nfunction lookupToken(token, i18nMapping, valueDefault, i18nMappingFunc, values) {\n  var renderable = i18nMapping && i18nMapping[token] || valueDefault;\n\n  if (typeof renderable === 'function') {\n    if (values === undefined) {\n      return errorOnMissingValues(token);\n    } else {\n      // @ts-ignore-next-line\n      // TypeScript complains that `DEFAULT` doesn't have a call signature\n      // but we verified `renderable` is a function\n      return renderable(values);\n    }\n  } else if (values === undefined || typeof renderable !== 'string') {\n    if (i18nMappingFunc && typeof valueDefault === 'string') {\n      renderable = i18nMappingFunc(valueDefault);\n    } // there's a hole in the typings here as there is no guarantee that i18nMappingFunc\n    // returned the same type of the default value, but we need to keep that assumption\n\n\n    return renderable;\n  }\n\n  var children = processStringToChildren(renderable, values, i18nMappingFunc);\n\n  if (typeof children === 'string') {\n    // likewise, `processStringToChildren` returns a string or ReactChild[] depending on\n    // the type of `values`, so we will make the assumption that the default value is correct.\n    return children;\n  }\n\n  var Component = function Component() {\n    return React.createElement(Fragment, null, children);\n  }; // same reasons as above, we can't promise the transforms match the default's type\n\n\n  return React.createElement(Component, values);\n}\n\nfunction hasTokens(x) {\n  return x.tokens != null;\n} // Must use the generics <T extends {}>\n// If instead typed with React.FunctionComponent there isn't feedback given back to the dev\n// when using a `values` object with a renderer callback.\n\n\nvar EuiI18n = function EuiI18n(props) {\n  return React.createElement(EuiI18nConsumer, null, function (i18nConfig) {\n    var mapping = i18nConfig.mapping,\n        mappingFunc = i18nConfig.mappingFunc;\n\n    if (hasTokens(props)) {\n      return props.children(props.tokens.map(function (token, idx) {\n        return lookupToken(token, mapping, props.defaults[idx], mappingFunc);\n      }));\n    }\n\n    var tokenValue = lookupToken(props.token, mapping, props.default, mappingFunc, props.values);\n\n    if (props.children) {\n      return props.children(tokenValue);\n    } else {\n      return tokenValue;\n    }\n  });\n};\n\nexport { EuiI18n };\nEuiI18n.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"EuiI18n\"\n};","map":{"version":3,"sources":["/home/nadaanbaalak/greendeck/client/node_modules/@elastic/eui/es/components/i18n/i18n.js"],"names":["React","Fragment","EuiI18nConsumer","processStringToChildren","errorOnMissingValues","token","Error","concat","lookupToken","i18nMapping","valueDefault","i18nMappingFunc","values","renderable","undefined","children","Component","createElement","hasTokens","x","tokens","EuiI18n","props","i18nConfig","mapping","mappingFunc","map","idx","defaults","tokenValue","default","__docgenInfo"],"mappings":"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","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { Fragment } from 'react';\nimport { EuiI18nConsumer } from '../context';\nimport { processStringToChildren } from './i18n_util';\n\nfunction errorOnMissingValues(token) {\n  throw new Error(\"I18n mapping for token \\\"\".concat(token, \"\\\" is a formatting function but no values were provided.\"));\n}\n\nfunction lookupToken(token, i18nMapping, valueDefault, i18nMappingFunc, values) {\n  var renderable = i18nMapping && i18nMapping[token] || valueDefault;\n\n  if (typeof renderable === 'function') {\n    if (values === undefined) {\n      return errorOnMissingValues(token);\n    } else {\n      // @ts-ignore-next-line\n      // TypeScript complains that `DEFAULT` doesn't have a call signature\n      // but we verified `renderable` is a function\n      return renderable(values);\n    }\n  } else if (values === undefined || typeof renderable !== 'string') {\n    if (i18nMappingFunc && typeof valueDefault === 'string') {\n      renderable = i18nMappingFunc(valueDefault);\n    } // there's a hole in the typings here as there is no guarantee that i18nMappingFunc\n    // returned the same type of the default value, but we need to keep that assumption\n\n\n    return renderable;\n  }\n\n  var children = processStringToChildren(renderable, values, i18nMappingFunc);\n\n  if (typeof children === 'string') {\n    // likewise, `processStringToChildren` returns a string or ReactChild[] depending on\n    // the type of `values`, so we will make the assumption that the default value is correct.\n    return children;\n  }\n\n  var Component = function Component() {\n    return React.createElement(Fragment, null, children);\n  }; // same reasons as above, we can't promise the transforms match the default's type\n\n\n  return React.createElement(Component, values);\n}\n\nfunction hasTokens(x) {\n  return x.tokens != null;\n} // Must use the generics <T extends {}>\n// If instead typed with React.FunctionComponent there isn't feedback given back to the dev\n// when using a `values` object with a renderer callback.\n\n\nvar EuiI18n = function EuiI18n(props) {\n  return React.createElement(EuiI18nConsumer, null, function (i18nConfig) {\n    var mapping = i18nConfig.mapping,\n        mappingFunc = i18nConfig.mappingFunc;\n\n    if (hasTokens(props)) {\n      return props.children(props.tokens.map(function (token, idx) {\n        return lookupToken(token, mapping, props.defaults[idx], mappingFunc);\n      }));\n    }\n\n    var tokenValue = lookupToken(props.token, mapping, props.default, mappingFunc, props.values);\n\n    if (props.children) {\n      return props.children(tokenValue);\n    } else {\n      return tokenValue;\n    }\n  });\n};\n\nexport { EuiI18n };\nEuiI18n.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"EuiI18n\"\n};"]},"metadata":{},"sourceType":"module"}