{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\nimport React from 'react';\nimport PropTypes from \"prop-types\";\nimport classNames from 'classnames';\nimport { EuiFormFieldset } from '../form_fieldset';\nimport { EuiRadio } from './radio';\nexport var EuiRadioGroup = function EuiRadioGroup(_ref) {\n  var _ref$options = _ref.options,\n      options = _ref$options === void 0 ? [] : _ref$options,\n      idSelected = _ref.idSelected,\n      onChange = _ref.onChange,\n      name = _ref.name,\n      className = _ref.className,\n      disabled = _ref.disabled,\n      compressed = _ref.compressed,\n      legend = _ref.legend,\n      rest = _objectWithoutProperties(_ref, [\"options\", \"idSelected\", \"onChange\", \"name\", \"className\", \"disabled\", \"compressed\", \"legend\"]);\n\n  var radios = options.map(function (option, index) {\n    var isOptionDisabled = option.disabled,\n        optionClass = option.className,\n        id = option.id,\n        label = option.label,\n        optionRest = _objectWithoutProperties(option, [\"disabled\", \"className\", \"id\", \"label\"]);\n\n    return React.createElement(EuiRadio, _extends({\n      className: classNames('euiRadioGroup__item', optionClass),\n      key: index,\n      name: name,\n      checked: id === idSelected,\n      disabled: disabled || isOptionDisabled,\n      onChange: onChange.bind(null, id, option.value),\n      compressed: compressed,\n      id: id,\n      label: label\n    }, optionRest));\n  });\n\n  if (!!legend) {\n    // Be sure to pass down the compressed option to the legend\n    legend.compressed = compressed;\n    return React.createElement(EuiFormFieldset, _extends({\n      className: className,\n      legend: legend\n    }, rest), radios);\n  }\n\n  return React.createElement(\"div\", _extends({\n    className: className\n  }, rest), radios);\n};\nEuiRadioGroup.propTypes = {\n  className: PropTypes.string,\n  \"aria-label\": PropTypes.string,\n  \"data-test-subj\": PropTypes.string,\n  disabled: PropTypes.bool,\n\n  /**\n     * Tightens up the spacing between radio rows and sends down the\n     * compressed prop to the radio itself\n     */\n  compressed: PropTypes.bool,\n  name: PropTypes.string,\n  options: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired\n  }).isRequired).isRequired,\n  idSelected: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n\n  /**\n     * If the individual labels for each radio do not provide a sufficient description, add a legend.\n     * Wraps the group in a `EuiFormFieldset` which adds an `EuiLegend` for titling the whole group.\n     * Accepts an `EuiFormLegendProps` shape.\n     */\n  legend: PropTypes.shape({\n    className: PropTypes.string,\n    \"aria-label\": PropTypes.string,\n    \"data-test-subj\": PropTypes.string,\n    children: PropTypes.node.isRequired,\n\n    /**\n         * For a hidden legend that is still visible to the screen reader, set to 'hidden'\n         */\n    display: PropTypes.oneOf([\"hidden\", \"visible\"]),\n    compressed: PropTypes.bool\n  })\n};\nEuiRadioGroup.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"EuiRadioGroup\",\n  \"props\": {\n    \"options\": {\n      \"defaultValue\": {\n        \"value\": \"[]\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"arrayOf\",\n        \"value\": {\n          \"name\": \"shape\",\n          \"value\": {\n            \"id\": {\n              \"name\": \"string\",\n              \"required\": true\n            }\n          }\n        }\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"className\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"aria-label\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"data-test-subj\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"disabled\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"compressed\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Tightens up the spacing between radio rows and sends down the\\ncompressed prop to the radio itself\"\n    },\n    \"name\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"idSelected\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"onChange\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"legend\": {\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"className\": {\n            \"name\": \"string\",\n            \"required\": false\n          },\n          \"aria-label\": {\n            \"name\": \"string\",\n            \"required\": false\n          },\n          \"data-test-subj\": {\n            \"name\": \"string\",\n            \"required\": false\n          },\n          \"children\": {\n            \"name\": \"node\",\n            \"required\": true\n          },\n          \"display\": {\n            \"name\": \"enum\",\n            \"value\": [{\n              \"value\": \"\\\"hidden\\\"\",\n              \"computed\": false\n            }, {\n              \"value\": \"\\\"visible\\\"\",\n              \"computed\": false\n            }],\n            \"description\": \"For a hidden legend that is still visible to the screen reader, set to 'hidden'\",\n            \"required\": false\n          },\n          \"compressed\": {\n            \"name\": \"bool\",\n            \"required\": false\n          }\n        }\n      },\n      \"required\": false,\n      \"description\": \"If the individual labels for each radio do not provide a sufficient description, add a legend.\\nWraps the group in a `EuiFormFieldset` which adds an `EuiLegend` for titling the whole group.\\nAccepts an `EuiFormLegendProps` shape.\"\n    }\n  }\n};","map":{"version":3,"sources":["/home/nadaanbaalak/greendeck/client/node_modules/@elastic/eui/es/components/form/radio/radio_group.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","indexOf","propertyIsEnumerable","sourceKeys","keys","React","PropTypes","classNames","EuiFormFieldset","EuiRadio","EuiRadioGroup","_ref","_ref$options","options","idSelected","onChange","name","className","disabled","compressed","legend","rest","radios","map","option","index","isOptionDisabled","optionClass","id","label","optionRest","createElement","checked","bind","value","propTypes","string","bool","arrayOf","shape","isRequired","func","children","node","display","oneOf","__docgenInfo"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from \"prop-types\";\nimport classNames from 'classnames';\nimport { EuiFormFieldset } from '../form_fieldset';\nimport { EuiRadio } from './radio';\nexport var EuiRadioGroup = function EuiRadioGroup(_ref) {\n  var _ref$options = _ref.options,\n      options = _ref$options === void 0 ? [] : _ref$options,\n      idSelected = _ref.idSelected,\n      onChange = _ref.onChange,\n      name = _ref.name,\n      className = _ref.className,\n      disabled = _ref.disabled,\n      compressed = _ref.compressed,\n      legend = _ref.legend,\n      rest = _objectWithoutProperties(_ref, [\"options\", \"idSelected\", \"onChange\", \"name\", \"className\", \"disabled\", \"compressed\", \"legend\"]);\n\n  var radios = options.map(function (option, index) {\n    var isOptionDisabled = option.disabled,\n        optionClass = option.className,\n        id = option.id,\n        label = option.label,\n        optionRest = _objectWithoutProperties(option, [\"disabled\", \"className\", \"id\", \"label\"]);\n\n    return React.createElement(EuiRadio, _extends({\n      className: classNames('euiRadioGroup__item', optionClass),\n      key: index,\n      name: name,\n      checked: id === idSelected,\n      disabled: disabled || isOptionDisabled,\n      onChange: onChange.bind(null, id, option.value),\n      compressed: compressed,\n      id: id,\n      label: label\n    }, optionRest));\n  });\n\n  if (!!legend) {\n    // Be sure to pass down the compressed option to the legend\n    legend.compressed = compressed;\n    return React.createElement(EuiFormFieldset, _extends({\n      className: className,\n      legend: legend\n    }, rest), radios);\n  }\n\n  return React.createElement(\"div\", _extends({\n    className: className\n  }, rest), radios);\n};\nEuiRadioGroup.propTypes = {\n  className: PropTypes.string,\n  \"aria-label\": PropTypes.string,\n  \"data-test-subj\": PropTypes.string,\n  disabled: PropTypes.bool,\n\n  /**\n     * Tightens up the spacing between radio rows and sends down the\n     * compressed prop to the radio itself\n     */\n  compressed: PropTypes.bool,\n  name: PropTypes.string,\n  options: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired\n  }).isRequired).isRequired,\n  idSelected: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n\n  /**\n     * If the individual labels for each radio do not provide a sufficient description, add a legend.\n     * Wraps the group in a `EuiFormFieldset` which adds an `EuiLegend` for titling the whole group.\n     * Accepts an `EuiFormLegendProps` shape.\n     */\n  legend: PropTypes.shape({\n    className: PropTypes.string,\n    \"aria-label\": PropTypes.string,\n    \"data-test-subj\": PropTypes.string,\n    children: PropTypes.node.isRequired,\n\n    /**\n         * For a hidden legend that is still visible to the screen reader, set to 'hidden'\n         */\n    display: PropTypes.oneOf([\"hidden\", \"visible\"]),\n    compressed: PropTypes.bool\n  })\n};\nEuiRadioGroup.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"EuiRadioGroup\",\n  \"props\": {\n    \"options\": {\n      \"defaultValue\": {\n        \"value\": \"[]\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"arrayOf\",\n        \"value\": {\n          \"name\": \"shape\",\n          \"value\": {\n            \"id\": {\n              \"name\": \"string\",\n              \"required\": true\n            }\n          }\n        }\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"className\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"aria-label\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"data-test-subj\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"disabled\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"compressed\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Tightens up the spacing between radio rows and sends down the\\ncompressed prop to the radio itself\"\n    },\n    \"name\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"idSelected\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"onChange\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"legend\": {\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"className\": {\n            \"name\": \"string\",\n            \"required\": false\n          },\n          \"aria-label\": {\n            \"name\": \"string\",\n            \"required\": false\n          },\n          \"data-test-subj\": {\n            \"name\": \"string\",\n            \"required\": false\n          },\n          \"children\": {\n            \"name\": \"node\",\n            \"required\": true\n          },\n          \"display\": {\n            \"name\": \"enum\",\n            \"value\": [{\n              \"value\": \"\\\"hidden\\\"\",\n              \"computed\": false\n            }, {\n              \"value\": \"\\\"visible\\\"\",\n              \"computed\": false\n            }],\n            \"description\": \"For a hidden legend that is still visible to the screen reader, set to 'hidden'\",\n            \"required\": false\n          },\n          \"compressed\": {\n            \"name\": \"bool\",\n            \"required\": false\n          }\n        }\n      },\n      \"required\": false,\n      \"description\": \"If the individual labels for each radio do not provide a sufficient description, add a legend.\\nWraps the group in a `EuiFormFieldset` which adds an `EuiLegend` for titling the whole group.\\nAccepts an `EuiFormLegendProps` shape.\"\n    }\n  }\n};"]},"metadata":{},"sourceType":"module"}