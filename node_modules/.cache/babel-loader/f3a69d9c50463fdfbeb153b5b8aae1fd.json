{"ast":null,"code":"/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { isNil } from '../../services/predicate';\nexport var is = function is(expectedValue) {\n  var validator = function validator(props, propName, componentName) {\n    var compName = componentName || 'ANONYMOUS';\n    var value = props[propName];\n\n    if (value !== expectedValue) {\n      return new Error(\"[\".concat(propName, \"] property in [\").concat(compName, \"] component is expected to equal [\").concat(expectedValue, \"] but\\n         [\").concat(value, \"] was provided instead.\"));\n    }\n\n    return null;\n  };\n\n  validator.isRequired = function (props, propName, componentName) {\n    var compName = componentName || 'ANONYMOUS';\n    var value = props[propName];\n\n    if (isNil(value)) {\n      return new Error(\"[\".concat(propName, \"] property in [\").concat(compName, \"] component is required but seems to be missing\"));\n    }\n\n    return validator(props, propName, componentName);\n  };\n\n  return validator;\n};","map":{"version":3,"sources":["/home/nadaanbaalak/greendeck/client/node_modules/@elastic/eui/es/utils/prop_types/is.js"],"names":["isNil","is","expectedValue","validator","props","propName","componentName","compName","value","Error","concat","isRequired"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAkBA,SAASA,KAAT,QAAsB,0BAAtB;AACA,OAAO,IAAIC,EAAE,GAAG,SAASA,EAAT,CAAYC,aAAZ,EAA2B;AACzC,MAAIC,SAAS,GAAG,SAASA,SAAT,CAAmBC,KAAnB,EAA0BC,QAA1B,EAAoCC,aAApC,EAAmD;AACjE,QAAIC,QAAQ,GAAGD,aAAa,IAAI,WAAhC;AACA,QAAIE,KAAK,GAAGJ,KAAK,CAACC,QAAD,CAAjB;;AAEA,QAAIG,KAAK,KAAKN,aAAd,EAA6B;AAC3B,aAAO,IAAIO,KAAJ,CAAU,IAAIC,MAAJ,CAAWL,QAAX,EAAqB,iBAArB,EAAwCK,MAAxC,CAA+CH,QAA/C,EAAyD,oCAAzD,EAA+FG,MAA/F,CAAsGR,aAAtG,EAAqH,mBAArH,EAA0IQ,MAA1I,CAAiJF,KAAjJ,EAAwJ,yBAAxJ,CAAV,CAAP;AACD;;AAED,WAAO,IAAP;AACD,GATD;;AAWAL,EAAAA,SAAS,CAACQ,UAAV,GAAuB,UAAUP,KAAV,EAAiBC,QAAjB,EAA2BC,aAA3B,EAA0C;AAC/D,QAAIC,QAAQ,GAAGD,aAAa,IAAI,WAAhC;AACA,QAAIE,KAAK,GAAGJ,KAAK,CAACC,QAAD,CAAjB;;AAEA,QAAIL,KAAK,CAACQ,KAAD,CAAT,EAAkB;AAChB,aAAO,IAAIC,KAAJ,CAAU,IAAIC,MAAJ,CAAWL,QAAX,EAAqB,iBAArB,EAAwCK,MAAxC,CAA+CH,QAA/C,EAAyD,iDAAzD,CAAV,CAAP;AACD;;AAED,WAAOJ,SAAS,CAACC,KAAD,EAAQC,QAAR,EAAkBC,aAAlB,CAAhB;AACD,GATD;;AAWA,SAAOH,SAAP;AACD,CAxBM","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { isNil } from '../../services/predicate';\nexport var is = function is(expectedValue) {\n  var validator = function validator(props, propName, componentName) {\n    var compName = componentName || 'ANONYMOUS';\n    var value = props[propName];\n\n    if (value !== expectedValue) {\n      return new Error(\"[\".concat(propName, \"] property in [\").concat(compName, \"] component is expected to equal [\").concat(expectedValue, \"] but\\n         [\").concat(value, \"] was provided instead.\"));\n    }\n\n    return null;\n  };\n\n  validator.isRequired = function (props, propName, componentName) {\n    var compName = componentName || 'ANONYMOUS';\n    var value = props[propName];\n\n    if (isNil(value)) {\n      return new Error(\"[\".concat(propName, \"] property in [\").concat(compName, \"] component is required but seems to be missing\"));\n    }\n\n    return validator(props, propName, componentName);\n  };\n\n  return validator;\n};"]},"metadata":{},"sourceType":"module"}