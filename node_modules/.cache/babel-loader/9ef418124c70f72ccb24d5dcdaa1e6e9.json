{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport PropTypes from \"prop-types\";\nimport { htmlIdGenerator } from '../../services/accessibility';\nimport classnames from 'classnames';\nimport { keyCodes } from '../../services';\nimport { EuiDataGridColumnResizer } from './data_grid_column_resizer';\nimport { EuiScreenReaderOnly } from '../accessibility';\nimport tabbable from 'tabbable';\nexport var EuiDataGridHeaderCell = function EuiDataGridHeaderCell(props) {\n  var column = props.column,\n      index = props.index,\n      columnWidths = props.columnWidths,\n      schema = props.schema,\n      defaultColumnWidth = props.defaultColumnWidth,\n      setColumnWidth = props.setColumnWidth,\n      sorting = props.sorting,\n      focusedCell = props.focusedCell,\n      setFocusedCell = props.setFocusedCell,\n      headerIsInteractive = props.headerIsInteractive,\n      className = props.className;\n  var id = column.id,\n      display = column.display;\n  var width = columnWidths[id] || defaultColumnWidth;\n  var ariaProps = {};\n  var screenReaderId;\n  var sortString;\n\n  if (sorting) {\n    var sortedColumnIds = new Set(sorting.columns.map(function (_ref) {\n      var id = _ref.id;\n      return id;\n    }));\n\n    if (sorting.columns.length === 1 && sortedColumnIds.has(id)) {\n      var sortDirection = sorting.columns[0].direction;\n      var sortValue = 'other';\n\n      if (sortDirection === 'asc') {\n        sortValue = 'ascending';\n      } else if (sortDirection === 'desc') {\n        sortValue = 'descending';\n      }\n\n      ariaProps['aria-sort'] = sortValue;\n    } else if (sorting.columns.length >= 2 && sortedColumnIds.has(id)) {\n      sortString = sorting.columns.map(function (col) {\n        return \"Sorted by \".concat(col.id, \" \").concat(col.direction);\n      }).join(' then ');\n      screenReaderId = htmlIdGenerator()();\n      ariaProps['aria-describedby'] = screenReaderId;\n    }\n  }\n\n  var columnType = schema[id] ? schema[id].columnType : null;\n  var classes = classnames('euiDataGridHeaderCell', _defineProperty({}, \"euiDataGridHeaderCell--\".concat(columnType), columnType), className);\n  var headerRef = useRef(null);\n  var isFocused = focusedCell != null && focusedCell[0] === index && focusedCell[1] === -1;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isCellEntered = _useState2[0],\n      setIsCellEntered = _useState2[1];\n\n  var enableInteractives = useCallback(function () {\n    if (headerRef.current) {\n      var interactiveElements = headerRef.current.querySelectorAll('[data-euigrid-tab-managed]');\n\n      for (var i = 0; i < interactiveElements.length; i++) {\n        interactiveElements[i].setAttribute('tabIndex', '0');\n      }\n    }\n  }, []);\n  var disableInteractives = useCallback(function () {\n    if (headerRef.current) {\n      var tababbles = tabbable(headerRef.current);\n\n      if (tababbles.length > 1) {\n        console.warn(\"EuiDataGridHeaderCell expects at most 1 tabbable element, \".concat(tababbles.length, \" found instead\"));\n      }\n\n      for (var i = 0; i < tababbles.length; i++) {\n        var element = tababbles[i];\n        element.setAttribute('data-euigrid-tab-managed', 'true');\n        element.setAttribute('tabIndex', '-1');\n      }\n    }\n  }, []);\n  useEffect(function () {\n    if (headerRef.current) {\n      if (isCellEntered) {\n        enableInteractives();\n        var tabbables = tabbable(headerRef.current);\n\n        if (tabbables.length > 0) {\n          tabbables[0].focus();\n        }\n      } else {\n        disableInteractives();\n      }\n    }\n  }, [disableInteractives, enableInteractives, isCellEntered]);\n  useEffect(function () {\n    if (headerRef.current) {\n      // focusin bubbles while focus does not, and this needs to react to children gaining focus\n      var onFocusIn = function onFocusIn(e) {\n        if (headerIsInteractive === false) {\n          // header is not interactive, avoid focusing\n          requestAnimationFrame(function () {\n            return headerRef.current.blur();\n          });\n          e.preventDefault();\n          return false;\n        } else {\n          // take the focus\n          if (focusedCell == null || focusedCell[0] !== index || focusedCell[1] !== -1) {\n            setFocusedCell([index, -1]);\n          } else if (headerRef.current) {\n            // this cell already had the grid's focus, so re-enable interactives\n            enableInteractives();\n            setIsCellEntered(true); // if there is only one interactive element shift focus to the interactive element\n\n            var tabbables = tabbable(headerRef.current);\n\n            if (tabbables.length === 1) {\n              tabbables[0].focus();\n            }\n          }\n        }\n      }; // focusout bubbles while blur does not, and this needs to react to the children losing focus\n\n\n      var onFocusOut = function onFocusOut() {\n        // wait for the next element to receive focus, then update interactives' state\n        requestAnimationFrame(function () {\n          if (headerRef.current) {\n            if (headerRef.current.contains(document.activeElement) === false) {\n              setIsCellEntered(false);\n            }\n          }\n        });\n      };\n\n      var onKeyUp = function onKeyUp(e) {\n        switch (e.keyCode) {\n          case keyCodes.ENTER:\n            {\n              e.preventDefault();\n              setIsCellEntered(true);\n              break;\n            }\n\n          case keyCodes.ESCAPE:\n            {\n              e.preventDefault(); // move focus to cell\n\n              setIsCellEntered(false);\n              headerRef.current.focus();\n              break;\n            }\n\n          case keyCodes.F2:\n            {\n              e.preventDefault();\n\n              if (document.activeElement === headerRef.current) {\n                // move focus into cell's interactives\n                setIsCellEntered(true);\n              } else {\n                // move focus to cell\n                setIsCellEntered(false);\n                headerRef.current.focus();\n              }\n\n              break;\n            }\n        }\n      };\n\n      if (isFocused) {\n        var interactives = headerRef.current.querySelectorAll('[data-euigrid-tab-managed]');\n\n        if (interactives.length === 1) {\n          setIsCellEntered(true);\n        } else {\n          headerRef.current.focus();\n        }\n      } else {\n        setIsCellEntered(false);\n      }\n\n      var headerNode = headerRef.current; // @ts-ignore-next line TS doesn't have focusin\n\n      headerNode.addEventListener('focusin', onFocusIn);\n      headerNode.addEventListener('focusout', onFocusOut);\n      headerNode.addEventListener('keyup', onKeyUp);\n      return function () {\n        // @ts-ignore-next line TS doesn't have focusin\n        headerNode.removeEventListener('focusin', onFocusIn);\n        headerNode.removeEventListener('focusout', onFocusOut);\n        headerNode.removeEventListener('keyup', onKeyUp);\n      };\n    }\n  }, [enableInteractives, headerIsInteractive, isFocused, setIsCellEntered, focusedCell, setFocusedCell, index]);\n  return React.createElement(\"div\", _extends({\n    role: \"columnheader\"\n  }, ariaProps, {\n    ref: headerRef,\n    tabIndex: isFocused && !isCellEntered ? 0 : -1,\n    className: classes,\n    \"data-test-subj\": \"dataGridHeaderCell-\".concat(id),\n    style: width != null ? {\n      width: \"\".concat(width, \"px\")\n    } : {}\n  }), column.isResizable !== false && width != null ? React.createElement(EuiDataGridColumnResizer, {\n    columnId: id,\n    columnWidth: width,\n    setColumnWidth: setColumnWidth\n  }) : null, React.createElement(\"div\", {\n    className: \"euiDataGridHeaderCell__content\"\n  }, display || id), sorting && sorting.columns.length >= 2 && React.createElement(EuiScreenReaderOnly, null, React.createElement(\"div\", {\n    id: screenReaderId\n  }, sortString)));\n};\nEuiDataGridHeaderCell.propTypes = {\n  column: PropTypes.shape({\n    /**\n       * The unique identifier for this column\n       */\n    id: PropTypes.string.isRequired,\n\n    /**\n       * A `ReactNode` used when rendering the column header. When providing complicated content, please make sure to utilize CSS to respect truncation as space allows. Check the docs example.\n       */\n    display: PropTypes.node,\n\n    /**\n       * A Schema to use for the column. Built-in values are ['boolean', 'currency', 'datetime', 'numeric', 'json'] but can be expanded by defining your own #EuiDataGrid `schemaDetectors` (for in-memory detection). In general, it is advised to pass in a value here when you are sure of the schema ahead of time, so that you don't need to rely on the automatic detection.\n       */\n    schema: PropTypes.string,\n\n    /**\n       * Defauls to true. Defines shether or not the column's cells can be expanded with a popup onClick / keydown.\n       */\n    isExpandable: PropTypes.bool,\n\n    /**\n       * Whether this column's width can be changed by the user, defaults to true\n       */\n    isResizable: PropTypes.bool,\n\n    /**\n       * Initial width (in pixels) of the column\n       */\n    initialWidth: PropTypes.number,\n\n    /**\n       * Whether this column is sortable\n       */\n    isSortable: PropTypes.bool,\n\n    /**\n       * Default sort direction of the column\n       */\n    defaultSortDirection: PropTypes.oneOf([\"asc\", \"desc\"])\n  }).isRequired,\n  index: PropTypes.number.isRequired,\n  className: PropTypes.string\n};\nEuiDataGridHeaderCell.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"EuiDataGridHeaderCell\",\n  \"props\": {\n    \"column\": {\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"id\": {\n            \"name\": \"string\",\n            \"description\": \"The unique identifier for this column\",\n            \"required\": true\n          },\n          \"display\": {\n            \"name\": \"node\",\n            \"description\": \"A `ReactNode` used when rendering the column header. When providing complicated content, please make sure to utilize CSS to respect truncation as space allows. Check the docs example.\",\n            \"required\": false\n          },\n          \"schema\": {\n            \"name\": \"string\",\n            \"description\": \"A Schema to use for the column. Built-in values are ['boolean', 'currency', 'datetime', 'numeric', 'json'] but can be expanded by defining your own #EuiDataGrid `schemaDetectors` (for in-memory detection). In general, it is advised to pass in a value here when you are sure of the schema ahead of time, so that you don't need to rely on the automatic detection.\",\n            \"required\": false\n          },\n          \"isExpandable\": {\n            \"name\": \"bool\",\n            \"description\": \"Defauls to true. Defines shether or not the column's cells can be expanded with a popup onClick / keydown.\",\n            \"required\": false\n          },\n          \"isResizable\": {\n            \"name\": \"bool\",\n            \"description\": \"Whether this column's width can be changed by the user, defaults to true\",\n            \"required\": false\n          },\n          \"initialWidth\": {\n            \"name\": \"number\",\n            \"description\": \"Initial width (in pixels) of the column\",\n            \"required\": false\n          },\n          \"isSortable\": {\n            \"name\": \"bool\",\n            \"description\": \"Whether this column is sortable\",\n            \"required\": false\n          },\n          \"defaultSortDirection\": {\n            \"name\": \"enum\",\n            \"value\": [{\n              \"value\": \"\\\"asc\\\"\",\n              \"computed\": false\n            }, {\n              \"value\": \"\\\"desc\\\"\",\n              \"computed\": false\n            }],\n            \"description\": \"Default sort direction of the column\",\n            \"required\": false\n          }\n        }\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"index\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"className\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};","map":{"version":3,"sources":["/home/nadaanbaalak/greendeck/client/node_modules/@elastic/eui/es/components/datagrid/data_grid_header_cell.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_slicedToArray","arr","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","TypeError","Symbol","iterator","toString","_arr","_n","_d","_e","undefined","_i","_s","next","done","push","value","err","Array","isArray","_defineProperty","obj","defineProperty","enumerable","configurable","writable","React","useCallback","useEffect","useRef","useState","PropTypes","htmlIdGenerator","classnames","keyCodes","EuiDataGridColumnResizer","EuiScreenReaderOnly","tabbable","EuiDataGridHeaderCell","props","column","index","columnWidths","schema","defaultColumnWidth","setColumnWidth","sorting","focusedCell","setFocusedCell","headerIsInteractive","className","id","display","width","ariaProps","screenReaderId","sortString","sortedColumnIds","Set","columns","map","_ref","has","sortDirection","direction","sortValue","col","concat","join","columnType","classes","headerRef","isFocused","_useState","_useState2","isCellEntered","setIsCellEntered","enableInteractives","current","interactiveElements","querySelectorAll","setAttribute","disableInteractives","tababbles","console","warn","element","tabbables","focus","onFocusIn","e","requestAnimationFrame","blur","preventDefault","onFocusOut","contains","document","activeElement","onKeyUp","keyCode","ENTER","ESCAPE","F2","interactives","headerNode","addEventListener","removeEventListener","createElement","role","ref","tabIndex","style","isResizable","columnId","columnWidth","propTypes","shape","string","isRequired","node","isExpandable","bool","initialWidth","number","isSortable","defaultSortDirection","oneOf","__docgenInfo"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport PropTypes from \"prop-types\";\nimport { htmlIdGenerator } from '../../services/accessibility';\nimport classnames from 'classnames';\nimport { keyCodes } from '../../services';\nimport { EuiDataGridColumnResizer } from './data_grid_column_resizer';\nimport { EuiScreenReaderOnly } from '../accessibility';\nimport tabbable from 'tabbable';\nexport var EuiDataGridHeaderCell = function EuiDataGridHeaderCell(props) {\n  var column = props.column,\n      index = props.index,\n      columnWidths = props.columnWidths,\n      schema = props.schema,\n      defaultColumnWidth = props.defaultColumnWidth,\n      setColumnWidth = props.setColumnWidth,\n      sorting = props.sorting,\n      focusedCell = props.focusedCell,\n      setFocusedCell = props.setFocusedCell,\n      headerIsInteractive = props.headerIsInteractive,\n      className = props.className;\n  var id = column.id,\n      display = column.display;\n  var width = columnWidths[id] || defaultColumnWidth;\n  var ariaProps = {};\n  var screenReaderId;\n  var sortString;\n\n  if (sorting) {\n    var sortedColumnIds = new Set(sorting.columns.map(function (_ref) {\n      var id = _ref.id;\n      return id;\n    }));\n\n    if (sorting.columns.length === 1 && sortedColumnIds.has(id)) {\n      var sortDirection = sorting.columns[0].direction;\n      var sortValue = 'other';\n\n      if (sortDirection === 'asc') {\n        sortValue = 'ascending';\n      } else if (sortDirection === 'desc') {\n        sortValue = 'descending';\n      }\n\n      ariaProps['aria-sort'] = sortValue;\n    } else if (sorting.columns.length >= 2 && sortedColumnIds.has(id)) {\n      sortString = sorting.columns.map(function (col) {\n        return \"Sorted by \".concat(col.id, \" \").concat(col.direction);\n      }).join(' then ');\n      screenReaderId = htmlIdGenerator()();\n      ariaProps['aria-describedby'] = screenReaderId;\n    }\n  }\n\n  var columnType = schema[id] ? schema[id].columnType : null;\n  var classes = classnames('euiDataGridHeaderCell', _defineProperty({}, \"euiDataGridHeaderCell--\".concat(columnType), columnType), className);\n  var headerRef = useRef(null);\n  var isFocused = focusedCell != null && focusedCell[0] === index && focusedCell[1] === -1;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isCellEntered = _useState2[0],\n      setIsCellEntered = _useState2[1];\n\n  var enableInteractives = useCallback(function () {\n    if (headerRef.current) {\n      var interactiveElements = headerRef.current.querySelectorAll('[data-euigrid-tab-managed]');\n\n      for (var i = 0; i < interactiveElements.length; i++) {\n        interactiveElements[i].setAttribute('tabIndex', '0');\n      }\n    }\n  }, []);\n  var disableInteractives = useCallback(function () {\n    if (headerRef.current) {\n      var tababbles = tabbable(headerRef.current);\n\n      if (tababbles.length > 1) {\n        console.warn(\"EuiDataGridHeaderCell expects at most 1 tabbable element, \".concat(tababbles.length, \" found instead\"));\n      }\n\n      for (var i = 0; i < tababbles.length; i++) {\n        var element = tababbles[i];\n        element.setAttribute('data-euigrid-tab-managed', 'true');\n        element.setAttribute('tabIndex', '-1');\n      }\n    }\n  }, []);\n  useEffect(function () {\n    if (headerRef.current) {\n      if (isCellEntered) {\n        enableInteractives();\n        var tabbables = tabbable(headerRef.current);\n\n        if (tabbables.length > 0) {\n          tabbables[0].focus();\n        }\n      } else {\n        disableInteractives();\n      }\n    }\n  }, [disableInteractives, enableInteractives, isCellEntered]);\n  useEffect(function () {\n    if (headerRef.current) {\n      // focusin bubbles while focus does not, and this needs to react to children gaining focus\n      var onFocusIn = function onFocusIn(e) {\n        if (headerIsInteractive === false) {\n          // header is not interactive, avoid focusing\n          requestAnimationFrame(function () {\n            return headerRef.current.blur();\n          });\n          e.preventDefault();\n          return false;\n        } else {\n          // take the focus\n          if (focusedCell == null || focusedCell[0] !== index || focusedCell[1] !== -1) {\n            setFocusedCell([index, -1]);\n          } else if (headerRef.current) {\n            // this cell already had the grid's focus, so re-enable interactives\n            enableInteractives();\n            setIsCellEntered(true); // if there is only one interactive element shift focus to the interactive element\n\n            var tabbables = tabbable(headerRef.current);\n\n            if (tabbables.length === 1) {\n              tabbables[0].focus();\n            }\n          }\n        }\n      }; // focusout bubbles while blur does not, and this needs to react to the children losing focus\n\n\n      var onFocusOut = function onFocusOut() {\n        // wait for the next element to receive focus, then update interactives' state\n        requestAnimationFrame(function () {\n          if (headerRef.current) {\n            if (headerRef.current.contains(document.activeElement) === false) {\n              setIsCellEntered(false);\n            }\n          }\n        });\n      };\n\n      var onKeyUp = function onKeyUp(e) {\n        switch (e.keyCode) {\n          case keyCodes.ENTER:\n            {\n              e.preventDefault();\n              setIsCellEntered(true);\n              break;\n            }\n\n          case keyCodes.ESCAPE:\n            {\n              e.preventDefault(); // move focus to cell\n\n              setIsCellEntered(false);\n              headerRef.current.focus();\n              break;\n            }\n\n          case keyCodes.F2:\n            {\n              e.preventDefault();\n\n              if (document.activeElement === headerRef.current) {\n                // move focus into cell's interactives\n                setIsCellEntered(true);\n              } else {\n                // move focus to cell\n                setIsCellEntered(false);\n                headerRef.current.focus();\n              }\n\n              break;\n            }\n        }\n      };\n\n      if (isFocused) {\n        var interactives = headerRef.current.querySelectorAll('[data-euigrid-tab-managed]');\n\n        if (interactives.length === 1) {\n          setIsCellEntered(true);\n        } else {\n          headerRef.current.focus();\n        }\n      } else {\n        setIsCellEntered(false);\n      }\n\n      var headerNode = headerRef.current; // @ts-ignore-next line TS doesn't have focusin\n\n      headerNode.addEventListener('focusin', onFocusIn);\n      headerNode.addEventListener('focusout', onFocusOut);\n      headerNode.addEventListener('keyup', onKeyUp);\n      return function () {\n        // @ts-ignore-next line TS doesn't have focusin\n        headerNode.removeEventListener('focusin', onFocusIn);\n        headerNode.removeEventListener('focusout', onFocusOut);\n        headerNode.removeEventListener('keyup', onKeyUp);\n      };\n    }\n  }, [enableInteractives, headerIsInteractive, isFocused, setIsCellEntered, focusedCell, setFocusedCell, index]);\n  return React.createElement(\"div\", _extends({\n    role: \"columnheader\"\n  }, ariaProps, {\n    ref: headerRef,\n    tabIndex: isFocused && !isCellEntered ? 0 : -1,\n    className: classes,\n    \"data-test-subj\": \"dataGridHeaderCell-\".concat(id),\n    style: width != null ? {\n      width: \"\".concat(width, \"px\")\n    } : {}\n  }), column.isResizable !== false && width != null ? React.createElement(EuiDataGridColumnResizer, {\n    columnId: id,\n    columnWidth: width,\n    setColumnWidth: setColumnWidth\n  }) : null, React.createElement(\"div\", {\n    className: \"euiDataGridHeaderCell__content\"\n  }, display || id), sorting && sorting.columns.length >= 2 && React.createElement(EuiScreenReaderOnly, null, React.createElement(\"div\", {\n    id: screenReaderId\n  }, sortString)));\n};\nEuiDataGridHeaderCell.propTypes = {\n  column: PropTypes.shape({\n    /**\n       * The unique identifier for this column\n       */\n    id: PropTypes.string.isRequired,\n\n    /**\n       * A `ReactNode` used when rendering the column header. When providing complicated content, please make sure to utilize CSS to respect truncation as space allows. Check the docs example.\n       */\n    display: PropTypes.node,\n\n    /**\n       * A Schema to use for the column. Built-in values are ['boolean', 'currency', 'datetime', 'numeric', 'json'] but can be expanded by defining your own #EuiDataGrid `schemaDetectors` (for in-memory detection). In general, it is advised to pass in a value here when you are sure of the schema ahead of time, so that you don't need to rely on the automatic detection.\n       */\n    schema: PropTypes.string,\n\n    /**\n       * Defauls to true. Defines shether or not the column's cells can be expanded with a popup onClick / keydown.\n       */\n    isExpandable: PropTypes.bool,\n\n    /**\n       * Whether this column's width can be changed by the user, defaults to true\n       */\n    isResizable: PropTypes.bool,\n\n    /**\n       * Initial width (in pixels) of the column\n       */\n    initialWidth: PropTypes.number,\n\n    /**\n       * Whether this column is sortable\n       */\n    isSortable: PropTypes.bool,\n\n    /**\n       * Default sort direction of the column\n       */\n    defaultSortDirection: PropTypes.oneOf([\"asc\", \"desc\"])\n  }).isRequired,\n  index: PropTypes.number.isRequired,\n  className: PropTypes.string\n};\nEuiDataGridHeaderCell.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"EuiDataGridHeaderCell\",\n  \"props\": {\n    \"column\": {\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"id\": {\n            \"name\": \"string\",\n            \"description\": \"The unique identifier for this column\",\n            \"required\": true\n          },\n          \"display\": {\n            \"name\": \"node\",\n            \"description\": \"A `ReactNode` used when rendering the column header. When providing complicated content, please make sure to utilize CSS to respect truncation as space allows. Check the docs example.\",\n            \"required\": false\n          },\n          \"schema\": {\n            \"name\": \"string\",\n            \"description\": \"A Schema to use for the column. Built-in values are ['boolean', 'currency', 'datetime', 'numeric', 'json'] but can be expanded by defining your own #EuiDataGrid `schemaDetectors` (for in-memory detection). In general, it is advised to pass in a value here when you are sure of the schema ahead of time, so that you don't need to rely on the automatic detection.\",\n            \"required\": false\n          },\n          \"isExpandable\": {\n            \"name\": \"bool\",\n            \"description\": \"Defauls to true. Defines shether or not the column's cells can be expanded with a popup onClick / keydown.\",\n            \"required\": false\n          },\n          \"isResizable\": {\n            \"name\": \"bool\",\n            \"description\": \"Whether this column's width can be changed by the user, defaults to true\",\n            \"required\": false\n          },\n          \"initialWidth\": {\n            \"name\": \"number\",\n            \"description\": \"Initial width (in pixels) of the column\",\n            \"required\": false\n          },\n          \"isSortable\": {\n            \"name\": \"bool\",\n            \"description\": \"Whether this column is sortable\",\n            \"required\": false\n          },\n          \"defaultSortDirection\": {\n            \"name\": \"enum\",\n            \"value\": [{\n              \"value\": \"\\\"asc\\\"\",\n              \"computed\": false\n            }, {\n              \"value\": \"\\\"desc\\\"\",\n              \"computed\": false\n            }],\n            \"description\": \"Default sort direction of the column\",\n            \"required\": false\n          }\n        }\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"index\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"className\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};"]},"metadata":{},"sourceType":"module"}