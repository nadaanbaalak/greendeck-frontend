{"ast":null,"code":"/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport numeral from 'numeral';\nimport { isNil, isString } from '../predicate';\nvar numberFormatAliases = {\n  decimal1: '0,0.0',\n  decimal2: '0,0.00',\n  decimal3: '0,0.000',\n  ordinal: '0o',\n  integer: '0,0'\n};\nexport var formatNumber = function formatNumber(value) {\n  var numberFormatOrConfig = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var format;\n  var nil = '';\n  var round;\n\n  if (isString(numberFormatOrConfig)) {\n    format = numberFormatOrConfig;\n  } else {\n    format = numberFormatOrConfig.format;\n    nil = numberFormatOrConfig.nil || '';\n    round = numberFormatOrConfig.round;\n  }\n\n  if (!format) {\n    return isNil(value) ? nil : value.toString();\n  }\n\n  var roundingFunc = round ? Math.round : Math.floor;\n  var numberFormat = numberFormatAliases[format] || format;\n  return isNil(value) ? nil : numeral(value).format(numberFormat, roundingFunc);\n};","map":{"version":3,"sources":["/home/nadaanbaalak/greendeck/client/node_modules/@elastic/eui/es/services/format/format_number.js"],"names":["numeral","isNil","isString","numberFormatAliases","decimal1","decimal2","decimal3","ordinal","integer","formatNumber","value","numberFormatOrConfig","arguments","length","undefined","format","nil","round","toString","roundingFunc","Math","floor","numberFormat"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,OAAP,MAAoB,SAApB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,cAAhC;AACA,IAAIC,mBAAmB,GAAG;AACxBC,EAAAA,QAAQ,EAAE,OADc;AAExBC,EAAAA,QAAQ,EAAE,QAFc;AAGxBC,EAAAA,QAAQ,EAAE,SAHc;AAIxBC,EAAAA,OAAO,EAAE,IAJe;AAKxBC,EAAAA,OAAO,EAAE;AALe,CAA1B;AAOA,OAAO,IAAIC,YAAY,GAAG,SAASA,YAAT,CAAsBC,KAAtB,EAA6B;AACrD,MAAIC,oBAAoB,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAA/F;AACA,MAAIG,MAAJ;AACA,MAAIC,GAAG,GAAG,EAAV;AACA,MAAIC,KAAJ;;AAEA,MAAIf,QAAQ,CAACS,oBAAD,CAAZ,EAAoC;AAClCI,IAAAA,MAAM,GAAGJ,oBAAT;AACD,GAFD,MAEO;AACLI,IAAAA,MAAM,GAAGJ,oBAAoB,CAACI,MAA9B;AACAC,IAAAA,GAAG,GAAGL,oBAAoB,CAACK,GAArB,IAA4B,EAAlC;AACAC,IAAAA,KAAK,GAAGN,oBAAoB,CAACM,KAA7B;AACD;;AAED,MAAI,CAACF,MAAL,EAAa;AACX,WAAOd,KAAK,CAACS,KAAD,CAAL,GAAeM,GAAf,GAAqBN,KAAK,CAACQ,QAAN,EAA5B;AACD;;AAED,MAAIC,YAAY,GAAGF,KAAK,GAAGG,IAAI,CAACH,KAAR,GAAgBG,IAAI,CAACC,KAA7C;AACA,MAAIC,YAAY,GAAGnB,mBAAmB,CAACY,MAAD,CAAnB,IAA+BA,MAAlD;AACA,SAAOd,KAAK,CAACS,KAAD,CAAL,GAAeM,GAAf,GAAqBhB,OAAO,CAACU,KAAD,CAAP,CAAeK,MAAf,CAAsBO,YAAtB,EAAoCH,YAApC,CAA5B;AACD,CArBM","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport numeral from 'numeral';\nimport { isNil, isString } from '../predicate';\nvar numberFormatAliases = {\n  decimal1: '0,0.0',\n  decimal2: '0,0.00',\n  decimal3: '0,0.000',\n  ordinal: '0o',\n  integer: '0,0'\n};\nexport var formatNumber = function formatNumber(value) {\n  var numberFormatOrConfig = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var format;\n  var nil = '';\n  var round;\n\n  if (isString(numberFormatOrConfig)) {\n    format = numberFormatOrConfig;\n  } else {\n    format = numberFormatOrConfig.format;\n    nil = numberFormatOrConfig.nil || '';\n    round = numberFormatOrConfig.round;\n  }\n\n  if (!format) {\n    return isNil(value) ? nil : value.toString();\n  }\n\n  var roundingFunc = round ? Math.round : Math.floor;\n  var numberFormat = numberFormatAliases[format] || format;\n  return isNil(value) ? nil : numeral(value).format(numberFormat, roundingFunc);\n};"]},"metadata":{},"sourceType":"module"}