{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\nimport React, { useMemo } from 'react';\nimport { EuiI18n } from '../i18n';\nvar numericChars = new Set(['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', '-']);\nexport var schemaDetectors = [{\n  type: 'boolean',\n  detector: function detector(value) {\n    return value.toLowerCase() === 'true' || value.toLowerCase() === 'false' ? 1 : 0;\n  },\n  comparator: function comparator(a, b, direction) {\n    var aValue = a.toLowerCase() === 'true';\n    var bValue = b.toLowerCase() === 'true';\n    if (aValue < bValue) return direction === 'asc' ? 1 : -1;\n    if (aValue > bValue) return direction === 'asc' ? -1 : 1;\n    return 0;\n  },\n  icon: 'tokenBoolean',\n  sortTextAsc: React.createElement(EuiI18n, {\n    token: \"euiDataGridSchema.booleanSortTextAsc\",\n    default: \"True-False\"\n  }),\n  sortTextDesc: React.createElement(EuiI18n, {\n    token: \"euiDataGridSchema.booleanSortTextDesc\",\n    default: \"False-True\"\n  })\n}, {\n  type: 'currency',\n  detector: function detector(value) {\n    var matchLength = (value.match( // currency prefers starting with 1-3 characters for the currency symbol\n    // then it matches against numerical data + $\n    /(^[^-(.]{1,3})?[$-(]*[\\d,]+(\\.\\d*)?[$)]*/) || [''])[0].length; // if there is no currency symbol then reduce the score\n\n    var hasCurrency = value.indexOf('$') !== -1;\n    var confidenceAdjustment = hasCurrency ? 1 : 0.95;\n    return matchLength / value.length * confidenceAdjustment || 0;\n  },\n  comparator: function comparator(a, b, direction) {\n    var aChars = a.split('').filter(function (char) {\n      return numericChars.has(char);\n    });\n    var aValue = parseFloat(aChars.join(''));\n    var bChars = b.split('').filter(function (char) {\n      return numericChars.has(char);\n    });\n    var bValue = parseFloat(bChars.join(''));\n    if (aValue < bValue) return direction === 'asc' ? -1 : 1;\n    if (aValue > bValue) return direction === 'asc' ? 1 : -1;\n    return 0;\n  },\n  icon: 'currency',\n  color: 'euiColorVis0',\n  sortTextAsc: React.createElement(EuiI18n, {\n    token: \"euiDataGridSchema.currencySortTextAsc\",\n    default: \"Low-High\"\n  }),\n  sortTextDesc: React.createElement(EuiI18n, {\n    token: \"euiDataGridSchema.currencySortTextDesc\",\n    default: \"High-Low\"\n  })\n}, {\n  type: 'datetime',\n  detector: function detector(value) {\n    // matches the most common forms of ISO-8601\n    var isoTimestampMatch = value.match( // 2019 - 09    - 17     T 12     : 18    : 32      .853     Z or -0600\n    /^\\d{2,4}-\\d{1,2}-\\d{1,2}(T?\\d{1,2}:\\d{1,2}:\\d{1,2}(\\.\\d{3})?(Z|[+-]\\d{4})?)?/); // matches 9 digits (seconds) or 13 digits (milliseconds) since unix epoch\n\n    var unixTimestampMatch = value.match(/^(\\d{9}|\\d{13})$/);\n    var isoMatchLength = isoTimestampMatch ? isoTimestampMatch[0].length : 0; // reduce the confidence of a unix timestamp match to 75%\n    // (a column of all unix timestamps should be numeric instead)\n\n    var unixMatchLength = unixTimestampMatch ? unixTimestampMatch[0].length * 0.75 : 0;\n    return Math.max(isoMatchLength, unixMatchLength) / value.length || 0;\n  },\n  icon: 'tokenDate',\n  sortTextAsc: React.createElement(EuiI18n, {\n    token: \"euiDataGridSchema.dateSortTextAsc\",\n    default: \"New-Old\"\n  }),\n  sortTextDesc: React.createElement(EuiI18n, {\n    token: \"euiDataGridSchema.dateSortTextDesc\",\n    default: \"Old-New\"\n  })\n}, {\n  type: 'numeric',\n  detector: function detector(value) {\n    var matchLength = (value.match(/[%-(]*[\\d,]+(\\.\\d*)?[%)]*/) || [''])[0].length;\n    return matchLength / value.length || 0;\n  },\n  comparator: function comparator(a, b, direction) {\n    // sort on all digits groups\n    var aGroups = a.split(/\\D+/);\n    var bGroups = b.split(/\\D+/);\n    var maxGroups = Math.max(aGroups.length, bGroups.length);\n\n    for (var i = 0; i < maxGroups; i++) {\n      // if A and B's group counts differ and they match until that difference, prefer whichever is shorter\n      if (i >= aGroups.length) return direction === 'asc' ? -1 : 1;\n      if (i >= bGroups.length) return direction === 'asc' ? 1 : -1;\n      var aChars = aGroups[i];\n      var bChars = bGroups[i];\n      var aValue = parseInt(aChars, 10);\n      var bValue = parseInt(bChars, 10);\n      if (aValue < bValue) return direction === 'asc' ? -1 : 1;\n      if (aValue > bValue) return direction === 'asc' ? 1 : -1;\n    }\n\n    return 0;\n  },\n  icon: 'tokenNumber',\n  sortTextAsc: React.createElement(EuiI18n, {\n    token: \"euiDataGridSchema.numberSortTextAsc\",\n    default: \"Low-High\"\n  }),\n  sortTextDesc: React.createElement(EuiI18n, {\n    token: \"euiDataGridSchema.numberSortTextDesc\",\n    default: \"High-Low\"\n  })\n}, {\n  type: 'json',\n  detector: function detector(value) {\n    // does this look like it might be a JSON object?\n    var maybeArray = value[0] === '[' && value[value.length - 1] === ']';\n    var maybeObject = value[0] === '{' && value[value.length - 1] === '}';\n    if (!maybeArray && !maybeObject) return 0;\n\n    try {\n      JSON.parse(value);\n      return 1;\n    } catch (e) {\n      return 0;\n    }\n  },\n  comparator: function comparator(a, b, direction) {\n    if (a.length > b.length) return direction === 'asc' ? 1 : -1;\n    if (a.length < b.length) return direction === 'asc' ? 1 : -1;\n    return 0;\n  },\n  icon: 'tokenObject',\n  sortTextAsc: React.createElement(EuiI18n, {\n    token: \"euiDataGridSchema.jsonSortTextAsc\",\n    default: \"Small-Large\"\n  }),\n  sortTextDesc: React.createElement(EuiI18n, {\n    token: \"euiDataGridSchema.jsonSortTextDesc\",\n    default: \"Large-Small\"\n  })\n}];\n\nfunction scoreValueBySchemaType(value) {\n  var schemaDetectors = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var scores = [];\n\n  for (var i = 0; i < schemaDetectors.length; i++) {\n    var _schemaDetectors$i = schemaDetectors[i],\n        _type = _schemaDetectors$i.type,\n        detector = _schemaDetectors$i.detector;\n    var score = detector(value);\n    scores.push({\n      type: _type,\n      score: score\n    });\n  }\n\n  return scores;\n} // completely arbitrary minimum match I came up with\n// represents lowest score a type detector can have to be considered valid\n\n\nvar MINIMUM_SCORE_MATCH = 0.5;\nexport function useDetectSchema(inMemory, inMemoryValues, schemaDetectors, definedColumnSchemas, autoDetectSchema) {\n  var schema = useMemo(function () {\n    var schema = {};\n\n    if (autoDetectSchema === false) {\n      return schema;\n    }\n\n    var columnSchemas = {}; // for each row, score each value by each detector and put the results on `columnSchemas`\n\n    var rowIndices = Object.keys(inMemoryValues);\n    var columnIdsWithDefinedSchemas = new Set([].concat(_toConsumableArray(inMemory && inMemory.skipColumns || []), _toConsumableArray(Object.keys(definedColumnSchemas))));\n\n    for (var i = 0; i < rowIndices.length; i++) {\n      var rowIndex = rowIndices[i];\n      var rowData = inMemoryValues[rowIndex];\n      var columnIds = Object.keys(rowData);\n\n      for (var j = 0; j < columnIds.length; j++) {\n        var _columnId = columnIds[j];\n        if (columnIdsWithDefinedSchemas.has(_columnId)) continue;\n        var schemaColumn = columnSchemas[_columnId] = columnSchemas[_columnId] || {};\n\n        var columnValue = rowData[_columnId].trim();\n\n        var valueScores = scoreValueBySchemaType(columnValue, schemaDetectors);\n\n        for (var k = 0; k < valueScores.length; k++) {\n          var valueScore = valueScores[k];\n\n          if (schemaColumn.hasOwnProperty(valueScore.type)) {\n            var existingScore = schemaColumn[valueScore.type];\n            existingScore.push(valueScore.score);\n          } else {\n            // first entry for this column\n            schemaColumn[valueScore.type] = [valueScore.score];\n          }\n        }\n      }\n    } // for each column, reduce each detector type's score to a single value and find the best fit\n\n\n    return Object.keys(columnSchemas).reduce(function (schema, columnId) {\n      var columnScores = columnSchemas[columnId];\n      var typeIds = Object.keys(columnScores);\n      var typeSummaries = {};\n      var bestType = null;\n      var bestScore = 0;\n\n      for (var _i = 0; _i < typeIds.length; _i++) {\n        var typeId = typeIds[_i];\n        var typeScores = columnScores[typeId]; // find the mean\n\n        var totalScore = 0;\n\n        for (var _j = 0; _j < typeScores.length; _j++) {\n          var _score = typeScores[_j];\n          totalScore += _score;\n        }\n\n        var mean = totalScore / typeScores.length; // compute standard deviation\n\n        var sdSum = 0;\n\n        for (var _j2 = 0; _j2 < typeScores.length; _j2++) {\n          var _score2 = typeScores[_j2];\n          sdSum += (_score2 - mean) * (_score2 - mean);\n        }\n\n        var sd = Math.sqrt(sdSum / typeScores.length);\n        var summary = {\n          mean: mean,\n          sd: sd\n        }; // the mean-standard_deviation calculation is fairly arbitrary but fits the patterns I've thrown at it\n        // it is meant to represent the scores' average and distribution\n\n        var score = summary.mean - summary.sd;\n\n        if (score > MINIMUM_SCORE_MATCH) {\n          if (bestType == null || score > bestScore) {\n            bestType = typeId;\n            bestScore = score;\n          }\n        }\n\n        typeSummaries[typeId] = summary;\n      }\n\n      schema[columnId] = {\n        columnType: bestType\n      };\n      return schema;\n    }, {});\n  }, [autoDetectSchema, definedColumnSchemas, inMemory, inMemoryValues, schemaDetectors]);\n  return schema;\n}\nexport function useMergedSchema(detectedSchema, columns) {\n  return useMemo(function () {\n    var mergedSchema = _objectSpread({}, detectedSchema);\n\n    for (var i = 0; i < columns.length; i++) {\n      var _columns$i = columns[i],\n          id = _columns$i.id,\n          schema = _columns$i.schema;\n\n      if (schema != null) {\n        if (detectedSchema.hasOwnProperty(id)) {\n          mergedSchema[id] = _objectSpread({}, detectedSchema[id], {\n            columnType: schema\n          });\n        } else {\n          mergedSchema[id] = {\n            columnType: schema\n          };\n        }\n      }\n    }\n\n    return mergedSchema;\n  }, [detectedSchema, columns]);\n} // Given a provided schema, return the details for the schema\n// Useful for grabbing the color or icon\n\nexport function getDetailsForSchema(detectors, providedSchema) {\n  var results = detectors.filter(function (matches) {\n    return matches.type === providedSchema;\n  });\n  return results[0];\n}","map":{"version":3,"sources":["/home/nadaanbaalak/greendeck/client/node_modules/@elastic/eui/es/components/datagrid/data_grid_schema.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","TypeError","iter","Symbol","iterator","prototype","toString","call","Array","from","isArray","arr2","React","useMemo","EuiI18n","numericChars","Set","schemaDetectors","type","detector","toLowerCase","comparator","a","b","direction","aValue","bValue","icon","sortTextAsc","createElement","token","default","sortTextDesc","matchLength","match","hasCurrency","indexOf","confidenceAdjustment","aChars","split","char","has","parseFloat","join","bChars","color","isoTimestampMatch","unixTimestampMatch","isoMatchLength","unixMatchLength","Math","max","aGroups","bGroups","maxGroups","parseInt","maybeArray","maybeObject","JSON","parse","e","scoreValueBySchemaType","undefined","scores","_schemaDetectors$i","_type","score","MINIMUM_SCORE_MATCH","useDetectSchema","inMemory","inMemoryValues","definedColumnSchemas","autoDetectSchema","schema","columnSchemas","rowIndices","columnIdsWithDefinedSchemas","concat","skipColumns","rowIndex","rowData","columnIds","j","_columnId","schemaColumn","columnValue","trim","valueScores","k","valueScore","hasOwnProperty","existingScore","reduce","columnId","columnScores","typeIds","typeSummaries","bestType","bestScore","_i","typeId","typeScores","totalScore","_j","_score","mean","sdSum","_j2","_score2","sd","sqrt","summary","columnType","useMergedSchema","detectedSchema","columns","mergedSchema","_columns$i","id","getDetailsForSchema","detectors","providedSchema","results","matches"],"mappings":"AAAA,SAASA,OAAT,CAAiBC,MAAjB,EAAyBC,cAAzB,EAAyC;AAAE,MAAIC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYF,MAAZ,CAAX;;AAAgC,MAAIG,MAAM,CAACC,qBAAX,EAAkC;AAAE,QAAIC,OAAO,GAAGF,MAAM,CAACC,qBAAP,CAA6BJ,MAA7B,CAAd;AAAoD,QAAIC,cAAJ,EAAoBI,OAAO,GAAGA,OAAO,CAACC,MAAR,CAAe,UAAUC,GAAV,EAAe;AAAE,aAAOJ,MAAM,CAACK,wBAAP,CAAgCR,MAAhC,EAAwCO,GAAxC,EAA6CE,UAApD;AAAiE,KAAjG,CAAV;AAA8GP,IAAAA,IAAI,CAACQ,IAAL,CAAUC,KAAV,CAAgBT,IAAhB,EAAsBG,OAAtB;AAAiC;;AAAC,SAAOH,IAAP;AAAc;;AAErV,SAASU,aAAT,CAAuBC,MAAvB,EAA+B;AAAE,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,QAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAT,IAAgB,IAAhB,GAAuBC,SAAS,CAACD,CAAD,CAAhC,GAAsC,EAAnD;;AAAuD,QAAIA,CAAC,GAAG,CAAR,EAAW;AAAEf,MAAAA,OAAO,CAACI,MAAM,CAACc,MAAD,CAAP,EAAiB,IAAjB,CAAP,CAA8BC,OAA9B,CAAsC,UAAUC,GAAV,EAAe;AAAEC,QAAAA,eAAe,CAACP,MAAD,EAASM,GAAT,EAAcF,MAAM,CAACE,GAAD,CAApB,CAAf;AAA4C,OAAnG;AAAuG,KAApH,MAA0H,IAAIhB,MAAM,CAACkB,yBAAX,EAAsC;AAAElB,MAAAA,MAAM,CAACmB,gBAAP,CAAwBT,MAAxB,EAAgCV,MAAM,CAACkB,yBAAP,CAAiCJ,MAAjC,CAAhC;AAA4E,KAApH,MAA0H;AAAElB,MAAAA,OAAO,CAACI,MAAM,CAACc,MAAD,CAAP,CAAP,CAAwBC,OAAxB,CAAgC,UAAUC,GAAV,EAAe;AAAEhB,QAAAA,MAAM,CAACoB,cAAP,CAAsBV,MAAtB,EAA8BM,GAA9B,EAAmChB,MAAM,CAACK,wBAAP,CAAgCS,MAAhC,EAAwCE,GAAxC,CAAnC;AAAmF,OAApI;AAAwI;AAAE;;AAAC,SAAON,MAAP;AAAgB;;AAEthB,SAASO,eAAT,CAAyBI,GAAzB,EAA8BL,GAA9B,EAAmCM,KAAnC,EAA0C;AAAE,MAAIN,GAAG,IAAIK,GAAX,EAAgB;AAAErB,IAAAA,MAAM,CAACoB,cAAP,CAAsBC,GAAtB,EAA2BL,GAA3B,EAAgC;AAAEM,MAAAA,KAAK,EAAEA,KAAT;AAAgBhB,MAAAA,UAAU,EAAE,IAA5B;AAAkCiB,MAAAA,YAAY,EAAE,IAAhD;AAAsDC,MAAAA,QAAQ,EAAE;AAAhE,KAAhC;AAA0G,GAA5H,MAAkI;AAAEH,IAAAA,GAAG,CAACL,GAAD,CAAH,GAAWM,KAAX;AAAmB;;AAAC,SAAOD,GAAP;AAAa;;AAEjN,SAASI,kBAAT,CAA4BC,GAA5B,EAAiC;AAAE,SAAOC,kBAAkB,CAACD,GAAD,CAAlB,IAA2BE,gBAAgB,CAACF,GAAD,CAA3C,IAAoDG,kBAAkB,EAA7E;AAAkF;;AAErH,SAASA,kBAAT,GAA8B;AAAE,QAAM,IAAIC,SAAJ,CAAc,iDAAd,CAAN;AAAyE;;AAEzG,SAASF,gBAAT,CAA0BG,IAA1B,EAAgC;AAAE,MAAIC,MAAM,CAACC,QAAP,IAAmBjC,MAAM,CAAC+B,IAAD,CAAzB,IAAmC/B,MAAM,CAACkC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BL,IAA/B,MAAyC,oBAAhF,EAAsG,OAAOM,KAAK,CAACC,IAAN,CAAWP,IAAX,CAAP;AAA0B;;AAElK,SAASJ,kBAAT,CAA4BD,GAA5B,EAAiC;AAAE,MAAIW,KAAK,CAACE,OAAN,CAAcb,GAAd,CAAJ,EAAwB;AAAE,SAAK,IAAIf,CAAC,GAAG,CAAR,EAAW6B,IAAI,GAAG,IAAIH,KAAJ,CAAUX,GAAG,CAACb,MAAd,CAAvB,EAA8CF,CAAC,GAAGe,GAAG,CAACb,MAAtD,EAA8DF,CAAC,EAA/D,EAAmE;AAAE6B,MAAAA,IAAI,CAAC7B,CAAD,CAAJ,GAAUe,GAAG,CAACf,CAAD,CAAb;AAAmB;;AAAC,WAAO6B,IAAP;AAAc;AAAE;AAEtK;;;;;;;;;;;;;;;;;;;;AAkBA,OAAOC,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,SAASC,OAAT,QAAwB,SAAxB;AACA,IAAIC,YAAY,GAAG,IAAIC,GAAJ,CAAQ,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,GAA9C,EAAmD,GAAnD,EAAwD,GAAxD,CAAR,CAAnB;AACA,OAAO,IAAIC,eAAe,GAAG,CAAC;AAC5BC,EAAAA,IAAI,EAAE,SADsB;AAE5BC,EAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkB1B,KAAlB,EAAyB;AACjC,WAAOA,KAAK,CAAC2B,WAAN,OAAwB,MAAxB,IAAkC3B,KAAK,CAAC2B,WAAN,OAAwB,OAA1D,GAAoE,CAApE,GAAwE,CAA/E;AACD,GAJ2B;AAK5BC,EAAAA,UAAU,EAAE,SAASA,UAAT,CAAoBC,CAApB,EAAuBC,CAAvB,EAA0BC,SAA1B,EAAqC;AAC/C,QAAIC,MAAM,GAAGH,CAAC,CAACF,WAAF,OAAoB,MAAjC;AACA,QAAIM,MAAM,GAAGH,CAAC,CAACH,WAAF,OAAoB,MAAjC;AACA,QAAIK,MAAM,GAAGC,MAAb,EAAqB,OAAOF,SAAS,KAAK,KAAd,GAAsB,CAAtB,GAA0B,CAAC,CAAlC;AACrB,QAAIC,MAAM,GAAGC,MAAb,EAAqB,OAAOF,SAAS,KAAK,KAAd,GAAsB,CAAC,CAAvB,GAA2B,CAAlC;AACrB,WAAO,CAAP;AACD,GAX2B;AAY5BG,EAAAA,IAAI,EAAE,cAZsB;AAa5BC,EAAAA,WAAW,EAAEhB,KAAK,CAACiB,aAAN,CAAoBf,OAApB,EAA6B;AACxCgB,IAAAA,KAAK,EAAE,sCADiC;AAExCC,IAAAA,OAAO,EAAE;AAF+B,GAA7B,CAbe;AAiB5BC,EAAAA,YAAY,EAAEpB,KAAK,CAACiB,aAAN,CAAoBf,OAApB,EAA6B;AACzCgB,IAAAA,KAAK,EAAE,uCADkC;AAEzCC,IAAAA,OAAO,EAAE;AAFgC,GAA7B;AAjBc,CAAD,EAqB1B;AACDb,EAAAA,IAAI,EAAE,UADL;AAEDC,EAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkB1B,KAAlB,EAAyB;AACjC,QAAIwC,WAAW,GAAG,CAACxC,KAAK,CAACyC,KAAN,EAAa;AAChC;AACA,8CAFmB,KAE4B,CAAC,EAAD,CAF7B,EAEmC,CAFnC,EAEsClD,MAFxD,CADiC,CAG+B;;AAEhE,QAAImD,WAAW,GAAG1C,KAAK,CAAC2C,OAAN,CAAc,GAAd,MAAuB,CAAC,CAA1C;AACA,QAAIC,oBAAoB,GAAGF,WAAW,GAAG,CAAH,GAAO,IAA7C;AACA,WAAOF,WAAW,GAAGxC,KAAK,CAACT,MAApB,GAA6BqD,oBAA7B,IAAqD,CAA5D;AACD,GAVA;AAWDhB,EAAAA,UAAU,EAAE,SAASA,UAAT,CAAoBC,CAApB,EAAuBC,CAAvB,EAA0BC,SAA1B,EAAqC;AAC/C,QAAIc,MAAM,GAAGhB,CAAC,CAACiB,KAAF,CAAQ,EAAR,EAAYjE,MAAZ,CAAmB,UAAUkE,IAAV,EAAgB;AAC9C,aAAOzB,YAAY,CAAC0B,GAAb,CAAiBD,IAAjB,CAAP;AACD,KAFY,CAAb;AAGA,QAAIf,MAAM,GAAGiB,UAAU,CAACJ,MAAM,CAACK,IAAP,CAAY,EAAZ,CAAD,CAAvB;AACA,QAAIC,MAAM,GAAGrB,CAAC,CAACgB,KAAF,CAAQ,EAAR,EAAYjE,MAAZ,CAAmB,UAAUkE,IAAV,EAAgB;AAC9C,aAAOzB,YAAY,CAAC0B,GAAb,CAAiBD,IAAjB,CAAP;AACD,KAFY,CAAb;AAGA,QAAId,MAAM,GAAGgB,UAAU,CAACE,MAAM,CAACD,IAAP,CAAY,EAAZ,CAAD,CAAvB;AACA,QAAIlB,MAAM,GAAGC,MAAb,EAAqB,OAAOF,SAAS,KAAK,KAAd,GAAsB,CAAC,CAAvB,GAA2B,CAAlC;AACrB,QAAIC,MAAM,GAAGC,MAAb,EAAqB,OAAOF,SAAS,KAAK,KAAd,GAAsB,CAAtB,GAA0B,CAAC,CAAlC;AACrB,WAAO,CAAP;AACD,GAvBA;AAwBDG,EAAAA,IAAI,EAAE,UAxBL;AAyBDkB,EAAAA,KAAK,EAAE,cAzBN;AA0BDjB,EAAAA,WAAW,EAAEhB,KAAK,CAACiB,aAAN,CAAoBf,OAApB,EAA6B;AACxCgB,IAAAA,KAAK,EAAE,uCADiC;AAExCC,IAAAA,OAAO,EAAE;AAF+B,GAA7B,CA1BZ;AA8BDC,EAAAA,YAAY,EAAEpB,KAAK,CAACiB,aAAN,CAAoBf,OAApB,EAA6B;AACzCgB,IAAAA,KAAK,EAAE,wCADkC;AAEzCC,IAAAA,OAAO,EAAE;AAFgC,GAA7B;AA9Bb,CArB0B,EAuD1B;AACDb,EAAAA,IAAI,EAAE,UADL;AAEDC,EAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkB1B,KAAlB,EAAyB;AACjC;AACA,QAAIqD,iBAAiB,GAAGrD,KAAK,CAACyC,KAAN,EAAa;AACrC,kFADwB,CAAxB,CAFiC,CAGgD;;AAEjF,QAAIa,kBAAkB,GAAGtD,KAAK,CAACyC,KAAN,CAAY,kBAAZ,CAAzB;AACA,QAAIc,cAAc,GAAGF,iBAAiB,GAAGA,iBAAiB,CAAC,CAAD,CAAjB,CAAqB9D,MAAxB,GAAiC,CAAvE,CANiC,CAMyC;AAC1E;;AAEA,QAAIiE,eAAe,GAAGF,kBAAkB,GAAGA,kBAAkB,CAAC,CAAD,CAAlB,CAAsB/D,MAAtB,GAA+B,IAAlC,GAAyC,CAAjF;AACA,WAAOkE,IAAI,CAACC,GAAL,CAASH,cAAT,EAAyBC,eAAzB,IAA4CxD,KAAK,CAACT,MAAlD,IAA4D,CAAnE;AACD,GAbA;AAcD2C,EAAAA,IAAI,EAAE,WAdL;AAeDC,EAAAA,WAAW,EAAEhB,KAAK,CAACiB,aAAN,CAAoBf,OAApB,EAA6B;AACxCgB,IAAAA,KAAK,EAAE,mCADiC;AAExCC,IAAAA,OAAO,EAAE;AAF+B,GAA7B,CAfZ;AAmBDC,EAAAA,YAAY,EAAEpB,KAAK,CAACiB,aAAN,CAAoBf,OAApB,EAA6B;AACzCgB,IAAAA,KAAK,EAAE,oCADkC;AAEzCC,IAAAA,OAAO,EAAE;AAFgC,GAA7B;AAnBb,CAvD0B,EA8E1B;AACDb,EAAAA,IAAI,EAAE,SADL;AAEDC,EAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkB1B,KAAlB,EAAyB;AACjC,QAAIwC,WAAW,GAAG,CAACxC,KAAK,CAACyC,KAAN,CAAY,2BAAZ,KAA4C,CAAC,EAAD,CAA7C,EAAmD,CAAnD,EAAsDlD,MAAxE;AACA,WAAOiD,WAAW,GAAGxC,KAAK,CAACT,MAApB,IAA8B,CAArC;AACD,GALA;AAMDqC,EAAAA,UAAU,EAAE,SAASA,UAAT,CAAoBC,CAApB,EAAuBC,CAAvB,EAA0BC,SAA1B,EAAqC;AAC/C;AACA,QAAI4B,OAAO,GAAG9B,CAAC,CAACiB,KAAF,CAAQ,KAAR,CAAd;AACA,QAAIc,OAAO,GAAG9B,CAAC,CAACgB,KAAF,CAAQ,KAAR,CAAd;AACA,QAAIe,SAAS,GAAGJ,IAAI,CAACC,GAAL,CAASC,OAAO,CAACpE,MAAjB,EAAyBqE,OAAO,CAACrE,MAAjC,CAAhB;;AAEA,SAAK,IAAIF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGwE,SAApB,EAA+BxE,CAAC,EAAhC,EAAoC;AAClC;AACA,UAAIA,CAAC,IAAIsE,OAAO,CAACpE,MAAjB,EAAyB,OAAOwC,SAAS,KAAK,KAAd,GAAsB,CAAC,CAAvB,GAA2B,CAAlC;AACzB,UAAI1C,CAAC,IAAIuE,OAAO,CAACrE,MAAjB,EAAyB,OAAOwC,SAAS,KAAK,KAAd,GAAsB,CAAtB,GAA0B,CAAC,CAAlC;AACzB,UAAIc,MAAM,GAAGc,OAAO,CAACtE,CAAD,CAApB;AACA,UAAI8D,MAAM,GAAGS,OAAO,CAACvE,CAAD,CAApB;AACA,UAAI2C,MAAM,GAAG8B,QAAQ,CAACjB,MAAD,EAAS,EAAT,CAArB;AACA,UAAIZ,MAAM,GAAG6B,QAAQ,CAACX,MAAD,EAAS,EAAT,CAArB;AACA,UAAInB,MAAM,GAAGC,MAAb,EAAqB,OAAOF,SAAS,KAAK,KAAd,GAAsB,CAAC,CAAvB,GAA2B,CAAlC;AACrB,UAAIC,MAAM,GAAGC,MAAb,EAAqB,OAAOF,SAAS,KAAK,KAAd,GAAsB,CAAtB,GAA0B,CAAC,CAAlC;AACtB;;AAED,WAAO,CAAP;AACD,GAzBA;AA0BDG,EAAAA,IAAI,EAAE,aA1BL;AA2BDC,EAAAA,WAAW,EAAEhB,KAAK,CAACiB,aAAN,CAAoBf,OAApB,EAA6B;AACxCgB,IAAAA,KAAK,EAAE,qCADiC;AAExCC,IAAAA,OAAO,EAAE;AAF+B,GAA7B,CA3BZ;AA+BDC,EAAAA,YAAY,EAAEpB,KAAK,CAACiB,aAAN,CAAoBf,OAApB,EAA6B;AACzCgB,IAAAA,KAAK,EAAE,sCADkC;AAEzCC,IAAAA,OAAO,EAAE;AAFgC,GAA7B;AA/Bb,CA9E0B,EAiH1B;AACDb,EAAAA,IAAI,EAAE,MADL;AAEDC,EAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkB1B,KAAlB,EAAyB;AACjC;AACA,QAAI+D,UAAU,GAAG/D,KAAK,CAAC,CAAD,CAAL,KAAa,GAAb,IAAoBA,KAAK,CAACA,KAAK,CAACT,MAAN,GAAe,CAAhB,CAAL,KAA4B,GAAjE;AACA,QAAIyE,WAAW,GAAGhE,KAAK,CAAC,CAAD,CAAL,KAAa,GAAb,IAAoBA,KAAK,CAACA,KAAK,CAACT,MAAN,GAAe,CAAhB,CAAL,KAA4B,GAAlE;AACA,QAAI,CAACwE,UAAD,IAAe,CAACC,WAApB,EAAiC,OAAO,CAAP;;AAEjC,QAAI;AACFC,MAAAA,IAAI,CAACC,KAAL,CAAWlE,KAAX;AACA,aAAO,CAAP;AACD,KAHD,CAGE,OAAOmE,CAAP,EAAU;AACV,aAAO,CAAP;AACD;AACF,GAdA;AAeDvC,EAAAA,UAAU,EAAE,SAASA,UAAT,CAAoBC,CAApB,EAAuBC,CAAvB,EAA0BC,SAA1B,EAAqC;AAC/C,QAAIF,CAAC,CAACtC,MAAF,GAAWuC,CAAC,CAACvC,MAAjB,EAAyB,OAAOwC,SAAS,KAAK,KAAd,GAAsB,CAAtB,GAA0B,CAAC,CAAlC;AACzB,QAAIF,CAAC,CAACtC,MAAF,GAAWuC,CAAC,CAACvC,MAAjB,EAAyB,OAAOwC,SAAS,KAAK,KAAd,GAAsB,CAAtB,GAA0B,CAAC,CAAlC;AACzB,WAAO,CAAP;AACD,GAnBA;AAoBDG,EAAAA,IAAI,EAAE,aApBL;AAqBDC,EAAAA,WAAW,EAAEhB,KAAK,CAACiB,aAAN,CAAoBf,OAApB,EAA6B;AACxCgB,IAAAA,KAAK,EAAE,mCADiC;AAExCC,IAAAA,OAAO,EAAE;AAF+B,GAA7B,CArBZ;AAyBDC,EAAAA,YAAY,EAAEpB,KAAK,CAACiB,aAAN,CAAoBf,OAApB,EAA6B;AACzCgB,IAAAA,KAAK,EAAE,oCADkC;AAEzCC,IAAAA,OAAO,EAAE;AAFgC,GAA7B;AAzBb,CAjH0B,CAAtB;;AAgJP,SAAS8B,sBAAT,CAAgCpE,KAAhC,EAAuC;AACrC,MAAIwB,eAAe,GAAGlC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiB+E,SAAzC,GAAqD/E,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAA1F;AACA,MAAIgF,MAAM,GAAG,EAAb;;AAEA,OAAK,IAAIjF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGmC,eAAe,CAACjC,MAApC,EAA4CF,CAAC,EAA7C,EAAiD;AAC/C,QAAIkF,kBAAkB,GAAG/C,eAAe,CAACnC,CAAD,CAAxC;AAAA,QACImF,KAAK,GAAGD,kBAAkB,CAAC9C,IAD/B;AAAA,QAEIC,QAAQ,GAAG6C,kBAAkB,CAAC7C,QAFlC;AAGA,QAAI+C,KAAK,GAAG/C,QAAQ,CAAC1B,KAAD,CAApB;AACAsE,IAAAA,MAAM,CAACrF,IAAP,CAAY;AACVwC,MAAAA,IAAI,EAAE+C,KADI;AAEVC,MAAAA,KAAK,EAAEA;AAFG,KAAZ;AAID;;AAED,SAAOH,MAAP;AACD,C,CAAC;AACF;;;AAGA,IAAII,mBAAmB,GAAG,GAA1B;AACA,OAAO,SAASC,eAAT,CAAyBC,QAAzB,EAAmCC,cAAnC,EAAmDrD,eAAnD,EAAoEsD,oBAApE,EAA0FC,gBAA1F,EAA4G;AACjH,MAAIC,MAAM,GAAG5D,OAAO,CAAC,YAAY;AAC/B,QAAI4D,MAAM,GAAG,EAAb;;AAEA,QAAID,gBAAgB,KAAK,KAAzB,EAAgC;AAC9B,aAAOC,MAAP;AACD;;AAED,QAAIC,aAAa,GAAG,EAApB,CAP+B,CAOP;;AAExB,QAAIC,UAAU,GAAGxG,MAAM,CAACD,IAAP,CAAYoG,cAAZ,CAAjB;AACA,QAAIM,2BAA2B,GAAG,IAAI5D,GAAJ,CAAQ,GAAG6D,MAAH,CAAUjF,kBAAkB,CAACyE,QAAQ,IAAIA,QAAQ,CAACS,WAArB,IAAoC,EAArC,CAA5B,EAAsElF,kBAAkB,CAACzB,MAAM,CAACD,IAAP,CAAYqG,oBAAZ,CAAD,CAAxF,CAAR,CAAlC;;AAEA,SAAK,IAAIzF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG6F,UAAU,CAAC3F,MAA/B,EAAuCF,CAAC,EAAxC,EAA4C;AAC1C,UAAIiG,QAAQ,GAAGJ,UAAU,CAAC7F,CAAD,CAAzB;AACA,UAAIkG,OAAO,GAAGV,cAAc,CAACS,QAAD,CAA5B;AACA,UAAIE,SAAS,GAAG9G,MAAM,CAACD,IAAP,CAAY8G,OAAZ,CAAhB;;AAEA,WAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,SAAS,CAACjG,MAA9B,EAAsCkG,CAAC,EAAvC,EAA2C;AACzC,YAAIC,SAAS,GAAGF,SAAS,CAACC,CAAD,CAAzB;AACA,YAAIN,2BAA2B,CAACnC,GAA5B,CAAgC0C,SAAhC,CAAJ,EAAgD;AAChD,YAAIC,YAAY,GAAGV,aAAa,CAACS,SAAD,CAAb,GAA2BT,aAAa,CAACS,SAAD,CAAb,IAA4B,EAA1E;;AAEA,YAAIE,WAAW,GAAGL,OAAO,CAACG,SAAD,CAAP,CAAmBG,IAAnB,EAAlB;;AAEA,YAAIC,WAAW,GAAG1B,sBAAsB,CAACwB,WAAD,EAAcpE,eAAd,CAAxC;;AAEA,aAAK,IAAIuE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,WAAW,CAACvG,MAAhC,EAAwCwG,CAAC,EAAzC,EAA6C;AAC3C,cAAIC,UAAU,GAAGF,WAAW,CAACC,CAAD,CAA5B;;AAEA,cAAIJ,YAAY,CAACM,cAAb,CAA4BD,UAAU,CAACvE,IAAvC,CAAJ,EAAkD;AAChD,gBAAIyE,aAAa,GAAGP,YAAY,CAACK,UAAU,CAACvE,IAAZ,CAAhC;AACAyE,YAAAA,aAAa,CAACjH,IAAd,CAAmB+G,UAAU,CAACvB,KAA9B;AACD,WAHD,MAGO;AACL;AACAkB,YAAAA,YAAY,CAACK,UAAU,CAACvE,IAAZ,CAAZ,GAAgC,CAACuE,UAAU,CAACvB,KAAZ,CAAhC;AACD;AACF;AACF;AACF,KAtC8B,CAsC7B;;;AAGF,WAAO/F,MAAM,CAACD,IAAP,CAAYwG,aAAZ,EAA2BkB,MAA3B,CAAkC,UAAUnB,MAAV,EAAkBoB,QAAlB,EAA4B;AACnE,UAAIC,YAAY,GAAGpB,aAAa,CAACmB,QAAD,CAAhC;AACA,UAAIE,OAAO,GAAG5H,MAAM,CAACD,IAAP,CAAY4H,YAAZ,CAAd;AACA,UAAIE,aAAa,GAAG,EAApB;AACA,UAAIC,QAAQ,GAAG,IAAf;AACA,UAAIC,SAAS,GAAG,CAAhB;;AAEA,WAAK,IAAIC,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGJ,OAAO,CAAC/G,MAA9B,EAAsCmH,EAAE,EAAxC,EAA4C;AAC1C,YAAIC,MAAM,GAAGL,OAAO,CAACI,EAAD,CAApB;AACA,YAAIE,UAAU,GAAGP,YAAY,CAACM,MAAD,CAA7B,CAF0C,CAEH;;AAEvC,YAAIE,UAAU,GAAG,CAAjB;;AAEA,aAAK,IAAIC,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGF,UAAU,CAACrH,MAAjC,EAAyCuH,EAAE,EAA3C,EAA+C;AAC7C,cAAIC,MAAM,GAAGH,UAAU,CAACE,EAAD,CAAvB;AACAD,UAAAA,UAAU,IAAIE,MAAd;AACD;;AAED,YAAIC,IAAI,GAAGH,UAAU,GAAGD,UAAU,CAACrH,MAAnC,CAX0C,CAWC;;AAE3C,YAAI0H,KAAK,GAAG,CAAZ;;AAEA,aAAK,IAAIC,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAGN,UAAU,CAACrH,MAAnC,EAA2C2H,GAAG,EAA9C,EAAkD;AAChD,cAAIC,OAAO,GAAGP,UAAU,CAACM,GAAD,CAAxB;AACAD,UAAAA,KAAK,IAAI,CAACE,OAAO,GAAGH,IAAX,KAAoBG,OAAO,GAAGH,IAA9B,CAAT;AACD;;AAED,YAAII,EAAE,GAAG3D,IAAI,CAAC4D,IAAL,CAAUJ,KAAK,GAAGL,UAAU,CAACrH,MAA7B,CAAT;AACA,YAAI+H,OAAO,GAAG;AACZN,UAAAA,IAAI,EAAEA,IADM;AAEZI,UAAAA,EAAE,EAAEA;AAFQ,SAAd,CArB0C,CAwBvC;AACH;;AAEA,YAAI3C,KAAK,GAAG6C,OAAO,CAACN,IAAR,GAAeM,OAAO,CAACF,EAAnC;;AAEA,YAAI3C,KAAK,GAAGC,mBAAZ,EAAiC;AAC/B,cAAI8B,QAAQ,IAAI,IAAZ,IAAoB/B,KAAK,GAAGgC,SAAhC,EAA2C;AACzCD,YAAAA,QAAQ,GAAGG,MAAX;AACAF,YAAAA,SAAS,GAAGhC,KAAZ;AACD;AACF;;AAED8B,QAAAA,aAAa,CAACI,MAAD,CAAb,GAAwBW,OAAxB;AACD;;AAEDtC,MAAAA,MAAM,CAACoB,QAAD,CAAN,GAAmB;AACjBmB,QAAAA,UAAU,EAAEf;AADK,OAAnB;AAGA,aAAOxB,MAAP;AACD,KAlDM,EAkDJ,EAlDI,CAAP;AAmDD,GA5FmB,EA4FjB,CAACD,gBAAD,EAAmBD,oBAAnB,EAAyCF,QAAzC,EAAmDC,cAAnD,EAAmErD,eAAnE,CA5FiB,CAApB;AA6FA,SAAOwD,MAAP;AACD;AACD,OAAO,SAASwC,eAAT,CAAyBC,cAAzB,EAAyCC,OAAzC,EAAkD;AACvD,SAAOtG,OAAO,CAAC,YAAY;AACzB,QAAIuG,YAAY,GAAGxI,aAAa,CAAC,EAAD,EAAKsI,cAAL,CAAhC;;AAEA,SAAK,IAAIpI,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqI,OAAO,CAACnI,MAA5B,EAAoCF,CAAC,EAArC,EAAyC;AACvC,UAAIuI,UAAU,GAAGF,OAAO,CAACrI,CAAD,CAAxB;AAAA,UACIwI,EAAE,GAAGD,UAAU,CAACC,EADpB;AAAA,UAEI7C,MAAM,GAAG4C,UAAU,CAAC5C,MAFxB;;AAIA,UAAIA,MAAM,IAAI,IAAd,EAAoB;AAClB,YAAIyC,cAAc,CAACxB,cAAf,CAA8B4B,EAA9B,CAAJ,EAAuC;AACrCF,UAAAA,YAAY,CAACE,EAAD,CAAZ,GAAmB1I,aAAa,CAAC,EAAD,EAAKsI,cAAc,CAACI,EAAD,CAAnB,EAAyB;AACvDN,YAAAA,UAAU,EAAEvC;AAD2C,WAAzB,CAAhC;AAGD,SAJD,MAIO;AACL2C,UAAAA,YAAY,CAACE,EAAD,CAAZ,GAAmB;AACjBN,YAAAA,UAAU,EAAEvC;AADK,WAAnB;AAGD;AACF;AACF;;AAED,WAAO2C,YAAP;AACD,GAtBa,EAsBX,CAACF,cAAD,EAAiBC,OAAjB,CAtBW,CAAd;AAuBD,C,CAAC;AACF;;AAEA,OAAO,SAASI,mBAAT,CAA6BC,SAA7B,EAAwCC,cAAxC,EAAwD;AAC7D,MAAIC,OAAO,GAAGF,SAAS,CAAClJ,MAAV,CAAiB,UAAUqJ,OAAV,EAAmB;AAChD,WAAOA,OAAO,CAACzG,IAAR,KAAiBuG,cAAxB;AACD,GAFa,CAAd;AAGA,SAAOC,OAAO,CAAC,CAAD,CAAd;AACD","sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useMemo } from 'react';\nimport { EuiI18n } from '../i18n';\nvar numericChars = new Set(['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', '-']);\nexport var schemaDetectors = [{\n  type: 'boolean',\n  detector: function detector(value) {\n    return value.toLowerCase() === 'true' || value.toLowerCase() === 'false' ? 1 : 0;\n  },\n  comparator: function comparator(a, b, direction) {\n    var aValue = a.toLowerCase() === 'true';\n    var bValue = b.toLowerCase() === 'true';\n    if (aValue < bValue) return direction === 'asc' ? 1 : -1;\n    if (aValue > bValue) return direction === 'asc' ? -1 : 1;\n    return 0;\n  },\n  icon: 'tokenBoolean',\n  sortTextAsc: React.createElement(EuiI18n, {\n    token: \"euiDataGridSchema.booleanSortTextAsc\",\n    default: \"True-False\"\n  }),\n  sortTextDesc: React.createElement(EuiI18n, {\n    token: \"euiDataGridSchema.booleanSortTextDesc\",\n    default: \"False-True\"\n  })\n}, {\n  type: 'currency',\n  detector: function detector(value) {\n    var matchLength = (value.match( // currency prefers starting with 1-3 characters for the currency symbol\n    // then it matches against numerical data + $\n    /(^[^-(.]{1,3})?[$-(]*[\\d,]+(\\.\\d*)?[$)]*/) || [''])[0].length; // if there is no currency symbol then reduce the score\n\n    var hasCurrency = value.indexOf('$') !== -1;\n    var confidenceAdjustment = hasCurrency ? 1 : 0.95;\n    return matchLength / value.length * confidenceAdjustment || 0;\n  },\n  comparator: function comparator(a, b, direction) {\n    var aChars = a.split('').filter(function (char) {\n      return numericChars.has(char);\n    });\n    var aValue = parseFloat(aChars.join(''));\n    var bChars = b.split('').filter(function (char) {\n      return numericChars.has(char);\n    });\n    var bValue = parseFloat(bChars.join(''));\n    if (aValue < bValue) return direction === 'asc' ? -1 : 1;\n    if (aValue > bValue) return direction === 'asc' ? 1 : -1;\n    return 0;\n  },\n  icon: 'currency',\n  color: 'euiColorVis0',\n  sortTextAsc: React.createElement(EuiI18n, {\n    token: \"euiDataGridSchema.currencySortTextAsc\",\n    default: \"Low-High\"\n  }),\n  sortTextDesc: React.createElement(EuiI18n, {\n    token: \"euiDataGridSchema.currencySortTextDesc\",\n    default: \"High-Low\"\n  })\n}, {\n  type: 'datetime',\n  detector: function detector(value) {\n    // matches the most common forms of ISO-8601\n    var isoTimestampMatch = value.match( // 2019 - 09    - 17     T 12     : 18    : 32      .853     Z or -0600\n    /^\\d{2,4}-\\d{1,2}-\\d{1,2}(T?\\d{1,2}:\\d{1,2}:\\d{1,2}(\\.\\d{3})?(Z|[+-]\\d{4})?)?/); // matches 9 digits (seconds) or 13 digits (milliseconds) since unix epoch\n\n    var unixTimestampMatch = value.match(/^(\\d{9}|\\d{13})$/);\n    var isoMatchLength = isoTimestampMatch ? isoTimestampMatch[0].length : 0; // reduce the confidence of a unix timestamp match to 75%\n    // (a column of all unix timestamps should be numeric instead)\n\n    var unixMatchLength = unixTimestampMatch ? unixTimestampMatch[0].length * 0.75 : 0;\n    return Math.max(isoMatchLength, unixMatchLength) / value.length || 0;\n  },\n  icon: 'tokenDate',\n  sortTextAsc: React.createElement(EuiI18n, {\n    token: \"euiDataGridSchema.dateSortTextAsc\",\n    default: \"New-Old\"\n  }),\n  sortTextDesc: React.createElement(EuiI18n, {\n    token: \"euiDataGridSchema.dateSortTextDesc\",\n    default: \"Old-New\"\n  })\n}, {\n  type: 'numeric',\n  detector: function detector(value) {\n    var matchLength = (value.match(/[%-(]*[\\d,]+(\\.\\d*)?[%)]*/) || [''])[0].length;\n    return matchLength / value.length || 0;\n  },\n  comparator: function comparator(a, b, direction) {\n    // sort on all digits groups\n    var aGroups = a.split(/\\D+/);\n    var bGroups = b.split(/\\D+/);\n    var maxGroups = Math.max(aGroups.length, bGroups.length);\n\n    for (var i = 0; i < maxGroups; i++) {\n      // if A and B's group counts differ and they match until that difference, prefer whichever is shorter\n      if (i >= aGroups.length) return direction === 'asc' ? -1 : 1;\n      if (i >= bGroups.length) return direction === 'asc' ? 1 : -1;\n      var aChars = aGroups[i];\n      var bChars = bGroups[i];\n      var aValue = parseInt(aChars, 10);\n      var bValue = parseInt(bChars, 10);\n      if (aValue < bValue) return direction === 'asc' ? -1 : 1;\n      if (aValue > bValue) return direction === 'asc' ? 1 : -1;\n    }\n\n    return 0;\n  },\n  icon: 'tokenNumber',\n  sortTextAsc: React.createElement(EuiI18n, {\n    token: \"euiDataGridSchema.numberSortTextAsc\",\n    default: \"Low-High\"\n  }),\n  sortTextDesc: React.createElement(EuiI18n, {\n    token: \"euiDataGridSchema.numberSortTextDesc\",\n    default: \"High-Low\"\n  })\n}, {\n  type: 'json',\n  detector: function detector(value) {\n    // does this look like it might be a JSON object?\n    var maybeArray = value[0] === '[' && value[value.length - 1] === ']';\n    var maybeObject = value[0] === '{' && value[value.length - 1] === '}';\n    if (!maybeArray && !maybeObject) return 0;\n\n    try {\n      JSON.parse(value);\n      return 1;\n    } catch (e) {\n      return 0;\n    }\n  },\n  comparator: function comparator(a, b, direction) {\n    if (a.length > b.length) return direction === 'asc' ? 1 : -1;\n    if (a.length < b.length) return direction === 'asc' ? 1 : -1;\n    return 0;\n  },\n  icon: 'tokenObject',\n  sortTextAsc: React.createElement(EuiI18n, {\n    token: \"euiDataGridSchema.jsonSortTextAsc\",\n    default: \"Small-Large\"\n  }),\n  sortTextDesc: React.createElement(EuiI18n, {\n    token: \"euiDataGridSchema.jsonSortTextDesc\",\n    default: \"Large-Small\"\n  })\n}];\n\nfunction scoreValueBySchemaType(value) {\n  var schemaDetectors = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var scores = [];\n\n  for (var i = 0; i < schemaDetectors.length; i++) {\n    var _schemaDetectors$i = schemaDetectors[i],\n        _type = _schemaDetectors$i.type,\n        detector = _schemaDetectors$i.detector;\n    var score = detector(value);\n    scores.push({\n      type: _type,\n      score: score\n    });\n  }\n\n  return scores;\n} // completely arbitrary minimum match I came up with\n// represents lowest score a type detector can have to be considered valid\n\n\nvar MINIMUM_SCORE_MATCH = 0.5;\nexport function useDetectSchema(inMemory, inMemoryValues, schemaDetectors, definedColumnSchemas, autoDetectSchema) {\n  var schema = useMemo(function () {\n    var schema = {};\n\n    if (autoDetectSchema === false) {\n      return schema;\n    }\n\n    var columnSchemas = {}; // for each row, score each value by each detector and put the results on `columnSchemas`\n\n    var rowIndices = Object.keys(inMemoryValues);\n    var columnIdsWithDefinedSchemas = new Set([].concat(_toConsumableArray(inMemory && inMemory.skipColumns || []), _toConsumableArray(Object.keys(definedColumnSchemas))));\n\n    for (var i = 0; i < rowIndices.length; i++) {\n      var rowIndex = rowIndices[i];\n      var rowData = inMemoryValues[rowIndex];\n      var columnIds = Object.keys(rowData);\n\n      for (var j = 0; j < columnIds.length; j++) {\n        var _columnId = columnIds[j];\n        if (columnIdsWithDefinedSchemas.has(_columnId)) continue;\n        var schemaColumn = columnSchemas[_columnId] = columnSchemas[_columnId] || {};\n\n        var columnValue = rowData[_columnId].trim();\n\n        var valueScores = scoreValueBySchemaType(columnValue, schemaDetectors);\n\n        for (var k = 0; k < valueScores.length; k++) {\n          var valueScore = valueScores[k];\n\n          if (schemaColumn.hasOwnProperty(valueScore.type)) {\n            var existingScore = schemaColumn[valueScore.type];\n            existingScore.push(valueScore.score);\n          } else {\n            // first entry for this column\n            schemaColumn[valueScore.type] = [valueScore.score];\n          }\n        }\n      }\n    } // for each column, reduce each detector type's score to a single value and find the best fit\n\n\n    return Object.keys(columnSchemas).reduce(function (schema, columnId) {\n      var columnScores = columnSchemas[columnId];\n      var typeIds = Object.keys(columnScores);\n      var typeSummaries = {};\n      var bestType = null;\n      var bestScore = 0;\n\n      for (var _i = 0; _i < typeIds.length; _i++) {\n        var typeId = typeIds[_i];\n        var typeScores = columnScores[typeId]; // find the mean\n\n        var totalScore = 0;\n\n        for (var _j = 0; _j < typeScores.length; _j++) {\n          var _score = typeScores[_j];\n          totalScore += _score;\n        }\n\n        var mean = totalScore / typeScores.length; // compute standard deviation\n\n        var sdSum = 0;\n\n        for (var _j2 = 0; _j2 < typeScores.length; _j2++) {\n          var _score2 = typeScores[_j2];\n          sdSum += (_score2 - mean) * (_score2 - mean);\n        }\n\n        var sd = Math.sqrt(sdSum / typeScores.length);\n        var summary = {\n          mean: mean,\n          sd: sd\n        }; // the mean-standard_deviation calculation is fairly arbitrary but fits the patterns I've thrown at it\n        // it is meant to represent the scores' average and distribution\n\n        var score = summary.mean - summary.sd;\n\n        if (score > MINIMUM_SCORE_MATCH) {\n          if (bestType == null || score > bestScore) {\n            bestType = typeId;\n            bestScore = score;\n          }\n        }\n\n        typeSummaries[typeId] = summary;\n      }\n\n      schema[columnId] = {\n        columnType: bestType\n      };\n      return schema;\n    }, {});\n  }, [autoDetectSchema, definedColumnSchemas, inMemory, inMemoryValues, schemaDetectors]);\n  return schema;\n}\nexport function useMergedSchema(detectedSchema, columns) {\n  return useMemo(function () {\n    var mergedSchema = _objectSpread({}, detectedSchema);\n\n    for (var i = 0; i < columns.length; i++) {\n      var _columns$i = columns[i],\n          id = _columns$i.id,\n          schema = _columns$i.schema;\n\n      if (schema != null) {\n        if (detectedSchema.hasOwnProperty(id)) {\n          mergedSchema[id] = _objectSpread({}, detectedSchema[id], {\n            columnType: schema\n          });\n        } else {\n          mergedSchema[id] = {\n            columnType: schema\n          };\n        }\n      }\n    }\n\n    return mergedSchema;\n  }, [detectedSchema, columns]);\n} // Given a provided schema, return the details for the schema\n// Useful for grabbing the color or icon\n\nexport function getDetailsForSchema(detectors, providedSchema) {\n  var results = detectors.filter(function (matches) {\n    return matches.type === providedSchema;\n  });\n  return results[0];\n}"]},"metadata":{},"sourceType":"module"}