{"ast":null,"code":"/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/**\n * Secures outbound links. For more info:\n * https://www.jitbit.com/alexblog/256-targetblank---the-most-underestimated-vulnerability-ever/\n */\nimport { isDomainSecure } from '../url';\nexport var getSecureRelForTarget = function getSecureRelForTarget(_ref) {\n  var href = _ref.href,\n      _ref$target = _ref.target,\n      target = _ref$target === void 0 ? '' : _ref$target,\n      rel = _ref.rel;\n  var isElasticHref = !!href && isDomainSecure(href);\n  var relParts = !!rel ? rel.split(' ').filter(function (part) {\n    return !!part.length && part !== 'noreferrer';\n  }) : [];\n\n  if (!isElasticHref) {\n    relParts.push('noreferrer');\n  }\n\n  if (target.includes('_blank') && relParts.indexOf('noopener') === -1) {\n    relParts.push('noopener');\n  }\n\n  return relParts.sort().join(' ').trim();\n};","map":{"version":3,"sources":["/home/nadaanbaalak/greendeck/client/node_modules/@elastic/eui/es/services/security/get_secure_rel_for_target.js"],"names":["isDomainSecure","getSecureRelForTarget","_ref","href","_ref$target","target","rel","isElasticHref","relParts","split","filter","part","length","push","includes","indexOf","sort","join","trim"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;AAmBA;;;;AAIA,SAASA,cAAT,QAA+B,QAA/B;AACA,OAAO,IAAIC,qBAAqB,GAAG,SAASA,qBAAT,CAA+BC,IAA/B,EAAqC;AACtE,MAAIC,IAAI,GAAGD,IAAI,CAACC,IAAhB;AAAA,MACIC,WAAW,GAAGF,IAAI,CAACG,MADvB;AAAA,MAEIA,MAAM,GAAGD,WAAW,KAAK,KAAK,CAArB,GAAyB,EAAzB,GAA8BA,WAF3C;AAAA,MAGIE,GAAG,GAAGJ,IAAI,CAACI,GAHf;AAIA,MAAIC,aAAa,GAAG,CAAC,CAACJ,IAAF,IAAUH,cAAc,CAACG,IAAD,CAA5C;AACA,MAAIK,QAAQ,GAAG,CAAC,CAACF,GAAF,GAAQA,GAAG,CAACG,KAAJ,CAAU,GAAV,EAAeC,MAAf,CAAsB,UAAUC,IAAV,EAAgB;AAC3D,WAAO,CAAC,CAACA,IAAI,CAACC,MAAP,IAAiBD,IAAI,KAAK,YAAjC;AACD,GAFsB,CAAR,GAEV,EAFL;;AAIA,MAAI,CAACJ,aAAL,EAAoB;AAClBC,IAAAA,QAAQ,CAACK,IAAT,CAAc,YAAd;AACD;;AAED,MAAIR,MAAM,CAACS,QAAP,CAAgB,QAAhB,KAA6BN,QAAQ,CAACO,OAAT,CAAiB,UAAjB,MAAiC,CAAC,CAAnE,EAAsE;AACpEP,IAAAA,QAAQ,CAACK,IAAT,CAAc,UAAd;AACD;;AAED,SAAOL,QAAQ,CAACQ,IAAT,GAAgBC,IAAhB,CAAqB,GAArB,EAA0BC,IAA1B,EAAP;AACD,CAnBM","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/**\n * Secures outbound links. For more info:\n * https://www.jitbit.com/alexblog/256-targetblank---the-most-underestimated-vulnerability-ever/\n */\nimport { isDomainSecure } from '../url';\nexport var getSecureRelForTarget = function getSecureRelForTarget(_ref) {\n  var href = _ref.href,\n      _ref$target = _ref.target,\n      target = _ref$target === void 0 ? '' : _ref$target,\n      rel = _ref.rel;\n  var isElasticHref = !!href && isDomainSecure(href);\n  var relParts = !!rel ? rel.split(' ').filter(function (part) {\n    return !!part.length && part !== 'noreferrer';\n  }) : [];\n\n  if (!isElasticHref) {\n    relParts.push('noreferrer');\n  }\n\n  if (target.includes('_blank') && relParts.indexOf('noopener') === -1) {\n    relParts.push('noopener');\n  }\n\n  return relParts.sort().join(' ').trim();\n};"]},"metadata":{},"sourceType":"module"}