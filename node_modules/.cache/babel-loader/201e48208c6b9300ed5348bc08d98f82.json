{"ast":null,"code":"import _Object$keys from 'babel-runtime/core-js/object/keys';\n/**\n * Helper utility that updates the specified callback whenever any of the specified indices have changed.\n */\n\nexport default function createCallbackMemoizer() {\n  var requireAllKeys = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  var cachedIndices = {};\n  return function (_ref) {\n    var callback = _ref.callback,\n        indices = _ref.indices;\n\n    var keys = _Object$keys(indices);\n\n    var allInitialized = !requireAllKeys || keys.every(function (key) {\n      var value = indices[key];\n      return Array.isArray(value) ? value.length > 0 : value >= 0;\n    });\n    var indexChanged = keys.length !== _Object$keys(cachedIndices).length || keys.some(function (key) {\n      var cachedValue = cachedIndices[key];\n      var value = indices[key];\n      return Array.isArray(value) ? cachedValue.join(',') !== value.join(',') : cachedValue !== value;\n    });\n    cachedIndices = indices;\n\n    if (allInitialized && indexChanged) {\n      callback(indices);\n    }\n  };\n}","map":{"version":3,"sources":["/home/nadaanbaalak/greendeck/client/node_modules/react-virtualized/dist/es/utils/createCallbackMemoizer.js"],"names":["_Object$keys","createCallbackMemoizer","requireAllKeys","arguments","length","undefined","cachedIndices","_ref","callback","indices","keys","allInitialized","every","key","value","Array","isArray","indexChanged","some","cachedValue","join"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,mCAAzB;AACA;;;;AAGA,eAAe,SAASC,sBAAT,GAAkC;AAC/C,MAAIC,cAAc,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,IAAzF;AAEA,MAAIG,aAAa,GAAG,EAApB;AAEA,SAAO,UAAUC,IAAV,EAAgB;AACrB,QAAIC,QAAQ,GAAGD,IAAI,CAACC,QAApB;AAAA,QACIC,OAAO,GAAGF,IAAI,CAACE,OADnB;;AAGA,QAAIC,IAAI,GAAGV,YAAY,CAACS,OAAD,CAAvB;;AACA,QAAIE,cAAc,GAAG,CAACT,cAAD,IAAmBQ,IAAI,CAACE,KAAL,CAAW,UAAUC,GAAV,EAAe;AAChE,UAAIC,KAAK,GAAGL,OAAO,CAACI,GAAD,CAAnB;AACA,aAAOE,KAAK,CAACC,OAAN,CAAcF,KAAd,IAAuBA,KAAK,CAACV,MAAN,GAAe,CAAtC,GAA0CU,KAAK,IAAI,CAA1D;AACD,KAHuC,CAAxC;AAIA,QAAIG,YAAY,GAAGP,IAAI,CAACN,MAAL,KAAgBJ,YAAY,CAACM,aAAD,CAAZ,CAA4BF,MAA5C,IAAsDM,IAAI,CAACQ,IAAL,CAAU,UAAUL,GAAV,EAAe;AAChG,UAAIM,WAAW,GAAGb,aAAa,CAACO,GAAD,CAA/B;AACA,UAAIC,KAAK,GAAGL,OAAO,CAACI,GAAD,CAAnB;AAEA,aAAOE,KAAK,CAACC,OAAN,CAAcF,KAAd,IAAuBK,WAAW,CAACC,IAAZ,CAAiB,GAAjB,MAA0BN,KAAK,CAACM,IAAN,CAAW,GAAX,CAAjD,GAAmED,WAAW,KAAKL,KAA1F;AACD,KALwE,CAAzE;AAOAR,IAAAA,aAAa,GAAGG,OAAhB;;AAEA,QAAIE,cAAc,IAAIM,YAAtB,EAAoC;AAClCT,MAAAA,QAAQ,CAACC,OAAD,CAAR;AACD;AACF,GArBD;AAsBD","sourcesContent":["import _Object$keys from 'babel-runtime/core-js/object/keys';\n/**\n * Helper utility that updates the specified callback whenever any of the specified indices have changed.\n */\nexport default function createCallbackMemoizer() {\n  var requireAllKeys = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n  var cachedIndices = {};\n\n  return function (_ref) {\n    var callback = _ref.callback,\n        indices = _ref.indices;\n\n    var keys = _Object$keys(indices);\n    var allInitialized = !requireAllKeys || keys.every(function (key) {\n      var value = indices[key];\n      return Array.isArray(value) ? value.length > 0 : value >= 0;\n    });\n    var indexChanged = keys.length !== _Object$keys(cachedIndices).length || keys.some(function (key) {\n      var cachedValue = cachedIndices[key];\n      var value = indices[key];\n\n      return Array.isArray(value) ? cachedValue.join(',') !== value.join(',') : cachedValue !== value;\n    });\n\n    cachedIndices = indices;\n\n    if (allInitialized && indexChanged) {\n      callback(indices);\n    }\n  };\n}"]},"metadata":{},"sourceType":"module"}