{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\nvar getVisibleArea = function getVisibleArea(bounds, windowWidth, windowHeight) {\n  var left = bounds.left,\n      top = bounds.top,\n      width = bounds.width,\n      height = bounds.height; // This is a common algorithm for finding the intersected area among two rectangles.\n\n  var dx = Math.min(left + width, windowWidth) - Math.max(left, 0);\n  var dy = Math.min(top + height, windowHeight) - Math.max(top, 0);\n  return dx * dy;\n};\n\nvar positionAtTop = function positionAtTop(anchorBounds, width, height, buffer) {\n  var widthDifference = width - anchorBounds.width;\n  var left = anchorBounds.left - widthDifference * 0.5;\n  var top = anchorBounds.top - height - buffer;\n  return {\n    left: left,\n    top: top,\n    width: width,\n    height: height\n  };\n};\n\nvar positionAtRight = function positionAtRight(anchorBounds, width, height, buffer) {\n  var left = anchorBounds.right + buffer;\n  var heightDifference = height - anchorBounds.height;\n  var top = anchorBounds.top - heightDifference * 0.5;\n  return {\n    left: left,\n    top: top,\n    width: width,\n    height: height\n  };\n};\n\nvar positionAtBottom = function positionAtBottom(anchorBounds, width, height, buffer) {\n  var widthDifference = width - anchorBounds.width;\n  var left = anchorBounds.left - widthDifference * 0.5;\n  var top = anchorBounds.bottom + buffer;\n  return {\n    left: left,\n    top: top,\n    width: width,\n    height: height\n  };\n};\n\nvar positionAtLeft = function positionAtLeft(anchorBounds, width, height, buffer) {\n  var left = anchorBounds.left - width - buffer;\n  var heightDifference = height - anchorBounds.height;\n  var top = anchorBounds.top - heightDifference * 0.5;\n  return {\n    left: left,\n    top: top,\n    width: width,\n    height: height\n  };\n};\n\nvar positionToPositionerMap = {\n  top: positionAtTop,\n  right: positionAtRight,\n  bottom: positionAtBottom,\n  left: positionAtLeft\n};\n/**\n * Determine the best position for a popover that avoids clipping by the window view port.\n *\n * @param {Object} anchorBounds - getBoundingClientRect() of the node the popover is tethered to (e.g. a button).\n * @param {Object} popoverBounds - getBoundingClientRect() of the popover node (e.g. the tooltip).\n * @param {string} requestedPosition - Position the user wants. One of [\"top\", \"right\", \"bottom\", \"left\"]\n * @param {number} buffer - The space between the wrapper and the popover. Also the minimum space between the\n * popover and the window.\n * @param {Array} positions - List of acceptable positions. Defaults to [\"top\", \"right\", \"bottom\", \"left\"].\n *\n * @returns {Object} With properties position (one of [\"top\", \"right\", \"bottom\", \"left\"]), left, top, width, and height.\n */\n\nexport function calculatePopoverPosition(anchorBounds, popoverBounds, requestedPosition) {\n  var buffer = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 16;\n  var positions = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : ['top', 'right', 'bottom', 'left'];\n\n  if (typeof buffer !== 'number') {\n    throw new Error(\"calculatePopoverPosition received a buffer argument of \".concat(buffer, \"' but expected a number\"));\n  }\n\n  var windowWidth = window.innerWidth;\n  var windowHeight = window.innerHeight;\n  var popoverWidth = popoverBounds.width,\n      popoverHeight = popoverBounds.height;\n  var positionToBoundsMap = {};\n  var positionToVisibleAreaMap = {};\n  positions.forEach(function (position) {\n    var bounds = positionToPositionerMap[position](anchorBounds, popoverWidth, popoverHeight, buffer);\n    positionToBoundsMap[position] = bounds; // Calculate how much area of the popover is visible at each position.\n\n    positionToVisibleAreaMap[position] = getVisibleArea(bounds, windowWidth, windowHeight);\n  }); // If the requested position clips the popover, find the position which clips the popover the least.\n  // Default to use the requested position.\n\n  var calculatedPopoverPosition = positions.reduce(function (mostVisiblePosition, position) {\n    if (positionToVisibleAreaMap[position] > positionToVisibleAreaMap[mostVisiblePosition]) {\n      return position;\n    }\n\n    return mostVisiblePosition;\n  }, requestedPosition);\n  return _objectSpread({\n    position: calculatedPopoverPosition\n  }, positionToBoundsMap[calculatedPopoverPosition]);\n}","map":{"version":3,"sources":["/home/nadaanbaalak/greendeck/client/node_modules/@elastic/eui/es/services/popover/calculate_popover_position.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","getVisibleArea","bounds","windowWidth","windowHeight","left","top","width","height","dx","Math","min","max","dy","positionAtTop","anchorBounds","buffer","widthDifference","positionAtRight","right","heightDifference","positionAtBottom","bottom","positionAtLeft","positionToPositionerMap","calculatePopoverPosition","popoverBounds","requestedPosition","undefined","positions","Error","concat","window","innerWidth","innerHeight","popoverWidth","popoverHeight","positionToBoundsMap","positionToVisibleAreaMap","position","calculatedPopoverPosition","reduce","mostVisiblePosition"],"mappings":"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","sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nvar getVisibleArea = function getVisibleArea(bounds, windowWidth, windowHeight) {\n  var left = bounds.left,\n      top = bounds.top,\n      width = bounds.width,\n      height = bounds.height; // This is a common algorithm for finding the intersected area among two rectangles.\n\n  var dx = Math.min(left + width, windowWidth) - Math.max(left, 0);\n  var dy = Math.min(top + height, windowHeight) - Math.max(top, 0);\n  return dx * dy;\n};\n\nvar positionAtTop = function positionAtTop(anchorBounds, width, height, buffer) {\n  var widthDifference = width - anchorBounds.width;\n  var left = anchorBounds.left - widthDifference * 0.5;\n  var top = anchorBounds.top - height - buffer;\n  return {\n    left: left,\n    top: top,\n    width: width,\n    height: height\n  };\n};\n\nvar positionAtRight = function positionAtRight(anchorBounds, width, height, buffer) {\n  var left = anchorBounds.right + buffer;\n  var heightDifference = height - anchorBounds.height;\n  var top = anchorBounds.top - heightDifference * 0.5;\n  return {\n    left: left,\n    top: top,\n    width: width,\n    height: height\n  };\n};\n\nvar positionAtBottom = function positionAtBottom(anchorBounds, width, height, buffer) {\n  var widthDifference = width - anchorBounds.width;\n  var left = anchorBounds.left - widthDifference * 0.5;\n  var top = anchorBounds.bottom + buffer;\n  return {\n    left: left,\n    top: top,\n    width: width,\n    height: height\n  };\n};\n\nvar positionAtLeft = function positionAtLeft(anchorBounds, width, height, buffer) {\n  var left = anchorBounds.left - width - buffer;\n  var heightDifference = height - anchorBounds.height;\n  var top = anchorBounds.top - heightDifference * 0.5;\n  return {\n    left: left,\n    top: top,\n    width: width,\n    height: height\n  };\n};\n\nvar positionToPositionerMap = {\n  top: positionAtTop,\n  right: positionAtRight,\n  bottom: positionAtBottom,\n  left: positionAtLeft\n};\n/**\n * Determine the best position for a popover that avoids clipping by the window view port.\n *\n * @param {Object} anchorBounds - getBoundingClientRect() of the node the popover is tethered to (e.g. a button).\n * @param {Object} popoverBounds - getBoundingClientRect() of the popover node (e.g. the tooltip).\n * @param {string} requestedPosition - Position the user wants. One of [\"top\", \"right\", \"bottom\", \"left\"]\n * @param {number} buffer - The space between the wrapper and the popover. Also the minimum space between the\n * popover and the window.\n * @param {Array} positions - List of acceptable positions. Defaults to [\"top\", \"right\", \"bottom\", \"left\"].\n *\n * @returns {Object} With properties position (one of [\"top\", \"right\", \"bottom\", \"left\"]), left, top, width, and height.\n */\n\nexport function calculatePopoverPosition(anchorBounds, popoverBounds, requestedPosition) {\n  var buffer = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 16;\n  var positions = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : ['top', 'right', 'bottom', 'left'];\n\n  if (typeof buffer !== 'number') {\n    throw new Error(\"calculatePopoverPosition received a buffer argument of \".concat(buffer, \"' but expected a number\"));\n  }\n\n  var windowWidth = window.innerWidth;\n  var windowHeight = window.innerHeight;\n  var popoverWidth = popoverBounds.width,\n      popoverHeight = popoverBounds.height;\n  var positionToBoundsMap = {};\n  var positionToVisibleAreaMap = {};\n  positions.forEach(function (position) {\n    var bounds = positionToPositionerMap[position](anchorBounds, popoverWidth, popoverHeight, buffer);\n    positionToBoundsMap[position] = bounds; // Calculate how much area of the popover is visible at each position.\n\n    positionToVisibleAreaMap[position] = getVisibleArea(bounds, windowWidth, windowHeight);\n  }); // If the requested position clips the popover, find the position which clips the popover the least.\n  // Default to use the requested position.\n\n  var calculatedPopoverPosition = positions.reduce(function (mostVisiblePosition, position) {\n    if (positionToVisibleAreaMap[position] > positionToVisibleAreaMap[mostVisiblePosition]) {\n      return position;\n    }\n\n    return mostVisiblePosition;\n  }, requestedPosition);\n  return _objectSpread({\n    position: calculatedPopoverPosition\n  }, positionToBoundsMap[calculatedPopoverPosition]);\n}"]},"metadata":{},"sourceType":"module"}