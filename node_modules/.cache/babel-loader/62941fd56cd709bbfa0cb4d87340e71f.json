{"ast":null,"code":"import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport { CellMeasurerCache } from '../CellMeasurer';\n/**\n * Caches measurements for a given cell.\n */\n\nvar CellMeasurerCacheDecorator = function () {\n  function CellMeasurerCacheDecorator() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, CellMeasurerCacheDecorator);\n\n    this.columnWidth = function (_ref) {\n      var index = _ref.index;\n\n      _this._cellMeasurerCache.columnWidth({\n        index: index + _this._columnIndexOffset\n      });\n    };\n\n    this.rowHeight = function (_ref2) {\n      var index = _ref2.index;\n\n      _this._cellMeasurerCache.rowHeight({\n        index: index + _this._rowIndexOffset\n      });\n    };\n\n    var cellMeasurerCache = params.cellMeasurerCache,\n        _params$columnIndexOf = params.columnIndexOffset,\n        columnIndexOffset = _params$columnIndexOf === undefined ? 0 : _params$columnIndexOf,\n        _params$rowIndexOffse = params.rowIndexOffset,\n        rowIndexOffset = _params$rowIndexOffse === undefined ? 0 : _params$rowIndexOffse;\n    this._cellMeasurerCache = cellMeasurerCache;\n    this._columnIndexOffset = columnIndexOffset;\n    this._rowIndexOffset = rowIndexOffset;\n  }\n\n  _createClass(CellMeasurerCacheDecorator, [{\n    key: 'clear',\n    value: function clear(rowIndex, columnIndex) {\n      this._cellMeasurerCache.clear(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: 'clearAll',\n    value: function clearAll() {\n      this._cellMeasurerCache.clearAll();\n    }\n  }, {\n    key: 'hasFixedHeight',\n    value: function hasFixedHeight() {\n      return this._cellMeasurerCache.hasFixedHeight();\n    }\n  }, {\n    key: 'hasFixedWidth',\n    value: function hasFixedWidth() {\n      return this._cellMeasurerCache.hasFixedWidth();\n    }\n  }, {\n    key: 'getHeight',\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getHeight(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: 'getWidth',\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getWidth(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: 'has',\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.has(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: 'set',\n    value: function set(rowIndex, columnIndex, width, height) {\n      this._cellMeasurerCache.set(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset, width, height);\n    }\n  }, {\n    key: 'defaultHeight',\n    get: function get() {\n      return this._cellMeasurerCache.defaultHeight;\n    }\n  }, {\n    key: 'defaultWidth',\n    get: function get() {\n      return this._cellMeasurerCache.defaultWidth;\n    }\n  }]);\n\n  return CellMeasurerCacheDecorator;\n}();\n\nexport default CellMeasurerCacheDecorator;","map":{"version":3,"sources":["/home/nadaanbaalak/greendeck/client/node_modules/react-virtualized/dist/es/MultiGrid/CellMeasurerCacheDecorator.js"],"names":["_classCallCheck","_createClass","CellMeasurerCache","CellMeasurerCacheDecorator","_this","params","arguments","length","undefined","columnWidth","_ref","index","_cellMeasurerCache","_columnIndexOffset","rowHeight","_ref2","_rowIndexOffset","cellMeasurerCache","_params$columnIndexOf","columnIndexOffset","_params$rowIndexOffse","rowIndexOffset","key","value","clear","rowIndex","columnIndex","clearAll","hasFixedHeight","hasFixedWidth","getHeight","getWidth","has","set","width","height","get","defaultHeight","defaultWidth"],"mappings":"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","sourcesContent":["import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport { CellMeasurerCache } from '../CellMeasurer';\n\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCacheDecorator = function () {\n  function CellMeasurerCacheDecorator() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, CellMeasurerCacheDecorator);\n\n    this.columnWidth = function (_ref) {\n      var index = _ref.index;\n\n      _this._cellMeasurerCache.columnWidth({\n        index: index + _this._columnIndexOffset\n      });\n    };\n\n    this.rowHeight = function (_ref2) {\n      var index = _ref2.index;\n\n      _this._cellMeasurerCache.rowHeight({\n        index: index + _this._rowIndexOffset\n      });\n    };\n\n    var cellMeasurerCache = params.cellMeasurerCache,\n        _params$columnIndexOf = params.columnIndexOffset,\n        columnIndexOffset = _params$columnIndexOf === undefined ? 0 : _params$columnIndexOf,\n        _params$rowIndexOffse = params.rowIndexOffset,\n        rowIndexOffset = _params$rowIndexOffse === undefined ? 0 : _params$rowIndexOffse;\n\n\n    this._cellMeasurerCache = cellMeasurerCache;\n    this._columnIndexOffset = columnIndexOffset;\n    this._rowIndexOffset = rowIndexOffset;\n  }\n\n  _createClass(CellMeasurerCacheDecorator, [{\n    key: 'clear',\n    value: function clear(rowIndex, columnIndex) {\n      this._cellMeasurerCache.clear(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: 'clearAll',\n    value: function clearAll() {\n      this._cellMeasurerCache.clearAll();\n    }\n  }, {\n    key: 'hasFixedHeight',\n    value: function hasFixedHeight() {\n      return this._cellMeasurerCache.hasFixedHeight();\n    }\n  }, {\n    key: 'hasFixedWidth',\n    value: function hasFixedWidth() {\n      return this._cellMeasurerCache.hasFixedWidth();\n    }\n  }, {\n    key: 'getHeight',\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      return this._cellMeasurerCache.getHeight(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: 'getWidth',\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      return this._cellMeasurerCache.getWidth(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: 'has',\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      return this._cellMeasurerCache.has(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: 'set',\n    value: function set(rowIndex, columnIndex, width, height) {\n      this._cellMeasurerCache.set(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset, width, height);\n    }\n  }, {\n    key: 'defaultHeight',\n    get: function get() {\n      return this._cellMeasurerCache.defaultHeight;\n    }\n  }, {\n    key: 'defaultWidth',\n    get: function get() {\n      return this._cellMeasurerCache.defaultWidth;\n    }\n  }]);\n\n  return CellMeasurerCacheDecorator;\n}();\n\nexport default CellMeasurerCacheDecorator;"]},"metadata":{},"sourceType":"module"}