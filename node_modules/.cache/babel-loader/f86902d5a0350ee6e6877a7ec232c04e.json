{"ast":null,"code":"/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport dateMath from '@elastic/datemath';\nimport { parseRelativeParts, toRelativeStringFromParts } from './relative_utils';\nexport var DATE_MODES = {\n  ABSOLUTE: 'absolute',\n  RELATIVE: 'relative',\n  NOW: 'now'\n};\nexport function getDateMode(value) {\n  if (value === 'now') {\n    return DATE_MODES.NOW;\n  }\n\n  if (value.includes('now')) {\n    return DATE_MODES.RELATIVE;\n  }\n\n  return DATE_MODES.ABSOLUTE;\n}\nexport function toAbsoluteString(value) {\n  var roundUp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var valueAsMoment = dateMath.parse(value, {\n    roundUp: roundUp\n  });\n\n  if (!valueAsMoment) {\n    return value;\n  }\n\n  return valueAsMoment.toISOString();\n}\nexport function toRelativeString(value) {\n  return toRelativeStringFromParts(parseRelativeParts(value));\n}","map":{"version":3,"sources":["/home/nadaanbaalak/greendeck/client/node_modules/@elastic/eui/es/components/date_picker/super_date_picker/date_modes.js"],"names":["dateMath","parseRelativeParts","toRelativeStringFromParts","DATE_MODES","ABSOLUTE","RELATIVE","NOW","getDateMode","value","includes","toAbsoluteString","roundUp","arguments","length","undefined","valueAsMoment","parse","toISOString","toRelativeString"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,QAAP,MAAqB,mBAArB;AACA,SAASC,kBAAT,EAA6BC,yBAA7B,QAA8D,kBAA9D;AACA,OAAO,IAAIC,UAAU,GAAG;AACtBC,EAAAA,QAAQ,EAAE,UADY;AAEtBC,EAAAA,QAAQ,EAAE,UAFY;AAGtBC,EAAAA,GAAG,EAAE;AAHiB,CAAjB;AAKP,OAAO,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACjC,MAAIA,KAAK,KAAK,KAAd,EAAqB;AACnB,WAAOL,UAAU,CAACG,GAAlB;AACD;;AAED,MAAIE,KAAK,CAACC,QAAN,CAAe,KAAf,CAAJ,EAA2B;AACzB,WAAON,UAAU,CAACE,QAAlB;AACD;;AAED,SAAOF,UAAU,CAACC,QAAlB;AACD;AACD,OAAO,SAASM,gBAAT,CAA0BF,KAA1B,EAAiC;AACtC,MAAIG,OAAO,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,KAAlF;AACA,MAAIG,aAAa,GAAGf,QAAQ,CAACgB,KAAT,CAAeR,KAAf,EAAsB;AACxCG,IAAAA,OAAO,EAAEA;AAD+B,GAAtB,CAApB;;AAIA,MAAI,CAACI,aAAL,EAAoB;AAClB,WAAOP,KAAP;AACD;;AAED,SAAOO,aAAa,CAACE,WAAd,EAAP;AACD;AACD,OAAO,SAASC,gBAAT,CAA0BV,KAA1B,EAAiC;AACtC,SAAON,yBAAyB,CAACD,kBAAkB,CAACO,KAAD,CAAnB,CAAhC;AACD","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport dateMath from '@elastic/datemath';\nimport { parseRelativeParts, toRelativeStringFromParts } from './relative_utils';\nexport var DATE_MODES = {\n  ABSOLUTE: 'absolute',\n  RELATIVE: 'relative',\n  NOW: 'now'\n};\nexport function getDateMode(value) {\n  if (value === 'now') {\n    return DATE_MODES.NOW;\n  }\n\n  if (value.includes('now')) {\n    return DATE_MODES.RELATIVE;\n  }\n\n  return DATE_MODES.ABSOLUTE;\n}\nexport function toAbsoluteString(value) {\n  var roundUp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var valueAsMoment = dateMath.parse(value, {\n    roundUp: roundUp\n  });\n\n  if (!valueAsMoment) {\n    return value;\n  }\n\n  return valueAsMoment.toISOString();\n}\nexport function toRelativeString(value) {\n  return toRelativeStringFromParts(parseRelativeParts(value));\n}"]},"metadata":{},"sourceType":"module"}