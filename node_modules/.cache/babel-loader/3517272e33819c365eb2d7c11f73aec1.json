{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport clsx from 'clsx';\nimport Column from './Column';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport defaultRowRenderer from './defaultRowRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer';\nimport SortDirection from './SortDirection';\n/**\n * Table component with fixed headers and virtualized rows for improved performance with large data sets.\n * This component expects explicit width, height, and padding parameters.\n */\n\nvar Table = function (_React$PureComponent) {\n  _inherits(Table, _React$PureComponent);\n\n  function Table(props) {\n    _classCallCheck(this, Table);\n\n    var _this = _possibleConstructorReturn(this, (Table.__proto__ || _Object$getPrototypeOf(Table)).call(this, props));\n\n    _this.state = {\n      scrollbarWidth: 0\n    };\n    _this._createColumn = _this._createColumn.bind(_this);\n    _this._createRow = _this._createRow.bind(_this);\n    _this._onScroll = _this._onScroll.bind(_this);\n    _this._onSectionRendered = _this._onSectionRendered.bind(_this);\n    _this._setRef = _this._setRef.bind(_this);\n    return _this;\n  }\n\n  _createClass(Table, [{\n    key: 'forceUpdateGrid',\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: 'getOffsetForRow',\n    value: function getOffsetForRow(_ref) {\n      var alignment = _ref.alignment,\n          index = _ref.index;\n\n      if (this.Grid) {\n        var _Grid$getOffsetForCel = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index\n        }),\n            scrollTop = _Grid$getOffsetForCel.scrollTop;\n\n        return scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: 'invalidateCellSizeAfterRender',\n    value: function invalidateCellSizeAfterRender(_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: 'measureAllRows',\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: 'recomputeGridSize',\n    value: function recomputeGridSize() {\n      var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref3$columnIndex = _ref3.columnIndex,\n          columnIndex = _ref3$columnIndex === undefined ? 0 : _ref3$columnIndex,\n          _ref3$rowIndex = _ref3.rowIndex,\n          rowIndex = _ref3$rowIndex === undefined ? 0 : _ref3$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: 'recomputeRowHeights',\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: 'scrollToPosition',\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: 'scrollToRow',\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: 'getScrollbarWidth',\n    value: function getScrollbarWidth() {\n      if (this.Grid) {\n        var _Grid = findDOMNode(this.Grid);\n\n        var clientWidth = _Grid.clientWidth || 0;\n        var offsetWidth = _Grid.offsetWidth || 0;\n        return offsetWidth - clientWidth;\n      }\n\n      return 0;\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          children = _props.children,\n          className = _props.className,\n          disableHeader = _props.disableHeader,\n          gridClassName = _props.gridClassName,\n          gridStyle = _props.gridStyle,\n          headerHeight = _props.headerHeight,\n          headerRowRenderer = _props.headerRowRenderer,\n          height = _props.height,\n          id = _props.id,\n          noRowsRenderer = _props.noRowsRenderer,\n          rowClassName = _props.rowClassName,\n          rowStyle = _props.rowStyle,\n          scrollToIndex = _props.scrollToIndex,\n          style = _props.style,\n          width = _props.width;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var availableRowsHeight = disableHeader ? height : height - headerHeight;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: -1\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: -1\n      }) : rowStyle; // Precompute and cache column styles before rendering rows and columns to speed things up\n\n      this._cachedColumnStyles = [];\n      React.Children.toArray(children).forEach(function (column, index) {\n        var flexStyles = _this2._getFlexStyleForColumn(column, column.props.style);\n\n        _this2._cachedColumnStyles[index] = _extends({\n          overflow: 'hidden'\n        }, flexStyles);\n      }); // Note that we specify :rowCount, :scrollbarWidth, :sortBy, and :sortDirection as properties on Grid even though these have nothing to do with Grid.\n      // This is done because Grid is a pure component and won't update unless its properties or state has changed.\n      // Any property that should trigger a re-render of Grid then is specified here to avoid a stale display.\n\n      return React.createElement('div', {\n        'aria-label': this.props['aria-label'],\n        'aria-labelledby': this.props['aria-labelledby'],\n        'aria-colcount': React.Children.toArray(children).length,\n        'aria-rowcount': this.props.rowCount,\n        className: clsx('ReactVirtualized__Table', className),\n        id: id,\n        role: 'grid',\n        style: style\n      }, !disableHeader && headerRowRenderer({\n        className: clsx('ReactVirtualized__Table__headerRow', rowClass),\n        columns: this._getHeaderColumns(),\n        style: _extends({\n          height: headerHeight,\n          overflow: 'hidden',\n          paddingRight: scrollbarWidth,\n          width: width\n        }, rowStyleObject)\n      }), React.createElement(Grid, _extends({}, this.props, {\n        'aria-readonly': null,\n        autoContainerWidth: true,\n        className: clsx('ReactVirtualized__Table__Grid', gridClassName),\n        cellRenderer: this._createRow,\n        columnWidth: width,\n        columnCount: 1,\n        height: availableRowsHeight,\n        id: undefined,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        role: 'rowgroup',\n        scrollbarWidth: scrollbarWidth,\n        scrollToRow: scrollToIndex,\n        style: _extends({}, gridStyle, {\n          overflowX: 'hidden'\n        })\n      })));\n    }\n  }, {\n    key: '_createColumn',\n    value: function _createColumn(_ref4) {\n      var column = _ref4.column,\n          columnIndex = _ref4.columnIndex,\n          isScrolling = _ref4.isScrolling,\n          parent = _ref4.parent,\n          rowData = _ref4.rowData,\n          rowIndex = _ref4.rowIndex;\n      var onColumnClick = this.props.onColumnClick;\n      var _column$props = column.props,\n          cellDataGetter = _column$props.cellDataGetter,\n          cellRenderer = _column$props.cellRenderer,\n          className = _column$props.className,\n          columnData = _column$props.columnData,\n          dataKey = _column$props.dataKey,\n          id = _column$props.id;\n      var cellData = cellDataGetter({\n        columnData: columnData,\n        dataKey: dataKey,\n        rowData: rowData\n      });\n      var renderedCell = cellRenderer({\n        cellData: cellData,\n        columnData: columnData,\n        columnIndex: columnIndex,\n        dataKey: dataKey,\n        isScrolling: isScrolling,\n        parent: parent,\n        rowData: rowData,\n        rowIndex: rowIndex\n      });\n\n      var onClick = function onClick(event) {\n        onColumnClick && onColumnClick({\n          columnData: columnData,\n          dataKey: dataKey,\n          event: event\n        });\n      };\n\n      var style = this._cachedColumnStyles[columnIndex];\n      var title = typeof renderedCell === 'string' ? renderedCell : null; // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n      return React.createElement('div', {\n        'aria-colindex': columnIndex + 1,\n        'aria-describedby': id,\n        className: clsx('ReactVirtualized__Table__rowColumn', className),\n        key: 'Row' + rowIndex + '-' + 'Col' + columnIndex,\n        onClick: onClick,\n        role: 'gridcell',\n        style: style,\n        title: title\n      }, renderedCell);\n    }\n  }, {\n    key: '_createHeader',\n    value: function _createHeader(_ref5) {\n      var column = _ref5.column,\n          index = _ref5.index;\n      var _props2 = this.props,\n          headerClassName = _props2.headerClassName,\n          headerStyle = _props2.headerStyle,\n          onHeaderClick = _props2.onHeaderClick,\n          sort = _props2.sort,\n          sortBy = _props2.sortBy,\n          sortDirection = _props2.sortDirection;\n      var _column$props2 = column.props,\n          columnData = _column$props2.columnData,\n          dataKey = _column$props2.dataKey,\n          defaultSortDirection = _column$props2.defaultSortDirection,\n          disableSort = _column$props2.disableSort,\n          headerRenderer = _column$props2.headerRenderer,\n          id = _column$props2.id,\n          label = _column$props2.label;\n      var sortEnabled = !disableSort && sort;\n      var classNames = clsx('ReactVirtualized__Table__headerColumn', headerClassName, column.props.headerClassName, {\n        ReactVirtualized__Table__sortableHeaderColumn: sortEnabled\n      });\n\n      var style = this._getFlexStyleForColumn(column, _extends({}, headerStyle, column.props.headerStyle));\n\n      var renderedHeader = headerRenderer({\n        columnData: columnData,\n        dataKey: dataKey,\n        disableSort: disableSort,\n        label: label,\n        sortBy: sortBy,\n        sortDirection: sortDirection\n      });\n      var headerOnClick = void 0,\n          headerOnKeyDown = void 0,\n          headerTabIndex = void 0,\n          headerAriaSort = void 0,\n          headerAriaLabel = void 0;\n\n      if (sortEnabled || onHeaderClick) {\n        // If this is a sortable header, clicking it should update the table data's sorting.\n        var isFirstTimeSort = sortBy !== dataKey; // If this is the firstTime sort of this column, use the column default sort order.\n        // Otherwise, invert the direction of the sort.\n\n        var newSortDirection = isFirstTimeSort ? defaultSortDirection : sortDirection === SortDirection.DESC ? SortDirection.ASC : SortDirection.DESC;\n\n        var onClick = function onClick(event) {\n          sortEnabled && sort({\n            defaultSortDirection: defaultSortDirection,\n            event: event,\n            sortBy: dataKey,\n            sortDirection: newSortDirection\n          });\n          onHeaderClick && onHeaderClick({\n            columnData: columnData,\n            dataKey: dataKey,\n            event: event\n          });\n        };\n\n        var onKeyDown = function onKeyDown(event) {\n          if (event.key === 'Enter' || event.key === ' ') {\n            onClick(event);\n          }\n        };\n\n        headerAriaLabel = column.props['aria-label'] || label || dataKey;\n        headerAriaSort = 'none';\n        headerTabIndex = 0;\n        headerOnClick = onClick;\n        headerOnKeyDown = onKeyDown;\n      }\n\n      if (sortBy === dataKey) {\n        headerAriaSort = sortDirection === SortDirection.ASC ? 'ascending' : 'descending';\n      } // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n\n      return React.createElement('div', {\n        'aria-label': headerAriaLabel,\n        'aria-sort': headerAriaSort,\n        className: classNames,\n        id: id,\n        key: 'Header-Col' + index,\n        onClick: headerOnClick,\n        onKeyDown: headerOnKeyDown,\n        role: 'columnheader',\n        style: style,\n        tabIndex: headerTabIndex\n      }, renderedHeader);\n    }\n  }, {\n    key: '_createRow',\n    value: function _createRow(_ref6) {\n      var _this3 = this;\n\n      var index = _ref6.rowIndex,\n          isScrolling = _ref6.isScrolling,\n          key = _ref6.key,\n          parent = _ref6.parent,\n          style = _ref6.style;\n      var _props3 = this.props,\n          children = _props3.children,\n          onRowClick = _props3.onRowClick,\n          onRowDoubleClick = _props3.onRowDoubleClick,\n          onRowRightClick = _props3.onRowRightClick,\n          onRowMouseOver = _props3.onRowMouseOver,\n          onRowMouseOut = _props3.onRowMouseOut,\n          rowClassName = _props3.rowClassName,\n          rowGetter = _props3.rowGetter,\n          rowRenderer = _props3.rowRenderer,\n          rowStyle = _props3.rowStyle;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: index\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: index\n      }) : rowStyle;\n      var rowData = rowGetter({\n        index: index\n      });\n      var columns = React.Children.toArray(children).map(function (column, columnIndex) {\n        return _this3._createColumn({\n          column: column,\n          columnIndex: columnIndex,\n          isScrolling: isScrolling,\n          parent: parent,\n          rowData: rowData,\n          rowIndex: index,\n          scrollbarWidth: scrollbarWidth\n        });\n      });\n      var className = clsx('ReactVirtualized__Table__row', rowClass);\n\n      var flattenedStyle = _extends({}, style, {\n        height: this._getRowHeight(index),\n        overflow: 'hidden',\n        paddingRight: scrollbarWidth\n      }, rowStyleObject);\n\n      return rowRenderer({\n        className: className,\n        columns: columns,\n        index: index,\n        isScrolling: isScrolling,\n        key: key,\n        onRowClick: onRowClick,\n        onRowDoubleClick: onRowDoubleClick,\n        onRowRightClick: onRowRightClick,\n        onRowMouseOver: onRowMouseOver,\n        onRowMouseOut: onRowMouseOut,\n        rowData: rowData,\n        style: flattenedStyle\n      });\n    }\n    /**\n     * Determines the flex-shrink, flex-grow, and width values for a cell (header or column).\n     */\n\n  }, {\n    key: '_getFlexStyleForColumn',\n    value: function _getFlexStyleForColumn(column) {\n      var customStyle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var flexValue = column.props.flexGrow + ' ' + column.props.flexShrink + ' ' + column.props.width + 'px';\n\n      var style = _extends({}, customStyle, {\n        flex: flexValue,\n        msFlex: flexValue,\n        WebkitFlex: flexValue\n      });\n\n      if (column.props.maxWidth) {\n        style.maxWidth = column.props.maxWidth;\n      }\n\n      if (column.props.minWidth) {\n        style.minWidth = column.props.minWidth;\n      }\n\n      return style;\n    }\n  }, {\n    key: '_getHeaderColumns',\n    value: function _getHeaderColumns() {\n      var _this4 = this;\n\n      var _props4 = this.props,\n          children = _props4.children,\n          disableHeader = _props4.disableHeader;\n      var items = disableHeader ? [] : React.Children.toArray(children);\n      return items.map(function (column, index) {\n        return _this4._createHeader({\n          column: column,\n          index: index\n        });\n      });\n    }\n  }, {\n    key: '_getRowHeight',\n    value: function _getRowHeight(rowIndex) {\n      var rowHeight = this.props.rowHeight;\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: rowIndex\n      }) : rowHeight;\n    }\n  }, {\n    key: '_onScroll',\n    value: function _onScroll(_ref7) {\n      var clientHeight = _ref7.clientHeight,\n          scrollHeight = _ref7.scrollHeight,\n          scrollTop = _ref7.scrollTop;\n      var onScroll = this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    }\n  }, {\n    key: '_onSectionRendered',\n    value: function _onSectionRendered(_ref8) {\n      var rowOverscanStartIndex = _ref8.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref8.rowOverscanStopIndex,\n          rowStartIndex = _ref8.rowStartIndex,\n          rowStopIndex = _ref8.rowStopIndex;\n      var onRowsRendered = this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    }\n  }, {\n    key: '_setRef',\n    value: function _setRef(ref) {\n      this.Grid = ref;\n    }\n  }, {\n    key: '_setScrollbarWidth',\n    value: function _setScrollbarWidth() {\n      var scrollbarWidth = this.getScrollbarWidth();\n      this.setState({\n        scrollbarWidth: scrollbarWidth\n      });\n    }\n  }]);\n\n  return Table;\n}(React.PureComponent);\n\nTable.defaultProps = {\n  disableHeader: false,\n  estimatedRowSize: 30,\n  headerHeight: 0,\n  headerStyle: {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  rowRenderer: defaultRowRenderer,\n  headerRowRenderer: defaultHeaderRowRenderer,\n  rowStyle: {},\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n};\nexport default Table;\nTable.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** This is just set on the grid top element. */\n  'aria-label': PropTypes.string,\n\n  /** This is just set on the grid top element. */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /** One or more Columns describing the data displayed in this row */\n  children: function children(props) {\n    var children = React.Children.toArray(props.children);\n\n    for (var i = 0; i < children.length; i++) {\n      var childType = children[i].type;\n\n      if (childType !== Column && !(childType.prototype instanceof Column)) {\n        return new Error('Table only accepts children of type Column');\n      }\n    }\n  },\n\n  /** Optional CSS class name */\n  className: PropTypes.string,\n\n  /** Disable rendering the header at all */\n  disableHeader: PropTypes.bool,\n\n  /**\n   * Used to estimate the total height of a Table before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  estimatedRowSize: PropTypes.number.isRequired,\n\n  /** Optional custom CSS class name to attach to inner Grid element. */\n  gridClassName: PropTypes.string,\n\n  /** Optional inline style to attach to inner Grid element. */\n  gridStyle: PropTypes.object,\n\n  /** Optional CSS class to apply to all column headers */\n  headerClassName: PropTypes.string,\n\n  /** Fixed height of header row */\n  headerHeight: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: any[],\n   *   style: any\n   * }): PropTypes.node\n   */\n  headerRowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table header columns. */\n  headerStyle: PropTypes.object,\n\n  /** Fixed/available height for out DOM element */\n  height: PropTypes.number.isRequired,\n\n  /** Optional id */\n  id: PropTypes.string,\n\n  /** Optional renderer to be used in place of table body rows when rowCount is 0 */\n  noRowsRenderer: PropTypes.func,\n\n  /**\n   * Optional callback when a column is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onColumnClick: PropTypes.func,\n\n  /**\n   * Optional callback when a column's header is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onHeaderClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user double-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowDoubleClick: PropTypes.func,\n\n  /**\n   * Callback invoked when the mouse leaves a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOut: PropTypes.func,\n\n  /**\n   * Callback invoked when a user moves the mouse over a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOver: PropTypes.func,\n\n  /**\n   * Callback invoked when a user right-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowRightClick: PropTypes.func,\n\n  /**\n   * Callback invoked with information about the slice of rows that were just rendered.\n   * ({ startIndex, stopIndex }): void\n   */\n  onRowsRendered: PropTypes.func,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, scrollHeight, scrollTop }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  overscanIndicesGetter: PropTypes.func.isRequired,\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  overscanRowCount: PropTypes.number.isRequired,\n\n  /**\n   * Optional CSS class to apply to all table rows (including the header row).\n   * This property can be a CSS class name (string) or a function that returns a class name.\n   * If a function is provided its signature should be: ({ index: number }): string\n   */\n  rowClassName: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n\n  /**\n   * Callback responsible for returning a data row given an index.\n   * ({ index: number }): any\n   */\n  rowGetter: PropTypes.func.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * ({ index: number }): number\n   */\n  rowHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n\n  /** Number of rows in table. */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: Array,\n   *   index: number,\n   *   isScrolling: boolean,\n   *   onRowClick: ?Function,\n   *   onRowDoubleClick: ?Function,\n   *   onRowMouseOver: ?Function,\n   *   onRowMouseOut: ?Function,\n   *   rowData: any,\n   *   style: any\n   * }): PropTypes.node\n   */\n  rowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table rows. */\n  rowStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n\n  /** See Grid#scrollToAlignment */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  scrollToIndex: PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Sort function to be called if a sortable header is clicked.\n   * Should implement the following interface: ({\n   *   defaultSortDirection: 'ASC' | 'DESC',\n   *   event: MouseEvent,\n   *   sortBy: string,\n   *   sortDirection: SortDirection\n   * }): void\n   */\n  sort: PropTypes.func,\n\n  /** Table data is currently sorted by this :dataKey (if it is sorted at all) */\n  sortBy: PropTypes.string,\n\n  /** Table data is currently sorted in this direction (if it is sorted at all) */\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** Optional inline style */\n  style: PropTypes.object,\n\n  /** Tab index for focus */\n  tabIndex: PropTypes.number,\n\n  /** Width of list */\n  width: PropTypes.number.isRequired\n} : {};\nimport { bpfrpt_proptype_CellPosition } from '../Grid';","map":{"version":3,"sources":["/home/nadaanbaalak/greendeck/client/node_modules/react-virtualized/dist/es/Table/Table.js"],"names":["_extends","_Object$getPrototypeOf","_classCallCheck","_createClass","_possibleConstructorReturn","_inherits","clsx","Column","PropTypes","React","findDOMNode","Grid","accessibilityOverscanIndicesGetter","defaultRowRenderer","defaultHeaderRowRenderer","SortDirection","Table","_React$PureComponent","props","_this","__proto__","call","state","scrollbarWidth","_createColumn","bind","_createRow","_onScroll","_onSectionRendered","_setRef","key","value","forceUpdateGrid","forceUpdate","getOffsetForRow","_ref","alignment","index","_Grid$getOffsetForCel","getOffsetForCell","rowIndex","scrollTop","invalidateCellSizeAfterRender","_ref2","columnIndex","measureAllRows","measureAllCells","recomputeGridSize","_ref3","arguments","length","undefined","_ref3$columnIndex","_ref3$rowIndex","recomputeRowHeights","scrollToPosition","scrollToRow","scrollToCell","getScrollbarWidth","_Grid","clientWidth","offsetWidth","componentDidMount","_setScrollbarWidth","componentDidUpdate","render","_this2","_props","children","className","disableHeader","gridClassName","gridStyle","headerHeight","headerRowRenderer","height","id","noRowsRenderer","rowClassName","rowStyle","scrollToIndex","style","width","availableRowsHeight","rowClass","rowStyleObject","_cachedColumnStyles","Children","toArray","forEach","column","flexStyles","_getFlexStyleForColumn","overflow","createElement","rowCount","role","columns","_getHeaderColumns","paddingRight","autoContainerWidth","cellRenderer","columnWidth","columnCount","noContentRenderer","onScroll","onSectionRendered","ref","overflowX","_ref4","isScrolling","parent","rowData","onColumnClick","_column$props","cellDataGetter","columnData","dataKey","cellData","renderedCell","onClick","event","title","_createHeader","_ref5","_props2","headerClassName","headerStyle","onHeaderClick","sort","sortBy","sortDirection","_column$props2","defaultSortDirection","disableSort","headerRenderer","label","sortEnabled","classNames","ReactVirtualized__Table__sortableHeaderColumn","renderedHeader","headerOnClick","headerOnKeyDown","headerTabIndex","headerAriaSort","headerAriaLabel","isFirstTimeSort","newSortDirection","DESC","ASC","onKeyDown","tabIndex","_ref6","_this3","_props3","onRowClick","onRowDoubleClick","onRowRightClick","onRowMouseOver","onRowMouseOut","rowGetter","rowRenderer","map","flattenedStyle","_getRowHeight","customStyle","flexValue","flexGrow","flexShrink","flex","msFlex","WebkitFlex","maxWidth","minWidth","_this4","_props4","items","rowHeight","_ref7","clientHeight","scrollHeight","_ref8","rowOverscanStartIndex","rowOverscanStopIndex","rowStartIndex","rowStopIndex","onRowsRendered","overscanStartIndex","overscanStopIndex","startIndex","stopIndex","setState","PureComponent","defaultProps","estimatedRowSize","overscanIndicesGetter","overscanRowCount","scrollToAlignment","propTypes","process","env","NODE_ENV","string","autoHeight","bool","i","childType","type","prototype","Error","number","isRequired","object","func","oneOfType","oneOf","bpfrpt_proptype_CellPosition"],"mappings":"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","sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\n\n\nimport clsx from 'clsx';\n\nimport Column from './Column';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\n\nimport defaultRowRenderer from './defaultRowRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer';\nimport SortDirection from './SortDirection';\n\n/**\n * Table component with fixed headers and virtualized rows for improved performance with large data sets.\n * This component expects explicit width, height, and padding parameters.\n */\n\nvar Table = function (_React$PureComponent) {\n  _inherits(Table, _React$PureComponent);\n\n  function Table(props) {\n    _classCallCheck(this, Table);\n\n    var _this = _possibleConstructorReturn(this, (Table.__proto__ || _Object$getPrototypeOf(Table)).call(this, props));\n\n    _this.state = {\n      scrollbarWidth: 0\n    };\n\n    _this._createColumn = _this._createColumn.bind(_this);\n    _this._createRow = _this._createRow.bind(_this);\n    _this._onScroll = _this._onScroll.bind(_this);\n    _this._onSectionRendered = _this._onSectionRendered.bind(_this);\n    _this._setRef = _this._setRef.bind(_this);\n    return _this;\n  }\n\n  _createClass(Table, [{\n    key: 'forceUpdateGrid',\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: 'getOffsetForRow',\n    value: function getOffsetForRow(_ref) {\n      var alignment = _ref.alignment,\n          index = _ref.index;\n\n      if (this.Grid) {\n        var _Grid$getOffsetForCel = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index\n        }),\n            scrollTop = _Grid$getOffsetForCel.scrollTop;\n\n        return scrollTop;\n      }\n      return 0;\n    }\n\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: 'invalidateCellSizeAfterRender',\n    value: function invalidateCellSizeAfterRender(_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: 'measureAllRows',\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: 'recomputeGridSize',\n    value: function recomputeGridSize() {\n      var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref3$columnIndex = _ref3.columnIndex,\n          columnIndex = _ref3$columnIndex === undefined ? 0 : _ref3$columnIndex,\n          _ref3$rowIndex = _ref3.rowIndex,\n          rowIndex = _ref3$rowIndex === undefined ? 0 : _ref3$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: 'recomputeRowHeights',\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index\n        });\n      }\n    }\n\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: 'scrollToPosition',\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({ scrollTop: scrollTop });\n      }\n    }\n\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: 'scrollToRow',\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: 'getScrollbarWidth',\n    value: function getScrollbarWidth() {\n      if (this.Grid) {\n        var _Grid = findDOMNode(this.Grid);\n        var clientWidth = _Grid.clientWidth || 0;\n        var offsetWidth = _Grid.offsetWidth || 0;\n        return offsetWidth - clientWidth;\n      }\n\n      return 0;\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          children = _props.children,\n          className = _props.className,\n          disableHeader = _props.disableHeader,\n          gridClassName = _props.gridClassName,\n          gridStyle = _props.gridStyle,\n          headerHeight = _props.headerHeight,\n          headerRowRenderer = _props.headerRowRenderer,\n          height = _props.height,\n          id = _props.id,\n          noRowsRenderer = _props.noRowsRenderer,\n          rowClassName = _props.rowClassName,\n          rowStyle = _props.rowStyle,\n          scrollToIndex = _props.scrollToIndex,\n          style = _props.style,\n          width = _props.width;\n      var scrollbarWidth = this.state.scrollbarWidth;\n\n\n      var availableRowsHeight = disableHeader ? height : height - headerHeight;\n\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({ index: -1 }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({ index: -1 }) : rowStyle;\n\n      // Precompute and cache column styles before rendering rows and columns to speed things up\n      this._cachedColumnStyles = [];\n      React.Children.toArray(children).forEach(function (column, index) {\n        var flexStyles = _this2._getFlexStyleForColumn(column, column.props.style);\n\n        _this2._cachedColumnStyles[index] = _extends({\n          overflow: 'hidden'\n        }, flexStyles);\n      });\n\n      // Note that we specify :rowCount, :scrollbarWidth, :sortBy, and :sortDirection as properties on Grid even though these have nothing to do with Grid.\n      // This is done because Grid is a pure component and won't update unless its properties or state has changed.\n      // Any property that should trigger a re-render of Grid then is specified here to avoid a stale display.\n      return React.createElement(\n        'div',\n        {\n          'aria-label': this.props['aria-label'],\n          'aria-labelledby': this.props['aria-labelledby'],\n          'aria-colcount': React.Children.toArray(children).length,\n          'aria-rowcount': this.props.rowCount,\n          className: clsx('ReactVirtualized__Table', className),\n          id: id,\n          role: 'grid',\n          style: style },\n        !disableHeader && headerRowRenderer({\n          className: clsx('ReactVirtualized__Table__headerRow', rowClass),\n          columns: this._getHeaderColumns(),\n          style: _extends({\n            height: headerHeight,\n            overflow: 'hidden',\n            paddingRight: scrollbarWidth,\n            width: width\n          }, rowStyleObject)\n        }),\n        React.createElement(Grid, _extends({}, this.props, {\n          'aria-readonly': null,\n          autoContainerWidth: true,\n          className: clsx('ReactVirtualized__Table__Grid', gridClassName),\n          cellRenderer: this._createRow,\n          columnWidth: width,\n          columnCount: 1,\n          height: availableRowsHeight,\n          id: undefined,\n          noContentRenderer: noRowsRenderer,\n          onScroll: this._onScroll,\n          onSectionRendered: this._onSectionRendered,\n          ref: this._setRef,\n          role: 'rowgroup',\n          scrollbarWidth: scrollbarWidth,\n          scrollToRow: scrollToIndex,\n          style: _extends({}, gridStyle, {\n            overflowX: 'hidden'\n          })\n        }))\n      );\n    }\n  }, {\n    key: '_createColumn',\n    value: function _createColumn(_ref4) {\n      var column = _ref4.column,\n          columnIndex = _ref4.columnIndex,\n          isScrolling = _ref4.isScrolling,\n          parent = _ref4.parent,\n          rowData = _ref4.rowData,\n          rowIndex = _ref4.rowIndex;\n      var onColumnClick = this.props.onColumnClick;\n      var _column$props = column.props,\n          cellDataGetter = _column$props.cellDataGetter,\n          cellRenderer = _column$props.cellRenderer,\n          className = _column$props.className,\n          columnData = _column$props.columnData,\n          dataKey = _column$props.dataKey,\n          id = _column$props.id;\n\n\n      var cellData = cellDataGetter({ columnData: columnData, dataKey: dataKey, rowData: rowData });\n      var renderedCell = cellRenderer({\n        cellData: cellData,\n        columnData: columnData,\n        columnIndex: columnIndex,\n        dataKey: dataKey,\n        isScrolling: isScrolling,\n        parent: parent,\n        rowData: rowData,\n        rowIndex: rowIndex\n      });\n\n      var onClick = function onClick(event) {\n        onColumnClick && onColumnClick({ columnData: columnData, dataKey: dataKey, event: event });\n      };\n\n      var style = this._cachedColumnStyles[columnIndex];\n\n      var title = typeof renderedCell === 'string' ? renderedCell : null;\n\n      // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n      return React.createElement(\n        'div',\n        {\n          'aria-colindex': columnIndex + 1,\n          'aria-describedby': id,\n          className: clsx('ReactVirtualized__Table__rowColumn', className),\n          key: 'Row' + rowIndex + '-' + 'Col' + columnIndex,\n          onClick: onClick,\n          role: 'gridcell',\n          style: style,\n          title: title },\n        renderedCell\n      );\n    }\n  }, {\n    key: '_createHeader',\n    value: function _createHeader(_ref5) {\n      var column = _ref5.column,\n          index = _ref5.index;\n      var _props2 = this.props,\n          headerClassName = _props2.headerClassName,\n          headerStyle = _props2.headerStyle,\n          onHeaderClick = _props2.onHeaderClick,\n          sort = _props2.sort,\n          sortBy = _props2.sortBy,\n          sortDirection = _props2.sortDirection;\n      var _column$props2 = column.props,\n          columnData = _column$props2.columnData,\n          dataKey = _column$props2.dataKey,\n          defaultSortDirection = _column$props2.defaultSortDirection,\n          disableSort = _column$props2.disableSort,\n          headerRenderer = _column$props2.headerRenderer,\n          id = _column$props2.id,\n          label = _column$props2.label;\n\n      var sortEnabled = !disableSort && sort;\n\n      var classNames = clsx('ReactVirtualized__Table__headerColumn', headerClassName, column.props.headerClassName, {\n        ReactVirtualized__Table__sortableHeaderColumn: sortEnabled\n      });\n      var style = this._getFlexStyleForColumn(column, _extends({}, headerStyle, column.props.headerStyle));\n\n      var renderedHeader = headerRenderer({\n        columnData: columnData,\n        dataKey: dataKey,\n        disableSort: disableSort,\n        label: label,\n        sortBy: sortBy,\n        sortDirection: sortDirection\n      });\n\n      var headerOnClick = void 0,\n          headerOnKeyDown = void 0,\n          headerTabIndex = void 0,\n          headerAriaSort = void 0,\n          headerAriaLabel = void 0;\n\n      if (sortEnabled || onHeaderClick) {\n        // If this is a sortable header, clicking it should update the table data's sorting.\n        var isFirstTimeSort = sortBy !== dataKey;\n\n        // If this is the firstTime sort of this column, use the column default sort order.\n        // Otherwise, invert the direction of the sort.\n        var newSortDirection = isFirstTimeSort ? defaultSortDirection : sortDirection === SortDirection.DESC ? SortDirection.ASC : SortDirection.DESC;\n\n        var onClick = function onClick(event) {\n          sortEnabled && sort({\n            defaultSortDirection: defaultSortDirection,\n            event: event,\n            sortBy: dataKey,\n            sortDirection: newSortDirection\n          });\n          onHeaderClick && onHeaderClick({ columnData: columnData, dataKey: dataKey, event: event });\n        };\n\n        var onKeyDown = function onKeyDown(event) {\n          if (event.key === 'Enter' || event.key === ' ') {\n            onClick(event);\n          }\n        };\n\n        headerAriaLabel = column.props['aria-label'] || label || dataKey;\n        headerAriaSort = 'none';\n        headerTabIndex = 0;\n        headerOnClick = onClick;\n        headerOnKeyDown = onKeyDown;\n      }\n\n      if (sortBy === dataKey) {\n        headerAriaSort = sortDirection === SortDirection.ASC ? 'ascending' : 'descending';\n      }\n\n      // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n      return React.createElement(\n        'div',\n        {\n          'aria-label': headerAriaLabel,\n          'aria-sort': headerAriaSort,\n          className: classNames,\n          id: id,\n          key: 'Header-Col' + index,\n          onClick: headerOnClick,\n          onKeyDown: headerOnKeyDown,\n          role: 'columnheader',\n          style: style,\n          tabIndex: headerTabIndex },\n        renderedHeader\n      );\n    }\n  }, {\n    key: '_createRow',\n    value: function _createRow(_ref6) {\n      var _this3 = this;\n\n      var index = _ref6.rowIndex,\n          isScrolling = _ref6.isScrolling,\n          key = _ref6.key,\n          parent = _ref6.parent,\n          style = _ref6.style;\n      var _props3 = this.props,\n          children = _props3.children,\n          onRowClick = _props3.onRowClick,\n          onRowDoubleClick = _props3.onRowDoubleClick,\n          onRowRightClick = _props3.onRowRightClick,\n          onRowMouseOver = _props3.onRowMouseOver,\n          onRowMouseOut = _props3.onRowMouseOut,\n          rowClassName = _props3.rowClassName,\n          rowGetter = _props3.rowGetter,\n          rowRenderer = _props3.rowRenderer,\n          rowStyle = _props3.rowStyle;\n      var scrollbarWidth = this.state.scrollbarWidth;\n\n\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({ index: index }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({ index: index }) : rowStyle;\n      var rowData = rowGetter({ index: index });\n\n      var columns = React.Children.toArray(children).map(function (column, columnIndex) {\n        return _this3._createColumn({\n          column: column,\n          columnIndex: columnIndex,\n          isScrolling: isScrolling,\n          parent: parent,\n          rowData: rowData,\n          rowIndex: index,\n          scrollbarWidth: scrollbarWidth\n        });\n      });\n\n      var className = clsx('ReactVirtualized__Table__row', rowClass);\n      var flattenedStyle = _extends({}, style, {\n        height: this._getRowHeight(index),\n        overflow: 'hidden',\n        paddingRight: scrollbarWidth\n      }, rowStyleObject);\n\n      return rowRenderer({\n        className: className,\n        columns: columns,\n        index: index,\n        isScrolling: isScrolling,\n        key: key,\n        onRowClick: onRowClick,\n        onRowDoubleClick: onRowDoubleClick,\n        onRowRightClick: onRowRightClick,\n        onRowMouseOver: onRowMouseOver,\n        onRowMouseOut: onRowMouseOut,\n        rowData: rowData,\n        style: flattenedStyle\n      });\n    }\n\n    /**\n     * Determines the flex-shrink, flex-grow, and width values for a cell (header or column).\n     */\n\n  }, {\n    key: '_getFlexStyleForColumn',\n    value: function _getFlexStyleForColumn(column) {\n      var customStyle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      var flexValue = column.props.flexGrow + ' ' + column.props.flexShrink + ' ' + column.props.width + 'px';\n\n      var style = _extends({}, customStyle, {\n        flex: flexValue,\n        msFlex: flexValue,\n        WebkitFlex: flexValue\n      });\n\n      if (column.props.maxWidth) {\n        style.maxWidth = column.props.maxWidth;\n      }\n\n      if (column.props.minWidth) {\n        style.minWidth = column.props.minWidth;\n      }\n\n      return style;\n    }\n  }, {\n    key: '_getHeaderColumns',\n    value: function _getHeaderColumns() {\n      var _this4 = this;\n\n      var _props4 = this.props,\n          children = _props4.children,\n          disableHeader = _props4.disableHeader;\n\n      var items = disableHeader ? [] : React.Children.toArray(children);\n\n      return items.map(function (column, index) {\n        return _this4._createHeader({ column: column, index: index });\n      });\n    }\n  }, {\n    key: '_getRowHeight',\n    value: function _getRowHeight(rowIndex) {\n      var rowHeight = this.props.rowHeight;\n\n\n      return typeof rowHeight === 'function' ? rowHeight({ index: rowIndex }) : rowHeight;\n    }\n  }, {\n    key: '_onScroll',\n    value: function _onScroll(_ref7) {\n      var clientHeight = _ref7.clientHeight,\n          scrollHeight = _ref7.scrollHeight,\n          scrollTop = _ref7.scrollTop;\n      var onScroll = this.props.onScroll;\n\n\n      onScroll({ clientHeight: clientHeight, scrollHeight: scrollHeight, scrollTop: scrollTop });\n    }\n  }, {\n    key: '_onSectionRendered',\n    value: function _onSectionRendered(_ref8) {\n      var rowOverscanStartIndex = _ref8.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref8.rowOverscanStopIndex,\n          rowStartIndex = _ref8.rowStartIndex,\n          rowStopIndex = _ref8.rowStopIndex;\n      var onRowsRendered = this.props.onRowsRendered;\n\n\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    }\n  }, {\n    key: '_setRef',\n    value: function _setRef(ref) {\n      this.Grid = ref;\n    }\n  }, {\n    key: '_setScrollbarWidth',\n    value: function _setScrollbarWidth() {\n      var scrollbarWidth = this.getScrollbarWidth();\n\n      this.setState({ scrollbarWidth: scrollbarWidth });\n    }\n  }]);\n\n  return Table;\n}(React.PureComponent);\n\nTable.defaultProps = {\n  disableHeader: false,\n  estimatedRowSize: 30,\n  headerHeight: 0,\n  headerStyle: {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  rowRenderer: defaultRowRenderer,\n  headerRowRenderer: defaultHeaderRowRenderer,\n  rowStyle: {},\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n};\nexport default Table;\nTable.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** This is just set on the grid top element. */\n  'aria-label': PropTypes.string,\n\n  /** This is just set on the grid top element. */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /** One or more Columns describing the data displayed in this row */\n  children: function children(props) {\n    var children = React.Children.toArray(props.children);\n    for (var i = 0; i < children.length; i++) {\n      var childType = children[i].type;\n      if (childType !== Column && !(childType.prototype instanceof Column)) {\n        return new Error('Table only accepts children of type Column');\n      }\n    }\n  },\n\n  /** Optional CSS class name */\n  className: PropTypes.string,\n\n  /** Disable rendering the header at all */\n  disableHeader: PropTypes.bool,\n\n  /**\n   * Used to estimate the total height of a Table before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  estimatedRowSize: PropTypes.number.isRequired,\n\n  /** Optional custom CSS class name to attach to inner Grid element. */\n  gridClassName: PropTypes.string,\n\n  /** Optional inline style to attach to inner Grid element. */\n  gridStyle: PropTypes.object,\n\n  /** Optional CSS class to apply to all column headers */\n  headerClassName: PropTypes.string,\n\n  /** Fixed height of header row */\n  headerHeight: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: any[],\n   *   style: any\n   * }): PropTypes.node\n   */\n  headerRowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table header columns. */\n  headerStyle: PropTypes.object,\n\n  /** Fixed/available height for out DOM element */\n  height: PropTypes.number.isRequired,\n\n  /** Optional id */\n  id: PropTypes.string,\n\n  /** Optional renderer to be used in place of table body rows when rowCount is 0 */\n  noRowsRenderer: PropTypes.func,\n\n  /**\n   * Optional callback when a column is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onColumnClick: PropTypes.func,\n\n  /**\n   * Optional callback when a column's header is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onHeaderClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user double-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowDoubleClick: PropTypes.func,\n\n  /**\n   * Callback invoked when the mouse leaves a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOut: PropTypes.func,\n\n  /**\n   * Callback invoked when a user moves the mouse over a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOver: PropTypes.func,\n\n  /**\n   * Callback invoked when a user right-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowRightClick: PropTypes.func,\n\n  /**\n   * Callback invoked with information about the slice of rows that were just rendered.\n   * ({ startIndex, stopIndex }): void\n   */\n  onRowsRendered: PropTypes.func,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, scrollHeight, scrollTop }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  overscanIndicesGetter: PropTypes.func.isRequired,\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  overscanRowCount: PropTypes.number.isRequired,\n\n  /**\n   * Optional CSS class to apply to all table rows (including the header row).\n   * This property can be a CSS class name (string) or a function that returns a class name.\n   * If a function is provided its signature should be: ({ index: number }): string\n   */\n  rowClassName: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n\n  /**\n   * Callback responsible for returning a data row given an index.\n   * ({ index: number }): any\n   */\n  rowGetter: PropTypes.func.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * ({ index: number }): number\n   */\n  rowHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n\n  /** Number of rows in table. */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: Array,\n   *   index: number,\n   *   isScrolling: boolean,\n   *   onRowClick: ?Function,\n   *   onRowDoubleClick: ?Function,\n   *   onRowMouseOver: ?Function,\n   *   onRowMouseOut: ?Function,\n   *   rowData: any,\n   *   style: any\n   * }): PropTypes.node\n   */\n  rowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table rows. */\n  rowStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n\n  /** See Grid#scrollToAlignment */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  scrollToIndex: PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Sort function to be called if a sortable header is clicked.\n   * Should implement the following interface: ({\n   *   defaultSortDirection: 'ASC' | 'DESC',\n   *   event: MouseEvent,\n   *   sortBy: string,\n   *   sortDirection: SortDirection\n   * }): void\n   */\n  sort: PropTypes.func,\n\n  /** Table data is currently sorted by this :dataKey (if it is sorted at all) */\n  sortBy: PropTypes.string,\n\n  /** Table data is currently sorted in this direction (if it is sorted at all) */\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** Optional inline style */\n  style: PropTypes.object,\n\n  /** Tab index for focus */\n  tabIndex: PropTypes.number,\n\n  /** Width of list */\n  width: PropTypes.number.isRequired\n} : {};\nimport { bpfrpt_proptype_CellPosition } from '../Grid';"]},"metadata":{},"sourceType":"module"}