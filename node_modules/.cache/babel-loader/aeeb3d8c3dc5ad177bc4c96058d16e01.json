{"ast":null,"code":"/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport dateMath from '@elastic/datemath';\nimport moment from 'moment'; // eslint-disable-line import/named\n\nimport { timeUnits, timeUnitsPlural } from './time_units';\nimport { getDateMode, DATE_MODES } from './date_modes';\nimport { parseRelativeParts } from './relative_utils';\nvar ISO_FORMAT = 'YYYY-MM-DDTHH:mm:ss.SSSZ';\nexport var commonDurationRanges = [{\n  start: 'now/d',\n  end: 'now/d',\n  label: 'Today'\n}, {\n  start: 'now/w',\n  end: 'now/w',\n  label: 'This week'\n}, {\n  start: 'now/M',\n  end: 'now/M',\n  label: 'This month'\n}, {\n  start: 'now/y',\n  end: 'now/y',\n  label: 'This year'\n}, {\n  start: 'now-1d/d',\n  end: 'now-1d/d',\n  label: 'Yesterday'\n}, {\n  start: 'now/w',\n  end: 'now',\n  label: 'Week to date'\n}, {\n  start: 'now/M',\n  end: 'now',\n  label: 'Month to date'\n}, {\n  start: 'now/y',\n  end: 'now',\n  label: 'Year to date'\n}];\n\nfunction cantLookup(timeFrom, timeTo, dateFormat) {\n  var displayFrom = formatTimeString(timeFrom, dateFormat);\n  var displayTo = formatTimeString(timeTo, dateFormat, true);\n  return \"\".concat(displayFrom, \" to \").concat(displayTo);\n}\n\nfunction isRelativeToNow(timeFrom, timeTo) {\n  var fromDateMode = getDateMode(timeFrom);\n  var toDateMode = getDateMode(timeTo);\n  var isLast = fromDateMode === DATE_MODES.RELATIVE && toDateMode === DATE_MODES.NOW;\n  var isNext = fromDateMode === DATE_MODES.NOW && toDateMode === DATE_MODES.RELATIVE;\n  return isLast || isNext;\n}\n\nexport function formatTimeString(timeString, dateFormat) {\n  var roundUp = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var locale = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'en';\n  var timeAsMoment = moment(timeString, ISO_FORMAT, true);\n\n  if (timeAsMoment.isValid()) {\n    return timeAsMoment.locale(locale).format(dateFormat);\n  }\n\n  if (timeString === 'now') {\n    return 'now';\n  }\n\n  var tryParse = dateMath.parse(timeString, {\n    roundUp: roundUp\n  });\n\n  if (moment.isMoment(tryParse)) {\n    return \"~ \".concat(tryParse.locale(locale).fromNow());\n  }\n\n  return timeString;\n}\nexport function prettyDuration(timeFrom, timeTo) {\n  var quickRanges = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var dateFormat = arguments.length > 3 ? arguments[3] : undefined;\n  var matchingQuickRange = quickRanges.find(function (_ref) {\n    var quickFrom = _ref.start,\n        quickTo = _ref.end;\n    return timeFrom === quickFrom && timeTo === quickTo;\n  });\n\n  if (matchingQuickRange && matchingQuickRange.label) {\n    return matchingQuickRange.label;\n  }\n\n  if (isRelativeToNow(timeFrom, timeTo)) {\n    var timeTense;\n    var relativeParts;\n\n    if (getDateMode(timeTo) === DATE_MODES.NOW) {\n      timeTense = 'Last';\n      relativeParts = parseRelativeParts(timeFrom);\n    } else {\n      timeTense = 'Next';\n      relativeParts = parseRelativeParts(timeTo);\n    }\n\n    var countTimeUnit = relativeParts.unit.substring(0, 1);\n    var countTimeUnitFullName = relativeParts.count > 1 ? timeUnitsPlural[countTimeUnit] : timeUnits[countTimeUnit];\n    var text = \"\".concat(timeTense, \" \").concat(relativeParts.count, \" \").concat(countTimeUnitFullName);\n\n    if (relativeParts.round && relativeParts.roundUnit) {\n      text += \" rounded to the \".concat(timeUnits[relativeParts.roundUnit]);\n    }\n\n    return text;\n  }\n\n  return cantLookup(timeFrom, timeTo, dateFormat);\n}\nexport function showPrettyDuration(timeFrom, timeTo) {\n  var quickRanges = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var matchingQuickRange = quickRanges.find(function (_ref2) {\n    var quickFrom = _ref2.start,\n        quickTo = _ref2.end;\n    return timeFrom === quickFrom && timeTo === quickTo;\n  });\n\n  if (matchingQuickRange) {\n    return true;\n  }\n\n  return isRelativeToNow(timeFrom, timeTo);\n}","map":{"version":3,"sources":["/home/nadaanbaalak/greendeck/client/node_modules/@elastic/eui/es/components/date_picker/super_date_picker/pretty_duration.js"],"names":["dateMath","moment","timeUnits","timeUnitsPlural","getDateMode","DATE_MODES","parseRelativeParts","ISO_FORMAT","commonDurationRanges","start","end","label","cantLookup","timeFrom","timeTo","dateFormat","displayFrom","formatTimeString","displayTo","concat","isRelativeToNow","fromDateMode","toDateMode","isLast","RELATIVE","NOW","isNext","timeString","roundUp","arguments","length","undefined","locale","timeAsMoment","isValid","format","tryParse","parse","isMoment","fromNow","prettyDuration","quickRanges","matchingQuickRange","find","_ref","quickFrom","quickTo","timeTense","relativeParts","countTimeUnit","unit","substring","countTimeUnitFullName","count","text","round","roundUnit","showPrettyDuration","_ref2"],"mappings":"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","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport dateMath from '@elastic/datemath';\nimport moment from 'moment'; // eslint-disable-line import/named\n\nimport { timeUnits, timeUnitsPlural } from './time_units';\nimport { getDateMode, DATE_MODES } from './date_modes';\nimport { parseRelativeParts } from './relative_utils';\nvar ISO_FORMAT = 'YYYY-MM-DDTHH:mm:ss.SSSZ';\nexport var commonDurationRanges = [{\n  start: 'now/d',\n  end: 'now/d',\n  label: 'Today'\n}, {\n  start: 'now/w',\n  end: 'now/w',\n  label: 'This week'\n}, {\n  start: 'now/M',\n  end: 'now/M',\n  label: 'This month'\n}, {\n  start: 'now/y',\n  end: 'now/y',\n  label: 'This year'\n}, {\n  start: 'now-1d/d',\n  end: 'now-1d/d',\n  label: 'Yesterday'\n}, {\n  start: 'now/w',\n  end: 'now',\n  label: 'Week to date'\n}, {\n  start: 'now/M',\n  end: 'now',\n  label: 'Month to date'\n}, {\n  start: 'now/y',\n  end: 'now',\n  label: 'Year to date'\n}];\n\nfunction cantLookup(timeFrom, timeTo, dateFormat) {\n  var displayFrom = formatTimeString(timeFrom, dateFormat);\n  var displayTo = formatTimeString(timeTo, dateFormat, true);\n  return \"\".concat(displayFrom, \" to \").concat(displayTo);\n}\n\nfunction isRelativeToNow(timeFrom, timeTo) {\n  var fromDateMode = getDateMode(timeFrom);\n  var toDateMode = getDateMode(timeTo);\n  var isLast = fromDateMode === DATE_MODES.RELATIVE && toDateMode === DATE_MODES.NOW;\n  var isNext = fromDateMode === DATE_MODES.NOW && toDateMode === DATE_MODES.RELATIVE;\n  return isLast || isNext;\n}\n\nexport function formatTimeString(timeString, dateFormat) {\n  var roundUp = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var locale = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'en';\n  var timeAsMoment = moment(timeString, ISO_FORMAT, true);\n\n  if (timeAsMoment.isValid()) {\n    return timeAsMoment.locale(locale).format(dateFormat);\n  }\n\n  if (timeString === 'now') {\n    return 'now';\n  }\n\n  var tryParse = dateMath.parse(timeString, {\n    roundUp: roundUp\n  });\n\n  if (moment.isMoment(tryParse)) {\n    return \"~ \".concat(tryParse.locale(locale).fromNow());\n  }\n\n  return timeString;\n}\nexport function prettyDuration(timeFrom, timeTo) {\n  var quickRanges = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var dateFormat = arguments.length > 3 ? arguments[3] : undefined;\n  var matchingQuickRange = quickRanges.find(function (_ref) {\n    var quickFrom = _ref.start,\n        quickTo = _ref.end;\n    return timeFrom === quickFrom && timeTo === quickTo;\n  });\n\n  if (matchingQuickRange && matchingQuickRange.label) {\n    return matchingQuickRange.label;\n  }\n\n  if (isRelativeToNow(timeFrom, timeTo)) {\n    var timeTense;\n    var relativeParts;\n\n    if (getDateMode(timeTo) === DATE_MODES.NOW) {\n      timeTense = 'Last';\n      relativeParts = parseRelativeParts(timeFrom);\n    } else {\n      timeTense = 'Next';\n      relativeParts = parseRelativeParts(timeTo);\n    }\n\n    var countTimeUnit = relativeParts.unit.substring(0, 1);\n    var countTimeUnitFullName = relativeParts.count > 1 ? timeUnitsPlural[countTimeUnit] : timeUnits[countTimeUnit];\n    var text = \"\".concat(timeTense, \" \").concat(relativeParts.count, \" \").concat(countTimeUnitFullName);\n\n    if (relativeParts.round && relativeParts.roundUnit) {\n      text += \" rounded to the \".concat(timeUnits[relativeParts.roundUnit]);\n    }\n\n    return text;\n  }\n\n  return cantLookup(timeFrom, timeTo, dateFormat);\n}\nexport function showPrettyDuration(timeFrom, timeTo) {\n  var quickRanges = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var matchingQuickRange = quickRanges.find(function (_ref2) {\n    var quickFrom = _ref2.start,\n        quickTo = _ref2.end;\n    return timeFrom === quickFrom && timeTo === quickTo;\n  });\n\n  if (matchingQuickRange) {\n    return true;\n  }\n\n  return isRelativeToNow(timeFrom, timeTo);\n}"]},"metadata":{},"sourceType":"module"}