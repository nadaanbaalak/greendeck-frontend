{"ast":null,"code":"function _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nimport PropTypes from \"prop-types\";\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\nimport { useCallback, useEffect, useState } from 'react';\nexport function useInnerText(innerTextFallback) {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      ref = _useState2[0],\n      setRef = _useState2[1];\n\n  var _useState3 = useState(innerTextFallback),\n      _useState4 = _slicedToArray(_useState3, 2),\n      innerText = _useState4[0],\n      setInnerText = _useState4[1];\n\n  var updateInnerText = useCallback(function (node) {\n    if (!node) return;\n    setInnerText( // Check for `innerText` implementation rather than a simple OR check\n    // because in real cases the result of `innerText` could correctly be `null`\n    // while the result of `textContent` could correctly be non-`null` due to\n    // differing reliance on browser layout calculations.\n    // We prefer the result of `innerText`, if available.\n    'innerText' in node ? node.innerText : node.textContent || innerTextFallback);\n  }, [innerTextFallback]);\n  useEffect(function () {\n    var observer = new MutationObserver(function (mutationsList) {\n      if (mutationsList.length) updateInnerText(ref);\n    });\n\n    if (ref) {\n      updateInnerText(ref);\n      observer.observe(ref, {\n        characterData: true,\n        subtree: true,\n        childList: true\n      });\n    }\n\n    return function () {\n      observer.disconnect();\n    };\n  }, [ref, updateInnerText]);\n  return [setRef, innerText];\n}\nexport var EuiInnerText = function EuiInnerText(_ref) {\n  var children = _ref.children,\n      fallback = _ref.fallback;\n\n  var _useInnerText = useInnerText(fallback),\n      _useInnerText2 = _slicedToArray(_useInnerText, 2),\n      ref = _useInnerText2[0],\n      innerText = _useInnerText2[1];\n\n  return children(ref, innerText);\n};\nEuiInnerText.propTypes = {\n  children: PropTypes.func.isRequired,\n  fallback: PropTypes.string\n};","map":{"version":3,"sources":["/home/nadaanbaalak/greendeck/client/node_modules/@elastic/eui/es/components/inner_text/inner_text.js"],"names":["_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","PropTypes","TypeError","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_i","_s","next","done","push","value","length","err","Array","isArray","useCallback","useEffect","useState","useInnerText","innerTextFallback","_useState","_useState2","ref","setRef","_useState3","_useState4","innerText","setInnerText","updateInnerText","node","textContent","observer","MutationObserver","mutationsList","observe","characterData","subtree","childList","disconnect","EuiInnerText","_ref","children","fallback","_useInnerText","_useInnerText2","propTypes","func","isRequired","string"],"mappings":"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","sourcesContent":["function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nimport PropTypes from \"prop-types\";\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useCallback, useEffect, useState } from 'react';\nexport function useInnerText(innerTextFallback) {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      ref = _useState2[0],\n      setRef = _useState2[1];\n\n  var _useState3 = useState(innerTextFallback),\n      _useState4 = _slicedToArray(_useState3, 2),\n      innerText = _useState4[0],\n      setInnerText = _useState4[1];\n\n  var updateInnerText = useCallback(function (node) {\n    if (!node) return;\n    setInnerText( // Check for `innerText` implementation rather than a simple OR check\n    // because in real cases the result of `innerText` could correctly be `null`\n    // while the result of `textContent` could correctly be non-`null` due to\n    // differing reliance on browser layout calculations.\n    // We prefer the result of `innerText`, if available.\n    'innerText' in node ? node.innerText : node.textContent || innerTextFallback);\n  }, [innerTextFallback]);\n  useEffect(function () {\n    var observer = new MutationObserver(function (mutationsList) {\n      if (mutationsList.length) updateInnerText(ref);\n    });\n\n    if (ref) {\n      updateInnerText(ref);\n      observer.observe(ref, {\n        characterData: true,\n        subtree: true,\n        childList: true\n      });\n    }\n\n    return function () {\n      observer.disconnect();\n    };\n  }, [ref, updateInnerText]);\n  return [setRef, innerText];\n}\nexport var EuiInnerText = function EuiInnerText(_ref) {\n  var children = _ref.children,\n      fallback = _ref.fallback;\n\n  var _useInnerText = useInnerText(fallback),\n      _useInnerText2 = _slicedToArray(_useInnerText, 2),\n      ref = _useInnerText2[0],\n      innerText = _useInnerText2[1];\n\n  return children(ref, innerText);\n};\nEuiInnerText.propTypes = {\n  children: PropTypes.func.isRequired,\n  fallback: PropTypes.string\n};"]},"metadata":{},"sourceType":"module"}