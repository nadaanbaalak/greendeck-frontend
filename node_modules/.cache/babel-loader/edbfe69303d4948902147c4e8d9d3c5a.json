{"ast":null,"code":"/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nfunction createHiddenTextElement(text) {\n  var textElement = document.createElement('span');\n  textElement.textContent = text; // @ts-ignore .all is a real property - https://drafts.csswg.org/css-cascade/#all-shorthand\n\n  textElement.style.all = 'unset'; // prevents scrolling to the end of the page\n\n  textElement.style.position = 'fixed';\n  textElement.style.top = '0';\n  textElement.style.clip = 'rect(0, 0, 0, 0)'; // used to preserve spaces and line breaks\n\n  textElement.style.whiteSpace = 'pre'; // do not inherit user-select (it may be `none`)\n\n  textElement.style.webkitUserSelect = 'text'; // @ts-ignore this one doesn't appear in the TS definitions for some reason\n\n  textElement.style.MozUserSelect = 'text';\n  textElement.style.msUserSelect = 'text';\n  textElement.style.userSelect = 'text';\n  return textElement;\n}\n\nexport function copyToClipboard(text) {\n  var isCopied = true;\n  var range = document.createRange();\n  var selection = window.getSelection();\n  var elementToBeCopied = createHiddenTextElement(text);\n  document.body.appendChild(elementToBeCopied);\n  range.selectNode(elementToBeCopied);\n\n  if (selection) {\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n\n  if (!document.execCommand('copy')) {\n    isCopied = false; // tslint:disable-next-line:no-console\n\n    console.warn('Unable to copy to clipboard.');\n  }\n\n  if (selection) {\n    if (typeof selection.removeRange === 'function') {\n      selection.removeRange(range);\n    } else {\n      selection.removeAllRanges();\n    }\n  }\n\n  document.body.removeChild(elementToBeCopied);\n  return isCopied;\n}","map":{"version":3,"sources":["/home/nadaanbaalak/greendeck/client/node_modules/@elastic/eui/es/services/copy_to_clipboard.js"],"names":["createHiddenTextElement","text","textElement","document","createElement","textContent","style","all","position","top","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","copyToClipboard","isCopied","range","createRange","selection","window","getSelection","elementToBeCopied","body","appendChild","selectNode","removeAllRanges","addRange","execCommand","console","warn","removeRange","removeChild"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAkBA,SAASA,uBAAT,CAAiCC,IAAjC,EAAuC;AACrC,MAAIC,WAAW,GAAGC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAlB;AACAF,EAAAA,WAAW,CAACG,WAAZ,GAA0BJ,IAA1B,CAFqC,CAEL;;AAEhCC,EAAAA,WAAW,CAACI,KAAZ,CAAkBC,GAAlB,GAAwB,OAAxB,CAJqC,CAIJ;;AAEjCL,EAAAA,WAAW,CAACI,KAAZ,CAAkBE,QAAlB,GAA6B,OAA7B;AACAN,EAAAA,WAAW,CAACI,KAAZ,CAAkBG,GAAlB,GAAwB,GAAxB;AACAP,EAAAA,WAAW,CAACI,KAAZ,CAAkBI,IAAlB,GAAyB,kBAAzB,CARqC,CAQQ;;AAE7CR,EAAAA,WAAW,CAACI,KAAZ,CAAkBK,UAAlB,GAA+B,KAA/B,CAVqC,CAUC;;AAEtCT,EAAAA,WAAW,CAACI,KAAZ,CAAkBM,gBAAlB,GAAqC,MAArC,CAZqC,CAYQ;;AAE7CV,EAAAA,WAAW,CAACI,KAAZ,CAAkBO,aAAlB,GAAkC,MAAlC;AACAX,EAAAA,WAAW,CAACI,KAAZ,CAAkBQ,YAAlB,GAAiC,MAAjC;AACAZ,EAAAA,WAAW,CAACI,KAAZ,CAAkBS,UAAlB,GAA+B,MAA/B;AACA,SAAOb,WAAP;AACD;;AAED,OAAO,SAASc,eAAT,CAAyBf,IAAzB,EAA+B;AACpC,MAAIgB,QAAQ,GAAG,IAAf;AACA,MAAIC,KAAK,GAAGf,QAAQ,CAACgB,WAAT,EAAZ;AACA,MAAIC,SAAS,GAAGC,MAAM,CAACC,YAAP,EAAhB;AACA,MAAIC,iBAAiB,GAAGvB,uBAAuB,CAACC,IAAD,CAA/C;AACAE,EAAAA,QAAQ,CAACqB,IAAT,CAAcC,WAAd,CAA0BF,iBAA1B;AACAL,EAAAA,KAAK,CAACQ,UAAN,CAAiBH,iBAAjB;;AAEA,MAAIH,SAAJ,EAAe;AACbA,IAAAA,SAAS,CAACO,eAAV;AACAP,IAAAA,SAAS,CAACQ,QAAV,CAAmBV,KAAnB;AACD;;AAED,MAAI,CAACf,QAAQ,CAAC0B,WAAT,CAAqB,MAArB,CAAL,EAAmC;AACjCZ,IAAAA,QAAQ,GAAG,KAAX,CADiC,CACf;;AAElBa,IAAAA,OAAO,CAACC,IAAR,CAAa,8BAAb;AACD;;AAED,MAAIX,SAAJ,EAAe;AACb,QAAI,OAAOA,SAAS,CAACY,WAAjB,KAAiC,UAArC,EAAiD;AAC/CZ,MAAAA,SAAS,CAACY,WAAV,CAAsBd,KAAtB;AACD,KAFD,MAEO;AACLE,MAAAA,SAAS,CAACO,eAAV;AACD;AACF;;AAEDxB,EAAAA,QAAQ,CAACqB,IAAT,CAAcS,WAAd,CAA0BV,iBAA1B;AACA,SAAON,QAAP;AACD","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nfunction createHiddenTextElement(text) {\n  var textElement = document.createElement('span');\n  textElement.textContent = text; // @ts-ignore .all is a real property - https://drafts.csswg.org/css-cascade/#all-shorthand\n\n  textElement.style.all = 'unset'; // prevents scrolling to the end of the page\n\n  textElement.style.position = 'fixed';\n  textElement.style.top = '0';\n  textElement.style.clip = 'rect(0, 0, 0, 0)'; // used to preserve spaces and line breaks\n\n  textElement.style.whiteSpace = 'pre'; // do not inherit user-select (it may be `none`)\n\n  textElement.style.webkitUserSelect = 'text'; // @ts-ignore this one doesn't appear in the TS definitions for some reason\n\n  textElement.style.MozUserSelect = 'text';\n  textElement.style.msUserSelect = 'text';\n  textElement.style.userSelect = 'text';\n  return textElement;\n}\n\nexport function copyToClipboard(text) {\n  var isCopied = true;\n  var range = document.createRange();\n  var selection = window.getSelection();\n  var elementToBeCopied = createHiddenTextElement(text);\n  document.body.appendChild(elementToBeCopied);\n  range.selectNode(elementToBeCopied);\n\n  if (selection) {\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n\n  if (!document.execCommand('copy')) {\n    isCopied = false; // tslint:disable-next-line:no-console\n\n    console.warn('Unable to copy to clipboard.');\n  }\n\n  if (selection) {\n    if (typeof selection.removeRange === 'function') {\n      selection.removeRange(range);\n    } else {\n      selection.removeAllRanges();\n    }\n  }\n\n  document.body.removeChild(elementToBeCopied);\n  return isCopied;\n}"]},"metadata":{},"sourceType":"module"}