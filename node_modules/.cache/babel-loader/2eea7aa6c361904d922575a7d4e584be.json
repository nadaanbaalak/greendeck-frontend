{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.formatAuto = void 0;\n\nvar _predicate = require(\"../predicate\");\n\nvar _format_boolean = require(\"./format_boolean\");\n\nvar _format_date = require(\"./format_date\");\n\nvar _format_number = require(\"./format_number\");\n\nvar _format_text = require(\"./format_text\");\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\nvar formatAuto = function formatAuto(value) {\n  if ((0, _predicate.isNil)(value) || (0, _predicate.isNaN)(value)) {\n    return '';\n  }\n\n  if ((0, _predicate.isString)(value)) {\n    return (0, _format_text.formatText)(value);\n  }\n\n  if ((0, _predicate.isDate)(value)) {\n    return (0, _format_date.formatDate)(value);\n  }\n\n  if ((0, _predicate.isBoolean)(value)) {\n    return (0, _format_boolean.formatBoolean)(value);\n  }\n\n  if ((0, _predicate.isNumber)(value)) {\n    return (0, _format_number.formatNumber)(value);\n  }\n\n  if ((0, _predicate.isArray)(value)) {\n    return Array.isArray(value) ? value.map(function (item) {\n      return formatAuto(item);\n    }).join(', ') : formatAuto(value);\n  } // TODO not sure if we want that.. the (+) is that we show something, the (-) is that it's very technical\n\n\n  return JSON.stringify(value);\n};\n\nexports.formatAuto = formatAuto;","map":{"version":3,"sources":["/home/nadaanbaalak/greendeck/client/node_modules/@elastic/eui/lib/services/format/format_auto.js"],"names":["Object","defineProperty","exports","value","formatAuto","_predicate","require","_format_boolean","_format_date","_format_number","_format_text","isNil","isNaN","isString","formatText","isDate","formatDate","isBoolean","formatBoolean","isNumber","formatNumber","isArray","Array","map","item","join","JSON","stringify"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,UAAR,GAAqB,KAAK,CAA1B;;AAEA,IAAIC,UAAU,GAAGC,OAAO,CAAC,cAAD,CAAxB;;AAEA,IAAIC,eAAe,GAAGD,OAAO,CAAC,kBAAD,CAA7B;;AAEA,IAAIE,YAAY,GAAGF,OAAO,CAAC,eAAD,CAA1B;;AAEA,IAAIG,cAAc,GAAGH,OAAO,CAAC,iBAAD,CAA5B;;AAEA,IAAII,YAAY,GAAGJ,OAAO,CAAC,eAAD,CAA1B;AAEA;;;;;;;;;;;;;;;;;;;;AAkBA,IAAIF,UAAU,GAAG,SAASA,UAAT,CAAoBD,KAApB,EAA2B;AAC1C,MAAI,CAAC,GAAGE,UAAU,CAACM,KAAf,EAAsBR,KAAtB,KAAgC,CAAC,GAAGE,UAAU,CAACO,KAAf,EAAsBT,KAAtB,CAApC,EAAkE;AAChE,WAAO,EAAP;AACD;;AAED,MAAI,CAAC,GAAGE,UAAU,CAACQ,QAAf,EAAyBV,KAAzB,CAAJ,EAAqC;AACnC,WAAO,CAAC,GAAGO,YAAY,CAACI,UAAjB,EAA6BX,KAA7B,CAAP;AACD;;AAED,MAAI,CAAC,GAAGE,UAAU,CAACU,MAAf,EAAuBZ,KAAvB,CAAJ,EAAmC;AACjC,WAAO,CAAC,GAAGK,YAAY,CAACQ,UAAjB,EAA6Bb,KAA7B,CAAP;AACD;;AAED,MAAI,CAAC,GAAGE,UAAU,CAACY,SAAf,EAA0Bd,KAA1B,CAAJ,EAAsC;AACpC,WAAO,CAAC,GAAGI,eAAe,CAACW,aAApB,EAAmCf,KAAnC,CAAP;AACD;;AAED,MAAI,CAAC,GAAGE,UAAU,CAACc,QAAf,EAAyBhB,KAAzB,CAAJ,EAAqC;AACnC,WAAO,CAAC,GAAGM,cAAc,CAACW,YAAnB,EAAiCjB,KAAjC,CAAP;AACD;;AAED,MAAI,CAAC,GAAGE,UAAU,CAACgB,OAAf,EAAwBlB,KAAxB,CAAJ,EAAoC;AAClC,WAAOmB,KAAK,CAACD,OAAN,CAAclB,KAAd,IAAuBA,KAAK,CAACoB,GAAN,CAAU,UAAUC,IAAV,EAAgB;AACtD,aAAOpB,UAAU,CAACoB,IAAD,CAAjB;AACD,KAF6B,EAE3BC,IAF2B,CAEtB,IAFsB,CAAvB,GAESrB,UAAU,CAACD,KAAD,CAF1B;AAGD,GAzByC,CAyBxC;;;AAGF,SAAOuB,IAAI,CAACC,SAAL,CAAexB,KAAf,CAAP;AACD,CA7BD;;AA+BAD,OAAO,CAACE,UAAR,GAAqBA,UAArB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.formatAuto = void 0;\n\nvar _predicate = require(\"../predicate\");\n\nvar _format_boolean = require(\"./format_boolean\");\n\nvar _format_date = require(\"./format_date\");\n\nvar _format_number = require(\"./format_number\");\n\nvar _format_text = require(\"./format_text\");\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nvar formatAuto = function formatAuto(value) {\n  if ((0, _predicate.isNil)(value) || (0, _predicate.isNaN)(value)) {\n    return '';\n  }\n\n  if ((0, _predicate.isString)(value)) {\n    return (0, _format_text.formatText)(value);\n  }\n\n  if ((0, _predicate.isDate)(value)) {\n    return (0, _format_date.formatDate)(value);\n  }\n\n  if ((0, _predicate.isBoolean)(value)) {\n    return (0, _format_boolean.formatBoolean)(value);\n  }\n\n  if ((0, _predicate.isNumber)(value)) {\n    return (0, _format_number.formatNumber)(value);\n  }\n\n  if ((0, _predicate.isArray)(value)) {\n    return Array.isArray(value) ? value.map(function (item) {\n      return formatAuto(item);\n    }).join(', ') : formatAuto(value);\n  } // TODO not sure if we want that.. the (+) is that we show something, the (-) is that it's very technical\n\n\n  return JSON.stringify(value);\n};\n\nexports.formatAuto = formatAuto;"]},"metadata":{},"sourceType":"script"}