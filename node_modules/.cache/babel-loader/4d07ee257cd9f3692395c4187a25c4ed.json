{"ast":null,"code":"function _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\nimport React, { Fragment, useEffect, useMemo, useState } from 'react';\nimport PropTypes from \"prop-types\";\nimport { createPortal } from 'react-dom';\nimport { enqueueStateChange } from '../../services/react';\n\nfunction noop() {}\n\nfunction getElementText(element) {\n  return 'innerText' in element ? element.innerText : // TS thinks element.innerText always exists, however it doesn't in jest/jsdom enviornment\n  // @ts-ignore-next-line\n  element.textContent || undefined;\n}\n\nvar ObservedCell = function ObservedCell(_ref) {\n  var renderCellValue = _ref.renderCellValue,\n      i = _ref.i,\n      column = _ref.column,\n      onCellRender = _ref.onCellRender,\n      isExpandable = _ref.isExpandable;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      ref = _useState2[0],\n      setRef = _useState2[1];\n\n  useEffect(function () {\n    if (ref) {\n      // this is part of React's component lifecycle, onCellRender->setState are automatically batched\n      onCellRender(i, column, getElementText(ref));\n      var observer = new MutationObserver(function () {\n        // onMutation callbacks aren't in the component lifecycle, intentionally batch any effects\n        enqueueStateChange(onCellRender.bind(null, i, column, getElementText(ref)));\n      });\n      observer.observe(ref, {\n        characterData: true,\n        subtree: true,\n        attributes: true,\n        childList: true\n      });\n      return function () {\n        observer.disconnect();\n      };\n    }\n  }, [column, i, onCellRender, ref]);\n  var CellElement = renderCellValue;\n  return React.createElement(\"div\", {\n    ref: setRef\n  }, React.createElement(CellElement, {\n    rowIndex: i,\n    columnId: column.id,\n    setCellProps: noop,\n    isExpandable: isExpandable,\n    isExpanded: false,\n    isDetails: false\n  }));\n};\n\nObservedCell.propTypes = {\n  renderCellValue: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.func.isRequired]).isRequired,\n  onCellRender: PropTypes.func.isRequired,\n  i: PropTypes.number.isRequired,\n  column: PropTypes.shape({\n    /**\n       * The unique identifier for this column\n       */\n    id: PropTypes.string.isRequired,\n\n    /**\n       * A `ReactNode` used when rendering the column header. When providing complicated content, please make sure to utilize CSS to respect truncation as space allows. Check the docs example.\n       */\n    display: PropTypes.node,\n\n    /**\n       * A Schema to use for the column. Built-in values are ['boolean', 'currency', 'datetime', 'numeric', 'json'] but can be expanded by defining your own #EuiDataGrid `schemaDetectors` (for in-memory detection). In general, it is advised to pass in a value here when you are sure of the schema ahead of time, so that you don't need to rely on the automatic detection.\n       */\n    schema: PropTypes.string,\n\n    /**\n       * Defauls to true. Defines shether or not the column's cells can be expanded with a popup onClick / keydown.\n       */\n    isExpandable: PropTypes.bool,\n\n    /**\n       * Whether this column's width can be changed by the user, defaults to true\n       */\n    isResizable: PropTypes.bool,\n\n    /**\n       * Initial width (in pixels) of the column\n       */\n    initialWidth: PropTypes.number,\n\n    /**\n       * Whether this column is sortable\n       */\n    isSortable: PropTypes.bool,\n\n    /**\n       * Default sort direction of the column\n       */\n    defaultSortDirection: PropTypes.oneOf([\"asc\", \"desc\"])\n  }).isRequired,\n  isExpandable: PropTypes.bool.isRequired\n};\nexport var EuiDataGridInMemoryRenderer = function EuiDataGridInMemoryRenderer(_ref2) {\n  var inMemory = _ref2.inMemory,\n      columns = _ref2.columns,\n      rowCount = _ref2.rowCount,\n      renderCellValue = _ref2.renderCellValue,\n      onCellRender = _ref2.onCellRender;\n\n  var _useState3 = useState(function () {\n    return document.createDocumentFragment();\n  }),\n      _useState4 = _slicedToArray(_useState3, 1),\n      documentFragment = _useState4[0];\n\n  var rows = useMemo(function () {\n    var rows = [];\n\n    var _loop = function _loop(i) {\n      rows.push(React.createElement(Fragment, {\n        key: i\n      }, columns.map(function (column) {\n        var skipThisColumn = inMemory.skipColumns && inMemory.skipColumns.indexOf(column.id) !== -1;\n\n        if (skipThisColumn) {\n          return null;\n        }\n\n        var isExpandable = column.isExpandable !== undefined ? column.isExpandable : true;\n        return React.createElement(ObservedCell, {\n          key: column.id,\n          i: i,\n          renderCellValue: renderCellValue,\n          column: column,\n          onCellRender: onCellRender,\n          isExpandable: isExpandable\n        });\n      }).filter(function (cell) {\n        return cell != null;\n      })));\n    };\n\n    for (var i = 0; i < rowCount; i++) {\n      _loop(i);\n    }\n\n    return rows;\n  }, [rowCount, columns, inMemory.skipColumns, renderCellValue, onCellRender]);\n  return createPortal(React.createElement(Fragment, null, rows), documentFragment);\n};\nEuiDataGridInMemoryRenderer.propTypes = {\n  inMemory: PropTypes.shape({\n    /**\n        Given the data flow Sorting->Pagination:\n        Each step can be performed by service calls or in-memory by the grid.\n        However, we cannot allow any service calls after an in-memory operation.\n        E.g. if Pagination requires a service call the grid cannot perform\n        in-memory Sorting. This means a single value representing the\n        service / in-memory boundary can be used. Thus there are four states for in-memory's level:\n        * \"enhancements\" - no in-memory operations, but use the available data to enhance the grid\n        * \"pagination\" - only pagination is performed in-memory\n        * \"sorting\" - sorting & pagination is performed in-memory\n     */\n    level: PropTypes.oneOf([\"enhancements\", \"pagination\", \"sorting\"]).isRequired,\n\n    /**\n       * An array of column ids for the in-memory processing to skip\n       */\n    skipColumns: PropTypes.arrayOf(PropTypes.string.isRequired)\n  }).isRequired,\n  columns: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    display: PropTypes.node,\n    schema: PropTypes.string,\n    isExpandable: PropTypes.bool,\n    isResizable: PropTypes.bool,\n    initialWidth: PropTypes.number,\n    isSortable: PropTypes.bool,\n    defaultSortDirection: PropTypes.oneOf([\"asc\", \"desc\"])\n  }).isRequired).isRequired,\n  rowCount: PropTypes.number.isRequired,\n  renderCellValue: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.func.isRequired]).isRequired,\n  onCellRender: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["/home/nadaanbaalak/greendeck/client/node_modules/@elastic/eui/es/components/datagrid/data_grid_inmemory_renderer.js"],"names":["_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","TypeError","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_i","_s","next","done","push","value","length","err","Array","isArray","React","Fragment","useEffect","useMemo","useState","PropTypes","createPortal","enqueueStateChange","noop","getElementText","element","innerText","textContent","ObservedCell","_ref","renderCellValue","column","onCellRender","isExpandable","_useState","_useState2","ref","setRef","observer","MutationObserver","bind","observe","characterData","subtree","attributes","childList","disconnect","CellElement","createElement","rowIndex","columnId","id","setCellProps","isExpanded","isDetails","propTypes","oneOfType","func","isRequired","number","shape","string","display","node","schema","bool","isResizable","initialWidth","isSortable","defaultSortDirection","oneOf","EuiDataGridInMemoryRenderer","_ref2","inMemory","columns","rowCount","_useState3","document","createDocumentFragment","_useState4","documentFragment","rows","_loop","key","map","skipThisColumn","skipColumns","indexOf","filter","cell","level","arrayOf"],"mappings":"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","sourcesContent":["function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { Fragment, useEffect, useMemo, useState } from 'react';\nimport PropTypes from \"prop-types\";\nimport { createPortal } from 'react-dom';\nimport { enqueueStateChange } from '../../services/react';\n\nfunction noop() {}\n\nfunction getElementText(element) {\n  return 'innerText' in element ? element.innerText : // TS thinks element.innerText always exists, however it doesn't in jest/jsdom enviornment\n  // @ts-ignore-next-line\n  element.textContent || undefined;\n}\n\nvar ObservedCell = function ObservedCell(_ref) {\n  var renderCellValue = _ref.renderCellValue,\n      i = _ref.i,\n      column = _ref.column,\n      onCellRender = _ref.onCellRender,\n      isExpandable = _ref.isExpandable;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      ref = _useState2[0],\n      setRef = _useState2[1];\n\n  useEffect(function () {\n    if (ref) {\n      // this is part of React's component lifecycle, onCellRender->setState are automatically batched\n      onCellRender(i, column, getElementText(ref));\n      var observer = new MutationObserver(function () {\n        // onMutation callbacks aren't in the component lifecycle, intentionally batch any effects\n        enqueueStateChange(onCellRender.bind(null, i, column, getElementText(ref)));\n      });\n      observer.observe(ref, {\n        characterData: true,\n        subtree: true,\n        attributes: true,\n        childList: true\n      });\n      return function () {\n        observer.disconnect();\n      };\n    }\n  }, [column, i, onCellRender, ref]);\n  var CellElement = renderCellValue;\n  return React.createElement(\"div\", {\n    ref: setRef\n  }, React.createElement(CellElement, {\n    rowIndex: i,\n    columnId: column.id,\n    setCellProps: noop,\n    isExpandable: isExpandable,\n    isExpanded: false,\n    isDetails: false\n  }));\n};\n\nObservedCell.propTypes = {\n  renderCellValue: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.func.isRequired]).isRequired,\n  onCellRender: PropTypes.func.isRequired,\n  i: PropTypes.number.isRequired,\n  column: PropTypes.shape({\n    /**\n       * The unique identifier for this column\n       */\n    id: PropTypes.string.isRequired,\n\n    /**\n       * A `ReactNode` used when rendering the column header. When providing complicated content, please make sure to utilize CSS to respect truncation as space allows. Check the docs example.\n       */\n    display: PropTypes.node,\n\n    /**\n       * A Schema to use for the column. Built-in values are ['boolean', 'currency', 'datetime', 'numeric', 'json'] but can be expanded by defining your own #EuiDataGrid `schemaDetectors` (for in-memory detection). In general, it is advised to pass in a value here when you are sure of the schema ahead of time, so that you don't need to rely on the automatic detection.\n       */\n    schema: PropTypes.string,\n\n    /**\n       * Defauls to true. Defines shether or not the column's cells can be expanded with a popup onClick / keydown.\n       */\n    isExpandable: PropTypes.bool,\n\n    /**\n       * Whether this column's width can be changed by the user, defaults to true\n       */\n    isResizable: PropTypes.bool,\n\n    /**\n       * Initial width (in pixels) of the column\n       */\n    initialWidth: PropTypes.number,\n\n    /**\n       * Whether this column is sortable\n       */\n    isSortable: PropTypes.bool,\n\n    /**\n       * Default sort direction of the column\n       */\n    defaultSortDirection: PropTypes.oneOf([\"asc\", \"desc\"])\n  }).isRequired,\n  isExpandable: PropTypes.bool.isRequired\n};\nexport var EuiDataGridInMemoryRenderer = function EuiDataGridInMemoryRenderer(_ref2) {\n  var inMemory = _ref2.inMemory,\n      columns = _ref2.columns,\n      rowCount = _ref2.rowCount,\n      renderCellValue = _ref2.renderCellValue,\n      onCellRender = _ref2.onCellRender;\n\n  var _useState3 = useState(function () {\n    return document.createDocumentFragment();\n  }),\n      _useState4 = _slicedToArray(_useState3, 1),\n      documentFragment = _useState4[0];\n\n  var rows = useMemo(function () {\n    var rows = [];\n\n    var _loop = function _loop(i) {\n      rows.push(React.createElement(Fragment, {\n        key: i\n      }, columns.map(function (column) {\n        var skipThisColumn = inMemory.skipColumns && inMemory.skipColumns.indexOf(column.id) !== -1;\n\n        if (skipThisColumn) {\n          return null;\n        }\n\n        var isExpandable = column.isExpandable !== undefined ? column.isExpandable : true;\n        return React.createElement(ObservedCell, {\n          key: column.id,\n          i: i,\n          renderCellValue: renderCellValue,\n          column: column,\n          onCellRender: onCellRender,\n          isExpandable: isExpandable\n        });\n      }).filter(function (cell) {\n        return cell != null;\n      })));\n    };\n\n    for (var i = 0; i < rowCount; i++) {\n      _loop(i);\n    }\n\n    return rows;\n  }, [rowCount, columns, inMemory.skipColumns, renderCellValue, onCellRender]);\n  return createPortal(React.createElement(Fragment, null, rows), documentFragment);\n};\nEuiDataGridInMemoryRenderer.propTypes = {\n  inMemory: PropTypes.shape({\n    /**\n        Given the data flow Sorting->Pagination:\n        Each step can be performed by service calls or in-memory by the grid.\n        However, we cannot allow any service calls after an in-memory operation.\n        E.g. if Pagination requires a service call the grid cannot perform\n        in-memory Sorting. This means a single value representing the\n        service / in-memory boundary can be used. Thus there are four states for in-memory's level:\n        * \"enhancements\" - no in-memory operations, but use the available data to enhance the grid\n        * \"pagination\" - only pagination is performed in-memory\n        * \"sorting\" - sorting & pagination is performed in-memory\n     */\n    level: PropTypes.oneOf([\"enhancements\", \"pagination\", \"sorting\"]).isRequired,\n\n    /**\n       * An array of column ids for the in-memory processing to skip\n       */\n    skipColumns: PropTypes.arrayOf(PropTypes.string.isRequired)\n  }).isRequired,\n  columns: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    display: PropTypes.node,\n    schema: PropTypes.string,\n    isExpandable: PropTypes.bool,\n    isResizable: PropTypes.bool,\n    initialWidth: PropTypes.number,\n    isSortable: PropTypes.bool,\n    defaultSortDirection: PropTypes.oneOf([\"asc\", \"desc\"])\n  }).isRequired).isRequired,\n  rowCount: PropTypes.number.isRequired,\n  renderCellValue: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.func.isRequired]).isRequired,\n  onCellRender: PropTypes.func.isRequired\n};"]},"metadata":{},"sourceType":"module"}