{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.formatNumber = void 0;\n\nvar _numeral = _interopRequireDefault(require(\"numeral\"));\n\nvar _predicate = require(\"../predicate\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\nvar numberFormatAliases = {\n  decimal1: '0,0.0',\n  decimal2: '0,0.00',\n  decimal3: '0,0.000',\n  ordinal: '0o',\n  integer: '0,0'\n};\n\nvar formatNumber = function formatNumber(value) {\n  var numberFormatOrConfig = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var format;\n  var nil = '';\n  var round;\n\n  if ((0, _predicate.isString)(numberFormatOrConfig)) {\n    format = numberFormatOrConfig;\n  } else {\n    format = numberFormatOrConfig.format;\n    nil = numberFormatOrConfig.nil || '';\n    round = numberFormatOrConfig.round;\n  }\n\n  if (!format) {\n    return (0, _predicate.isNil)(value) ? nil : value.toString();\n  }\n\n  var roundingFunc = round ? Math.round : Math.floor;\n  var numberFormat = numberFormatAliases[format] || format;\n  return (0, _predicate.isNil)(value) ? nil : (0, _numeral.default)(value).format(numberFormat, roundingFunc);\n};\n\nexports.formatNumber = formatNumber;","map":{"version":3,"sources":["/home/nadaanbaalak/greendeck/client/node_modules/@elastic/eui/lib/services/format/format_number.js"],"names":["Object","defineProperty","exports","value","formatNumber","_numeral","_interopRequireDefault","require","_predicate","obj","__esModule","default","numberFormatAliases","decimal1","decimal2","decimal3","ordinal","integer","numberFormatOrConfig","arguments","length","undefined","format","nil","round","isString","isNil","toString","roundingFunc","Math","floor","numberFormat"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,YAAR,GAAuB,KAAK,CAA5B;;AAEA,IAAIC,QAAQ,GAAGC,sBAAsB,CAACC,OAAO,CAAC,SAAD,CAAR,CAArC;;AAEA,IAAIC,UAAU,GAAGD,OAAO,CAAC,cAAD,CAAxB;;AAEA,SAASD,sBAAT,CAAgCG,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEE,IAAAA,OAAO,EAAEF;AAAX,GAArC;AAAwD;AAE/F;;;;;;;;;;;;;;;;;;;;AAkBA,IAAIG,mBAAmB,GAAG;AACxBC,EAAAA,QAAQ,EAAE,OADc;AAExBC,EAAAA,QAAQ,EAAE,QAFc;AAGxBC,EAAAA,QAAQ,EAAE,SAHc;AAIxBC,EAAAA,OAAO,EAAE,IAJe;AAKxBC,EAAAA,OAAO,EAAE;AALe,CAA1B;;AAQA,IAAIb,YAAY,GAAG,SAASA,YAAT,CAAsBD,KAAtB,EAA6B;AAC9C,MAAIe,oBAAoB,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAA/F;AACA,MAAIG,MAAJ;AACA,MAAIC,GAAG,GAAG,EAAV;AACA,MAAIC,KAAJ;;AAEA,MAAI,CAAC,GAAGhB,UAAU,CAACiB,QAAf,EAAyBP,oBAAzB,CAAJ,EAAoD;AAClDI,IAAAA,MAAM,GAAGJ,oBAAT;AACD,GAFD,MAEO;AACLI,IAAAA,MAAM,GAAGJ,oBAAoB,CAACI,MAA9B;AACAC,IAAAA,GAAG,GAAGL,oBAAoB,CAACK,GAArB,IAA4B,EAAlC;AACAC,IAAAA,KAAK,GAAGN,oBAAoB,CAACM,KAA7B;AACD;;AAED,MAAI,CAACF,MAAL,EAAa;AACX,WAAO,CAAC,GAAGd,UAAU,CAACkB,KAAf,EAAsBvB,KAAtB,IAA+BoB,GAA/B,GAAqCpB,KAAK,CAACwB,QAAN,EAA5C;AACD;;AAED,MAAIC,YAAY,GAAGJ,KAAK,GAAGK,IAAI,CAACL,KAAR,GAAgBK,IAAI,CAACC,KAA7C;AACA,MAAIC,YAAY,GAAGnB,mBAAmB,CAACU,MAAD,CAAnB,IAA+BA,MAAlD;AACA,SAAO,CAAC,GAAGd,UAAU,CAACkB,KAAf,EAAsBvB,KAAtB,IAA+BoB,GAA/B,GAAqC,CAAC,GAAGlB,QAAQ,CAACM,OAAb,EAAsBR,KAAtB,EAA6BmB,MAA7B,CAAoCS,YAApC,EAAkDH,YAAlD,CAA5C;AACD,CArBD;;AAuBA1B,OAAO,CAACE,YAAR,GAAuBA,YAAvB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.formatNumber = void 0;\n\nvar _numeral = _interopRequireDefault(require(\"numeral\"));\n\nvar _predicate = require(\"../predicate\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nvar numberFormatAliases = {\n  decimal1: '0,0.0',\n  decimal2: '0,0.00',\n  decimal3: '0,0.000',\n  ordinal: '0o',\n  integer: '0,0'\n};\n\nvar formatNumber = function formatNumber(value) {\n  var numberFormatOrConfig = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var format;\n  var nil = '';\n  var round;\n\n  if ((0, _predicate.isString)(numberFormatOrConfig)) {\n    format = numberFormatOrConfig;\n  } else {\n    format = numberFormatOrConfig.format;\n    nil = numberFormatOrConfig.nil || '';\n    round = numberFormatOrConfig.round;\n  }\n\n  if (!format) {\n    return (0, _predicate.isNil)(value) ? nil : value.toString();\n  }\n\n  var roundingFunc = round ? Math.round : Math.floor;\n  var numberFormat = numberFormatAliases[format] || format;\n  return (0, _predicate.isNil)(value) ? nil : (0, _numeral.default)(value).format(numberFormat, roundingFunc);\n};\n\nexports.formatNumber = formatNumber;"]},"metadata":{},"sourceType":"script"}