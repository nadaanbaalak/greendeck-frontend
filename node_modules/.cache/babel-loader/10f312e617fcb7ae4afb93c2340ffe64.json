{"ast":null,"code":"var _jsxFileName = \"/home/nadaanbaalak/greendeck/client/src/components/productDisplay.jsx\";\nimport React, { Component } from \"react\";\nimport ProductGrid from \"./productGrid\";\nimport SidePanel from \"./sidePanel\";\nimport axios from \"axios\";\nimport moment from \"moment\";\n\nclass Display extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      productsCount: 12,\n      skipCount: 0,\n      filters: [],\n      brandName: \"\",\n      discountRange: [0, 100],\n      inStock: false,\n      startDate: null,\n      endDate: null\n    };\n\n    this.handleRangeChange = value => {\n      this.setState({\n        discountRange: value\n      });\n    };\n\n    this.handleSwitchChange = () => {\n      this.setState({\n        inStock: !this.state.inStock\n      });\n    };\n\n    this.handleStartDateChange = date => {\n      const newDate = moment(date).format(\"YYYY-MM-DD\");\n      this.setState({\n        startDate: newDate\n      });\n    };\n\n    this.handleEndDateChange = date => {\n      const newDate = moment(date).format(\"YYYY-MM-DD\");\n      this.setState({\n        endDate: newDate\n      });\n    };\n\n    this.handleBrandChange = e => {\n      this.setState({\n        brandName: e.target.value\n      });\n    };\n\n    this.handleFilter = async () => {\n      let filters = [];\n      filters.push({\n        key: \"similar_products.meta.avg_discount\",\n        value: [this.state.discountRange[0] / 100, this.state.discountRange[1] / 100],\n        operator: \"between\"\n      });\n\n      if (this.state.brandName !== \"\") {\n        filters.push({\n          key: \"brand.name\",\n          value: this.state.brandName,\n          operator: \"contains\"\n        });\n      }\n\n      if (this.state.inStock === true) {\n        filters.push({\n          key: \"stock.available\",\n          value: this.state.inStock,\n          operator: \"exact\"\n        });\n      }\n\n      if (this.state.startDate !== \"\" && this.state.endDate !== \"\") {\n        filters.push({\n          key: \"created_at\",\n          value: [this.state.startDate, this.state.endDate],\n          operator: \"between\"\n        });\n      }\n\n      console.log(filters);\n    };\n  }\n\n  async componentDidMount() {}\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(SidePanel, {\n      onRangeChange: this.handleRangeChange,\n      onSwitchChange: this.handleSwitchChange,\n      onStartDateChange: this.handleStartDateChange,\n      onEndDateChange: this.handleEndDateChange,\n      onBrandChange: this.handleBrandChange,\n      onClick: this.handleFilter,\n      dualValue: this.state.discountRange,\n      isSwitchChecked: this.state.inStock,\n      startDate: this.state.startDate,\n      endDate: this.state.endDate,\n      brandName: this.state.brandName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ProductGrid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default Display;\n/*\n\n\n*/","map":{"version":3,"sources":["/home/nadaanbaalak/greendeck/client/src/components/productDisplay.jsx"],"names":["React","Component","ProductGrid","SidePanel","axios","moment","Display","state","products","productsCount","skipCount","filters","brandName","discountRange","inStock","startDate","endDate","handleRangeChange","value","setState","handleSwitchChange","handleStartDateChange","date","newDate","format","handleEndDateChange","handleBrandChange","e","target","handleFilter","push","key","operator","console","log","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ProductGrid from \"./productGrid\";\nimport SidePanel from \"./sidePanel\";\nimport axios from \"axios\";\nimport moment from \"moment\";\n\nclass Display extends Component {\n  state = {\n    products: [],\n    productsCount: 12,\n    skipCount: 0,\n    filters: [],\n    brandName: \"\",\n    discountRange: [0, 100],\n    inStock: false,\n    startDate: null,\n    endDate: null,\n  };\n\n  handleRangeChange = (value) => {\n    this.setState({ discountRange: value });\n  };\n\n  handleSwitchChange = () => {\n    this.setState({ inStock: !this.state.inStock });\n  };\n\n  handleStartDateChange = (date) => {\n    const newDate = moment(date).format(\"YYYY-MM-DD\");\n    this.setState({\n      startDate: newDate,\n    });\n  };\n\n  handleEndDateChange = (date) => {\n    const newDate = moment(date).format(\"YYYY-MM-DD\");\n    this.setState({\n      endDate: newDate,\n    });\n  };\n\n  handleBrandChange = (e) => {\n    this.setState({ brandName: e.target.value });\n  };\n\n  handleFilter = async () => {\n    let filters = [];\n    filters.push({\n      key: \"similar_products.meta.avg_discount\",\n      value: [\n        this.state.discountRange[0] / 100,\n        this.state.discountRange[1] / 100,\n      ],\n      operator: \"between\",\n    });\n    if (this.state.brandName !== \"\") {\n      filters.push({\n        key: \"brand.name\",\n        value: this.state.brandName,\n        operator: \"contains\",\n      });\n    }\n    if (this.state.inStock === true) {\n      filters.push({\n        key: \"stock.available\",\n        value: this.state.inStock,\n        operator: \"exact\",\n      });\n    }\n    if (this.state.startDate !== \"\" && this.state.endDate !== \"\") {\n      filters.push({\n        key: \"created_at\",\n        value: [this.state.startDate, this.state.endDate],\n        operator: \"between\",\n      });\n    }\n    console.log(filters);\n  };\n\n  async componentDidMount() {}\n\n  render() {\n    return (\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-2\">\n            <SidePanel\n              onRangeChange={this.handleRangeChange}\n              onSwitchChange={this.handleSwitchChange}\n              onStartDateChange={this.handleStartDateChange}\n              onEndDateChange={this.handleEndDateChange}\n              onBrandChange={this.handleBrandChange}\n              onClick={this.handleFilter}\n              dualValue={this.state.discountRange}\n              isSwitchChecked={this.state.inStock}\n              startDate={this.state.startDate}\n              endDate={this.state.endDate}\n              brandName={this.state.brandName}\n            />\n          </div>\n          <div className=\"col\">\n            <ProductGrid />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Display;\n/*\n\n\n*/\n"]},"metadata":{},"sourceType":"module"}