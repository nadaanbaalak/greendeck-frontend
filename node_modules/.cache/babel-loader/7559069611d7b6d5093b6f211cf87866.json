{"ast":null,"code":"function _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\nimport { useMemo, useState } from 'react';\n\nvar generateRandomColor = function generateRandomColor() {\n  return (// https://www.paulirish.com/2009/random-hex-color-code-snippets/\n    \"#\".concat(Math.floor(Math.random() * 16777215).toString(16))\n  );\n};\n\nexport var useColorStopsState = function useColorStopsState() {\n  var useRandomColor = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  var initialColorStops = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [{\n    stop: 20,\n    color: '#54B399'\n  }, {\n    stop: 50,\n    color: '#D36086'\n  }, {\n    stop: 65,\n    color: '#9170B8'\n  }];\n\n  var _useState = useState(generateRandomColor()),\n      _useState2 = _slicedToArray(_useState, 2),\n      addColor = _useState2[0],\n      setAddColor = _useState2[1];\n\n  var _useState3 = useState(initialColorStops),\n      _useState4 = _slicedToArray(_useState3, 2),\n      colorStops = _useState4[0],\n      setColorStops = _useState4[1];\n\n  var updateColorStops = function updateColorStops(colorStops) {\n    setColorStops(colorStops);\n\n    if (useRandomColor) {\n      setAddColor(generateRandomColor());\n    }\n  };\n\n  return [colorStops, updateColorStops, addColor];\n};\nexport var useColorPickerState = function useColorPickerState() {\n  var initialColor = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n  var _useState5 = useState(initialColor),\n      _useState6 = _slicedToArray(_useState5, 2),\n      color = _useState6[0],\n      setColorValue = _useState6[1];\n\n  var _useState7 = useState(true),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isValid = _useState8[0],\n      setIsValid = _useState8[1];\n\n  var setColor = function setColor(text, _ref) {\n    var isValid = _ref.isValid;\n    setColorValue(text);\n    setIsValid(isValid);\n  };\n\n  var errors = useMemo(function () {\n    var hasErrors = !isValid;\n    return hasErrors ? ['Provide a valid color value'] : null;\n  }, [isValid]);\n  return [color, setColor, errors];\n};","map":{"version":3,"sources":["/home/nadaanbaalak/greendeck/client/node_modules/@elastic/eui/es/services/color_picker/color_picker.js"],"names":["_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","TypeError","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_i","_s","next","done","push","value","length","err","Array","isArray","useMemo","useState","generateRandomColor","concat","Math","floor","random","useColorStopsState","useRandomColor","arguments","initialColorStops","stop","color","_useState","_useState2","addColor","setAddColor","_useState3","_useState4","colorStops","setColorStops","updateColorStops","useColorPickerState","initialColor","_useState5","_useState6","setColorValue","_useState7","_useState8","isValid","setIsValid","setColor","text","_ref","errors","hasErrors"],"mappings":"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","sourcesContent":["function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useMemo, useState } from 'react';\n\nvar generateRandomColor = function generateRandomColor() {\n  return (// https://www.paulirish.com/2009/random-hex-color-code-snippets/\n    \"#\".concat(Math.floor(Math.random() * 16777215).toString(16))\n  );\n};\n\nexport var useColorStopsState = function useColorStopsState() {\n  var useRandomColor = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  var initialColorStops = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [{\n    stop: 20,\n    color: '#54B399'\n  }, {\n    stop: 50,\n    color: '#D36086'\n  }, {\n    stop: 65,\n    color: '#9170B8'\n  }];\n\n  var _useState = useState(generateRandomColor()),\n      _useState2 = _slicedToArray(_useState, 2),\n      addColor = _useState2[0],\n      setAddColor = _useState2[1];\n\n  var _useState3 = useState(initialColorStops),\n      _useState4 = _slicedToArray(_useState3, 2),\n      colorStops = _useState4[0],\n      setColorStops = _useState4[1];\n\n  var updateColorStops = function updateColorStops(colorStops) {\n    setColorStops(colorStops);\n\n    if (useRandomColor) {\n      setAddColor(generateRandomColor());\n    }\n  };\n\n  return [colorStops, updateColorStops, addColor];\n};\nexport var useColorPickerState = function useColorPickerState() {\n  var initialColor = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n  var _useState5 = useState(initialColor),\n      _useState6 = _slicedToArray(_useState5, 2),\n      color = _useState6[0],\n      setColorValue = _useState6[1];\n\n  var _useState7 = useState(true),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isValid = _useState8[0],\n      setIsValid = _useState8[1];\n\n  var setColor = function setColor(text, _ref) {\n    var isValid = _ref.isValid;\n    setColorValue(text);\n    setIsValid(isValid);\n  };\n\n  var errors = useMemo(function () {\n    var hasErrors = !isValid;\n    return hasErrors ? ['Provide a valid color value'] : null;\n  }, [isValid]);\n  return [color, setColor, errors];\n};"]},"metadata":{},"sourceType":"module"}