{"ast":null,"code":"/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport uuid from 'uuid';\n/**\n * This function returns a function to generate ids.\n * This can be used to generate unique, but predictable ids to pair labels\n * with their inputs. It takes an optional prefix as a parameter. If you don't\n * specify it, it generates a random id prefix. If you specify a custom prefix\n * it should begin with an letter to be HTML4 compliant.\n */\n\nexport function htmlIdGenerator() {\n  var idPrefix = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var staticUuid = uuid.v1();\n  return function () {\n    var idSuffix = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var prefix = \"\".concat(idPrefix).concat(idPrefix !== '' ? '_' : 'i');\n    var suffix = idSuffix ? \"_\".concat(idSuffix) : '';\n    return \"\".concat(prefix).concat(suffix ? staticUuid : uuid.v1()).concat(suffix);\n  };\n}","map":{"version":3,"sources":["/home/nadaanbaalak/greendeck/client/node_modules/@elastic/eui/es/services/accessibility/html_id_generator.js"],"names":["uuid","htmlIdGenerator","idPrefix","arguments","length","undefined","staticUuid","v1","idSuffix","prefix","concat","suffix"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,IAAP,MAAiB,MAAjB;AACA;;;;;;;;AAQA,OAAO,SAASC,eAAT,GAA2B;AAChC,MAAIC,QAAQ,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAnF;AACA,MAAIG,UAAU,GAAGN,IAAI,CAACO,EAAL,EAAjB;AACA,SAAO,YAAY;AACjB,QAAIC,QAAQ,GAAGL,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAnF;AACA,QAAIM,MAAM,GAAG,GAAGC,MAAH,CAAUR,QAAV,EAAoBQ,MAApB,CAA2BR,QAAQ,KAAK,EAAb,GAAkB,GAAlB,GAAwB,GAAnD,CAAb;AACA,QAAIS,MAAM,GAAGH,QAAQ,GAAG,IAAIE,MAAJ,CAAWF,QAAX,CAAH,GAA0B,EAA/C;AACA,WAAO,GAAGE,MAAH,CAAUD,MAAV,EAAkBC,MAAlB,CAAyBC,MAAM,GAAGL,UAAH,GAAgBN,IAAI,CAACO,EAAL,EAA/C,EAA0DG,MAA1D,CAAiEC,MAAjE,CAAP;AACD,GALD;AAMD","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport uuid from 'uuid';\n/**\n * This function returns a function to generate ids.\n * This can be used to generate unique, but predictable ids to pair labels\n * with their inputs. It takes an optional prefix as a parameter. If you don't\n * specify it, it generates a random id prefix. If you specify a custom prefix\n * it should begin with an letter to be HTML4 compliant.\n */\n\nexport function htmlIdGenerator() {\n  var idPrefix = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var staticUuid = uuid.v1();\n  return function () {\n    var idSuffix = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var prefix = \"\".concat(idPrefix).concat(idPrefix !== '' ? '_' : 'i');\n    var suffix = idSuffix ? \"_\".concat(idSuffix) : '';\n    return \"\".concat(prefix).concat(suffix ? staticUuid : uuid.v1()).concat(suffix);\n  };\n}"]},"metadata":{},"sourceType":"module"}