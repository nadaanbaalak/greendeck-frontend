"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.EuiHeader = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _header_section = require("./header_section");

var _header_breadcrumbs = require("./header_breadcrumbs");

/*
 * Licensed to Elasticsearch B.V. under one or more contributor
 * license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright
 * ownership. Elasticsearch B.V. licenses this file to you under
 * the Apache License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
function createHeaderSection(sections, border) {
  return sections.map(function (section, index) {
    return _react.default.createElement(_header_section.EuiHeaderSectionItem, {
      key: index,
      border: border
    }, section);
  });
}

var EuiHeader = function EuiHeader(_ref) {
  var children = _ref.children,
      className = _ref.className,
      sections = _ref.sections,
      _ref$position = _ref.position,
      position = _ref$position === void 0 ? 'static' : _ref$position,
      rest = (0, _objectWithoutProperties2.default)(_ref, ["children", "className", "sections", "position"]);
  var classes = (0, _classnames.default)('euiHeader', "euiHeader--".concat(position), className);
  (0, _react.useEffect)(function () {
    if (position === 'fixed') {
      document.body.classList.add('euiBody--headerIsFixed');
    }

    return function () {
      document.body.classList.remove('euiBody--headerIsFixed');
    };
  }, [position]);
  var contents;

  if (sections) {
    if (children) {
      // In case both children and sections are passed, warn in the console that the children will be disregarded
      console.warn('EuiHeader cannot accept both `children` and `sections`. It will disregard the `children`.');
    }

    contents = sections.map(function (section, index) {
      var content = [];

      if (section.items) {
        // Items get wrapped in EuiHeaderSection and each item in a EuiHeaderSectionItem
        content.push(_react.default.createElement(_header_section.EuiHeaderSection, {
          key: "items-".concat(index)
        }, createHeaderSection(section.items, section.borders)));
      }

      if (section.breadcrumbs) {
        content.push( // Breadcrumbs are separate and cannot be contained in a EuiHeaderSection
        // in order for truncation to work
        _react.default.createElement(_header_breadcrumbs.EuiHeaderBreadcrumbs, (0, _extends2.default)({
          key: "breadcrumbs-".concat(index),
          breadcrumbs: section.breadcrumbs
        }, section.breadcrumbProps)));
      }

      return content;
    });
  } else {
    contents = children;
  }

  return _react.default.createElement("div", (0, _extends2.default)({
    className: classes
  }, rest), contents);
};

exports.EuiHeader = EuiHeader;
EuiHeader.propTypes = {
  className: _propTypes.default.string,
  "aria-label": _propTypes.default.string,
  "data-test-subj": _propTypes.default.string,

  /**
       * An array of objects to wrap in a #EuiHeaderSection.
       * Each section is spaced using `space-between`.
       * See #EuiHeaderSectionsProp for object details.
       * This prop disregards the prop `children` if both are passed.
       */
  sections: _propTypes.default.arrayOf(_propTypes.default.shape({
    /**
       * An arry of items that will be wrapped in a #EuiHeaderSectionItem
       */
    items: _propTypes.default.arrayOf(_propTypes.default.node.isRequired),

    /**
       * Apply the passed border side to each #EuiHeaderSectionItem
       */
    borders: _propTypes.default.oneOf(["left", "right", "none"]),

    /**
       * Breadcrumbs in the header cannot be wrapped in a #EuiHeaderSection in order for truncation to work.
       * Simply pass the array of Breadcrumb objects
       */
    breadcrumbs: _propTypes.default.arrayOf(_propTypes.default.shape({
      className: _propTypes.default.string,
      "aria-label": _propTypes.default.string,
      "data-test-subj": _propTypes.default.string,
      text: _propTypes.default.node.isRequired,
      href: _propTypes.default.string,
      onClick: _propTypes.default.func,
      truncate: _propTypes.default.bool
    }).isRequired),

    /**
       * Other props to pass to #EuiHeaderBreadcrumbs
       */
    breadcrumbProps: _propTypes.default.any
  }).isRequired),

  /**
       * Helper that positions the header against the window body and
       * adds the correct amount of top padding to the window when in `fixed` mode
       */
  position: _propTypes.default.oneOf(["static", "fixed"])
};
EuiHeader.__docgenInfo = {
  "description": "",
  "methods": [],
  "displayName": "EuiHeader",
  "props": {
    "position": {
      "defaultValue": {
        "value": "'static'",
        "computed": false
      },
      "type": {
        "name": "enum",
        "value": [{
          "value": "\"static\"",
          "computed": false
        }, {
          "value": "\"fixed\"",
          "computed": false
        }]
      },
      "required": false,
      "description": "Helper that positions the header against the window body and\nadds the correct amount of top padding to the window when in `fixed` mode"
    },
    "className": {
      "type": {
        "name": "string"
      },
      "required": false,
      "description": ""
    },
    "aria-label": {
      "type": {
        "name": "string"
      },
      "required": false,
      "description": ""
    },
    "data-test-subj": {
      "type": {
        "name": "string"
      },
      "required": false,
      "description": ""
    },
    "sections": {
      "type": {
        "name": "arrayOf",
        "value": {
          "name": "shape",
          "value": {
            "items": {
              "name": "arrayOf",
              "value": {
                "name": "node"
              },
              "description": "An arry of items that will be wrapped in a #EuiHeaderSectionItem",
              "required": false
            },
            "borders": {
              "name": "enum",
              "value": [{
                "value": "\"left\"",
                "computed": false
              }, {
                "value": "\"right\"",
                "computed": false
              }, {
                "value": "\"none\"",
                "computed": false
              }],
              "description": "Apply the passed border side to each #EuiHeaderSectionItem",
              "required": false
            },
            "breadcrumbs": {
              "name": "arrayOf",
              "value": {
                "name": "shape",
                "value": {
                  "className": {
                    "name": "string",
                    "required": false
                  },
                  "aria-label": {
                    "name": "string",
                    "required": false
                  },
                  "data-test-subj": {
                    "name": "string",
                    "required": false
                  },
                  "text": {
                    "name": "node",
                    "required": true
                  },
                  "href": {
                    "name": "string",
                    "required": false
                  },
                  "onClick": {
                    "name": "func",
                    "required": false
                  },
                  "truncate": {
                    "name": "bool",
                    "required": false
                  }
                }
              },
              "description": "Breadcrumbs in the header cannot be wrapped in a #EuiHeaderSection in order for truncation to work.\nSimply pass the array of Breadcrumb objects",
              "required": false
            },
            "breadcrumbProps": {
              "name": "any",
              "description": "Other props to pass to #EuiHeaderBreadcrumbs",
              "required": false
            }
          }
        }
      },
      "required": false,
      "description": "An array of objects to wrap in a #EuiHeaderSection.\nEach section is spaced using `space-between`.\nSee #EuiHeaderSectionsProp for object details.\nThis prop disregards the prop `children` if both are passed."
    }
  }
};